/*
 * Esta classe fornece a matriz de rigidez de uma laje
 * O método requer o comprimento, a largura e o número de nós do elemento finito
 * A matriz de rigidez calculada não considera não considera a inércia
 */

package app.finiteelement;

/**
 *
 * @author André de Sousa
 */
public class MatrixK_Slabs {

    /**
     * Este método fornece a matriz de rigidez de uma laje
     *
     * @param a é o comprimento do elemento finito retangular
     * @param b é a largura do elemento finito retangular
     * @param nodes é o número de nós do elemento finito
     * @param matrixD é a matriz de elasticidade do elemento finito
     * @return
     */
    public static double[][] matrixK_ReissnerMindlin(double a, double b, int nodes, double[][] matrixD) {
        double[][] matrixK;

        if (a != 0 && b != 0 && nodes > 1) {
            double D1, D2, D3, D4;

            D1 = matrixD[0][0];
            D2 = matrixD[1][0];
            D3 = matrixD[2][2];
            D4 = matrixD[3][3];

            if (nodes == 4) {
                matrixK = new double[12][12];

                matrixK[0][0] = ((b * b + a * a) * D4) / (3 * a * b);
                matrixK[0][1] = (b * D4) / 6;
                matrixK[0][2] = (a * D4) / 6;
                matrixK[0][3] = -((2 * b * b - a * a) * D4) / (6 * a * b);
                matrixK[0][4] = (b * D4) / 6;
                matrixK[0][5] = (a * D4) / 12;
                matrixK[0][6] = -((b * b + a * a) * D4) / (6 * a * b);
                matrixK[0][7] = (b * D4) / 12;
                matrixK[0][8] = (a * D4) / 12;
                matrixK[0][9] = ((b * b - 2 * a * a) * D4) / (6 * a * b);
                matrixK[0][10] = (b * D4) / 12;
                matrixK[0][11] = (a * D4) / 6;

                matrixK[1][0] = (b * D4) / 6;
                matrixK[1][1] = (a * a * b * b * D4 + 3 * a * a * D3 + 3 * b * b * D1) / (9 * a * b);
                matrixK[1][2] = (D3 + D2) / 4;
                matrixK[1][3] = -(b * D4) / 6;
                matrixK[1][4] = (a * a * b * b * D4 + 3 * a * a * D3 - 6 * b * b * D1) / (18 * a * b);
                matrixK[1][5] = -(D3 - D2) / 4;
                matrixK[1][6] = -(b * D4) / 12;
                matrixK[1][7] = (a * a * b * b * D4 - 6 * a * a * D3 - 6 * b * b * D1) / (36 * a * b);
                matrixK[1][8] = -(D3 + D2) / 4;
                matrixK[1][9] = (b * D4) / 12;
                matrixK[1][10] = (a * a * b * b * D4 - 6 * a * a * D3 + 3 * b * b * D1) / (18 * a * b);
                matrixK[1][11] = (D3 - D2) / 4;

                matrixK[2][0] = (a * D4) / 6;
                matrixK[2][1] = (D3 + D2) / 4;
                matrixK[2][2] = (a * a * b * b * D4 + 3 * b * b * D3 + 3 * a * a * D1) / (9 * a * b);
                matrixK[2][3] = (a * D4) / 12;
                matrixK[2][4] = (D3 - D2) / 4;
                matrixK[2][5] = (a * a * b * b * D4 - 6 * b * b * D3 + 3 * a * a * D1) / (18 * a * b);
                matrixK[2][6] = -(a * D4) / 12;
                matrixK[2][7] = -(D3 + D2) / 4;
                matrixK[2][8] = (a * a * b * b * D4 - 6 * b * b * D3 - 6 * a * a * D1) / (36 * a * b);
                matrixK[2][9] = -(a * D4) / 6;
                matrixK[2][10] = -(D3 - D2) / 4;
                matrixK[2][11] = (a * a * b * b * D4 + 3 * b * b * D3 - 6 * a * a * D1) / (18 * a * b);

                matrixK[3][0] = -((2 * b * b - a * a) * D4) / (6 * a * b);
                matrixK[3][1] = -(b * D4) / 6;
                matrixK[3][2] = (a * D4) / 12;
                matrixK[3][3] = ((b * b + a * a) * D4) / (3 * a * b);
                matrixK[3][4] = -(b * D4) / 6;
                matrixK[3][5] = (a * D4) / 6;
                matrixK[3][6] = ((b * b - 2 * a * a) * D4) / (6 * a * b);
                matrixK[3][7] = -(b * D4) / 12;
                matrixK[3][8] = (a * D4) / 6;
                matrixK[3][9] = -((b * b + a * a) * D4) / (6 * a * b);
                matrixK[3][10] = -(b * D4) / 12;
                matrixK[3][11] = (a * D4) / 12;

                matrixK[4][0] = (b * D4) / 6;
                matrixK[4][1] = (a * a * b * b * D4 + 3 * a * a * D3 - 6 * b * b * D1) / (18 * a * b);
                matrixK[4][2] = (D3 - D2) / 4;
                matrixK[4][3] = -(b * D4) / 6;
                matrixK[4][4] = (a * a * b * b * D4 + 3 * a * a * D3 + 3 * b * b * D1) / (9 * a * b);
                matrixK[4][5] = -(D3 + D2) / 4;
                matrixK[4][6] = -(b * D4) / 12;
                matrixK[4][7] = (a * a * b * b * D4 - 6 * a * a * D3 + 3 * b * b * D1) / (18 * a * b);
                matrixK[4][8] = -(D3 - D2) / 4;
                matrixK[4][9] = (b * D4) / 12;
                matrixK[4][10] = (a * a * b * b * D4 - 6 * a * a * D3 - 6 * b * b * D1) / (36 * a * b);
                matrixK[4][11] = (D3 + D2) / 4;

                matrixK[5][0] = (a * D4) / 12;
                matrixK[5][1] = -(D3 - D2) / 4;
                matrixK[5][2] = (a * a * b * b * D4 - 6 * b * b * D3 + 3 * a * a * D1) / (18 * a * b);
                matrixK[5][3] = (a * D4) / 6;
                matrixK[5][4] = -(D3 + D2) / 4;
                matrixK[5][5] = (a * a * b * b * D4 + 3 * b * b * D3 + 3 * a * a * D1) / (9 * a * b);
                matrixK[5][6] = -(a * D4) / 6;
                matrixK[5][7] = (D3 - D2) / 4;
                matrixK[5][8] = (a * a * b * b * D4 + 3 * b * b * D3 - 6 * a * a * D1) / (18 * a * b);
                matrixK[5][9] = -(a * D4) / 12;
                matrixK[5][10] = (D3 + D2) / 4;
                matrixK[5][11] = (a * a * b * b * D4 - 6 * b * b * D3 - 6 * a * a * D1) / (36 * a * b);

                matrixK[6][0] = -((b * b + a * a) * D4) / (6 * a * b);
                matrixK[6][1] = -(b * D4) / 12;
                matrixK[6][2] = -(a * D4) / 12;
                matrixK[6][3] = ((b * b - 2 * a * a) * D4) / (6 * a * b);
                matrixK[6][4] = -(b * D4) / 12;
                matrixK[6][5] = -(a * D4) / 6;
                matrixK[6][6] = ((b * b + a * a) * D4) / (3 * a * b);
                matrixK[6][7] = -(b * D4) / 6;
                matrixK[6][8] = -(a * D4) / 6;
                matrixK[6][9] = -((2 * b * b - a * a) * D4) / (6 * a * b);
                matrixK[6][10] = -(b * D4) / 6;
                matrixK[6][11] = -(a * D4) / 12;

                matrixK[7][0] = (b * D4) / 12;
                matrixK[7][1] = (a * a * b * b * D4 - 6 * a * a * D3 - 6 * b * b * D1) / (36 * a * b);
                matrixK[7][2] = -(D3 + D2) / 4;
                matrixK[7][3] = -(b * D4) / 12;
                matrixK[7][4] = (a * a * b * b * D4 - 6 * a * a * D3 + 3 * b * b * D1) / (18 * a * b);
                matrixK[7][5] = (D3 - D2) / 4;
                matrixK[7][6] = -(b * D4) / 6;
                matrixK[7][7] = (a * a * b * b * D4 + 3 * a * a * D3 + 3 * b * b * D1) / (9 * a * b);
                matrixK[7][8] = (D3 + D2) / 4;
                matrixK[7][9] = (b * D4) / 6;
                matrixK[7][10] = (a * a * b * b * D4 + 3 * a * a * D3 - 6 * b * b * D1) / (18 * a * b);
                matrixK[7][11] = -(D3 - D2) / 4;

                matrixK[8][0] = (a * D4) / 12;
                matrixK[8][1] = -(D3 + D2) / 4;
                matrixK[8][2] = (a * a * b * b * D4 - 6 * b * b * D3 - 6 * a * a * D1) / (36 * a * b);
                matrixK[8][3] = (a * D4) / 6;
                matrixK[8][4] = -(D3 - D2) / 4;
                matrixK[8][5] = (a * a * b * b * D4 + 3 * b * b * D3 - 6 * a * a * D1) / (18 * a * b);
                matrixK[8][6] = -(a * D4) / 6;
                matrixK[8][7] = (D3 + D2) / 4;
                matrixK[8][8] = (a * a * b * b * D4 + 3 * b * b * D3 + 3 * a * a * D1) / (9 * a * b);
                matrixK[8][9] = -(a * D4) / 12;
                matrixK[8][10] = (D3 - D2) / 4;
                matrixK[8][11] = (a * a * b * b * D4 - 6 * b * b * D3 + 3 * a * a * D1) / (18 * a * b);

                matrixK[9][0] = ((b * b - 2 * a * a) * D4) / (6 * a * b);
                matrixK[9][1] = (b * D4) / 12;
                matrixK[9][2] = -(a * D4) / 6;
                matrixK[9][3] = -((b * b + a * a) * D4) / (6 * a * b);
                matrixK[9][4] = (b * D4) / 12;
                matrixK[9][5] = -(a * D4) / 12;
                matrixK[9][6] = -((2 * b * b - a * a) * D4) / (6 * a * b);
                matrixK[9][7] = (b * D4) / 6;
                matrixK[9][8] = -(a * D4) / 12;
                matrixK[9][9] = ((b * b + a * a) * D4) / (3 * a * b);
                matrixK[9][10] = (b * D4) / 6;
                matrixK[9][11] = -(a * D4) / 6;

                matrixK[10][0] = (b * D4) / 12;
                matrixK[10][1] = (a * a * b * b * D4 - 6 * a * a * D3 + 3 * b * b * D1) / (18 * a * b);
                matrixK[10][2] = -(D3 - D2) / 4;
                matrixK[10][3] = -(b * D4) / 12;
                matrixK[10][4] = (a * a * b * b * D4 - 6 * a * a * D3 - 6 * b * b * D1) / (36 * a * b);
                matrixK[10][5] = (D3 + D2) / 4;
                matrixK[10][6] = -(b * D4) / 6;
                matrixK[10][7] = (a * a * b * b * D4 + 3 * a * a * D3 - 6 * b * b * D1) / (18 * a * b);
                matrixK[10][8] = (D3 - D2) / 4;
                matrixK[10][9] = (b * D4) / 6;
                matrixK[10][10] = (a * a * b * b * D4 + 3 * a * a * D3 + 3 * b * b * D1) / (9 * a * b);
                matrixK[10][11] = -(D3 + D2) / 4;

                matrixK[11][0] = (a * D4) / 6;
                matrixK[11][1] = (D3 - D2) / 4;
                matrixK[11][2] = (a * a * b * b * D4 + 3 * b * b * D3 - 6 * a * a * D1) / (18 * a * b);
                matrixK[11][3] = (a * D4) / 12;
                matrixK[11][4] = (D3 + D2) / 4;
                matrixK[11][5] = (a * a * b * b * D4 - 6 * b * b * D3 - 6 * a * a * D1) / (36 * a * b);
                matrixK[11][6] = -(a * D4) / 12;
                matrixK[11][7] = -(D3 - D2) / 4;
                matrixK[11][8] = (a * a * b * b * D4 - 6 * b * b * D3 + 3 * a * a * D1) / (18 * a * b);
                matrixK[11][9] = -(a * D4) / 6;
                matrixK[11][10] = -(D3 + D2) / 4;
                matrixK[11][11] = (a * a * b * b * D4 + 3 * b * b * D3 + 3 * a * a * D1) / (9 * a * b);
            } else if (nodes == 8) {
                matrixK = new double[24][24];

                matrixK[0][0] = ((26 * b * b + 26 * a * a) * D4) / (45 * a * b);
                matrixK[0][1] = (b * D4) / 15;
                matrixK[0][2] = (a * D4) / 15;
                matrixK[0][3] = -((40 * b * b - 3 * a * a) * D4) / (45 * a * b);
                matrixK[0][4] = (b * D4) / 9;
                matrixK[0][5] = (13 * a * D4) / 90;
                matrixK[0][6] = ((28 * b * b + 17 * a * a) * D4) / (90 * a * b);
                matrixK[0][7] = -(2 * b * D4) / 45;
                matrixK[0][8] = -(a * D4) / 60;
                matrixK[0][9] = -((3 * b * b + 20 * a * a) * D4) / (45 * a * b);
                matrixK[0][10] = -(7 * b * D4) / 90;
                matrixK[0][11] = 0;
                matrixK[0][12] = ((23 * b * b + 23 * a * a) * D4) / (90 * a * b);
                matrixK[0][13] = -(b * D4) / 60;
                matrixK[0][14] = -(a * D4) / 60;
                matrixK[0][15] = -((20 * b * b + 3 * a * a) * D4) / (45 * a * b);
                matrixK[0][16] = 0;
                matrixK[0][17] = -(7 * a * D4) / 90;
                matrixK[0][18] = ((17 * b * b + 28 * a * a) * D4) / (90 * a * b);
                matrixK[0][19] = -(b * D4) / 60;
                matrixK[0][20] = -(2 * a * D4) / 45;
                matrixK[0][21] = ((3 * b * b - 40 * a * a) * D4) / (45 * a * b);
                matrixK[0][22] = (13 * b * D4) / 90;
                matrixK[0][23] = (a * D4) / 9;

                matrixK[1][0] = (b * D4) / 15;
                matrixK[1][1] = (3 * a * a * b * b * D4 + 52 * a * a * D3 + 52 * b * b * D1) / (90 * a * b);
                matrixK[1][2] = (17 * D3 + 17 * D2) / 36;
                matrixK[1][3] = -(b * D4) / 9;
                matrixK[1][4] = -(3 * a * a * b * b * D4 - 6 * a * a * D3 + 80 * b * b * D1) / (90 * a * b);
                matrixK[1][5] = -(5 * D3 - D2) / 9;
                matrixK[1][6] = (2 * b * D4) / 45;
                matrixK[1][7] = (a * a * b * b * D4 + 17 * a * a * D3 + 28 * b * b * D1) / (90 * a * b);
                matrixK[1][8] = (D3 - D2) / 12;
                matrixK[1][9] = (7 * b * D4) / 90;
                matrixK[1][10] = -(2 * a * a * b * b * D4 + 20 * a * a * D3 + 3 * b * b * D1) / (45 * a * b);
                matrixK[1][11] = -(D3 + D2) / 9;
                matrixK[1][12] = (b * D4) / 60;
                matrixK[1][13] = (3 * a * a * b * b * D4 + 46 * a * a * D3 + 46 * b * b * D1) / (180 * a * b);
                matrixK[1][14] = (7 * D3 + 7 * D2) / 36;
                matrixK[1][15] = 0;
                matrixK[1][16] = -(2 * a * a * b * b * D4 + 3 * a * a * D3 + 20 * b * b * D1) / (45 * a * b);
                matrixK[1][17] = -(D3 + D2) / 9;
                matrixK[1][18] = -(b * D4) / 60;
                matrixK[1][19] = (a * a * b * b * D4 + 28 * a * a * D3 + 17 * b * b * D1) / (90 * a * b);
                matrixK[1][20] = -(D3 - D2) / 12;
                matrixK[1][21] = -(7 * b * D4) / 90;
                matrixK[1][22] = -(3 * a * a * b * b * D4 + 80 * a * a * D3 - 6 * b * b * D1) / (90 * a * b);
                matrixK[1][23] = (D3 - 5 * D2) / 9;

                matrixK[2][0] = (a * D4) / 15;
                matrixK[2][1] = (17 * D3 + 17 * D2) / 36;
                matrixK[2][2] = (3 * a * a * b * b * D4 + 52 * b * b * D3 + 52 * a * a * D1) / (90 * a * b);
                matrixK[2][3] = -(7 * a * D4) / 90;
                matrixK[2][4] = (D3 - 5 * D2) / 9;
                matrixK[2][5] = -(3 * a * a * b * b * D4 + 80 * b * b * D3 - 6 * a * a * D1) / (90 * a * b);
                matrixK[2][6] = -(a * D4) / 60;
                matrixK[2][7] = -(D3 - D2) / 12;
                matrixK[2][8] = (a * a * b * b * D4 + 28 * b * b * D3 + 17 * a * a * D1) / (90 * a * b);
                matrixK[2][9] = 0;
                matrixK[2][10] = -(D3 + D2) / 9;
                matrixK[2][11] = -(2 * a * a * b * b * D4 + 3 * b * b * D3 + 20 * a * a * D1) / (45 * a * b);
                matrixK[2][12] = (a * D4) / 60;
                matrixK[2][13] = (7 * D3 + 7 * D2) / 36;
                matrixK[2][14] = (3 * a * a * b * b * D4 + 46 * b * b * D3 + 46 * a * a * D1) / (180 * a * b);
                matrixK[2][15] = (7 * a * D4) / 90;
                matrixK[2][16] = -(D3 + D2) / 9;
                matrixK[2][17] = -(2 * a * a * b * b * D4 + 20 * b * b * D3 + 3 * a * a * D1) / (45 * a * b);
                matrixK[2][18] = (2 * a * D4) / 45;
                matrixK[2][19] = (D3 - D2) / 12;
                matrixK[2][20] = (a * a * b * b * D4 + 17 * b * b * D3 + 28 * a * a * D1) / (90 * a * b);
                matrixK[2][21] = -(a * D4) / 9;
                matrixK[2][22] = -(5 * D3 - D2) / 9;
                matrixK[2][23] = -(3 * a * a * b * b * D4 - 6 * b * b * D3 + 80 * a * a * D1) / (90 * a * b);

                matrixK[3][0] = -((40 * b * b - 3 * a * a) * D4) / (45 * a * b);
                matrixK[3][1] = -(b * D4) / 9;
                matrixK[3][2] = -(7 * a * D4) / 90;
                matrixK[3][3] = ((80 * b * b + 24 * a * a) * D4) / (45 * a * b);
                matrixK[3][4] = 0;
                matrixK[3][5] = (4 * a * D4) / 15;
                matrixK[3][6] = -((40 * b * b - 3 * a * a) * D4) / (45 * a * b);
                matrixK[3][7] = (b * D4) / 9;
                matrixK[3][8] = -(7 * a * D4) / 90;
                matrixK[3][9] = 0;
                matrixK[3][10] = (2 * b * D4) / 9;
                matrixK[3][11] = (2 * a * D4) / 9;
                matrixK[3][12] = -((20 * b * b + 3 * a * a) * D4) / (45 * a * b);
                matrixK[3][13] = 0;
                matrixK[3][14] = -(7 * a * D4) / 90;
                matrixK[3][15] = ((40 * b * b - 24 * a * a) * D4) / (45 * a * b);
                matrixK[3][16] = 0;
                matrixK[3][17] = (4 * a * D4) / 15;
                matrixK[3][18] = -((20 * b * b + 3 * a * a) * D4) / (45 * a * b);
                matrixK[3][19] = 0;
                matrixK[3][20] = -(7 * a * D4) / 90;
                matrixK[3][21] = 0;
                matrixK[3][22] = -(2 * b * D4) / 9;
                matrixK[3][23] = (2 * a * D4) / 9;

                matrixK[4][0] = (b * D4) / 9;
                matrixK[4][1] = -(3 * a * a * b * b * D4 - 6 * a * a * D3 + 80 * b * b * D1) / (90 * a * b);
                matrixK[4][2] = (D3 - 5 * D2) / 9;
                matrixK[4][3] = 0;
                matrixK[4][4] = (8 * a * a * b * b * D4 + 24 * a * a * D3 + 80 * b * b * D1) / (45 * a * b);
                matrixK[4][5] = 0;
                matrixK[4][6] = -(b * D4) / 9;
                matrixK[4][7] = -(3 * a * a * b * b * D4 - 6 * a * a * D3 + 80 * b * b * D1) / (90 * a * b);
                matrixK[4][8] = -(D3 - 5 * D2) / 9;
                matrixK[4][9] = -(2 * b * D4) / 9;
                matrixK[4][10] = (a * b * D4) / 9;
                matrixK[4][11] = -(4 * D3 + 4 * D2) / 9;
                matrixK[4][12] = 0;
                matrixK[4][13] = -(2 * a * a * b * b * D4 + 3 * a * a * D3 + 20 * b * b * D1) / (45 * a * b);
                matrixK[4][14] = -(D3 + D2) / 9;
                matrixK[4][15] = 0;
                matrixK[4][16] = (4 * a * a * b * b * D4 - 24 * a * a * D3 + 40 * b * b * D1) / (45 * a * b);
                matrixK[4][17] = 0;
                matrixK[4][18] = 0;
                matrixK[4][19] = -(2 * a * a * b * b * D4 + 3 * a * a * D3 + 20 * b * b * D1) / (45 * a * b);
                matrixK[4][20] = (D3 + D2) / 9;
                matrixK[4][21] = (2 * b * D4) / 9;
                matrixK[4][22] = (a * b * D4) / 9;
                matrixK[4][23] = (4 * D3 + 4 * D2) / 9;

                matrixK[5][0] = (13 * a * D4) / 90;
                matrixK[5][1] = -(5 * D3 - D2) / 9;
                matrixK[5][2] = -(3 * a * a * b * b * D4 + 80 * b * b * D3 - 6 * a * a * D1) / (90 * a * b);
                matrixK[5][3] = (4 * a * D4) / 15;
                matrixK[5][4] = 0;
                matrixK[5][5] = (8 * a * a * b * b * D4 + 80 * b * b * D3 + 24 * a * a * D1) / (45 * a * b);
                matrixK[5][6] = (13 * a * D4) / 90;
                matrixK[5][7] = (5 * D3 - D2) / 9;
                matrixK[5][8] = -(3 * a * a * b * b * D4 + 80 * b * b * D3 - 6 * a * a * D1) / (90 * a * b);
                matrixK[5][9] = -(2 * a * D4) / 9;
                matrixK[5][10] = -(4 * D3 + 4 * D2) / 9;
                matrixK[5][11] = (a * b * D4) / 9;
                matrixK[5][12] = (7 * a * D4) / 90;
                matrixK[5][13] = -(D3 + D2) / 9;
                matrixK[5][14] = -(2 * a * a * b * b * D4 + 20 * b * b * D3 + 3 * a * a * D1) / (45 * a * b);
                matrixK[5][15] = -(4 * a * D4) / 15;
                matrixK[5][16] = 0;
                matrixK[5][17] = (4 * a * a * b * b * D4 + 40 * b * b * D3 - 24 * a * a * D1) / (45 * a * b);
                matrixK[5][18] = (7 * a * D4) / 90;
                matrixK[5][19] = (D3 + D2) / 9;
                matrixK[5][20] = -(2 * a * a * b * b * D4 + 20 * b * b * D3 + 3 * a * a * D1) / (45 * a * b);
                matrixK[5][21] = -(2 * a * D4) / 9;
                matrixK[5][22] = (4 * D3 + 4 * D2) / 9;
                matrixK[5][23] = (a * b * D4) / 9;

                matrixK[6][0] = ((28 * b * b + 17 * a * a) * D4) / (90 * a * b);
                matrixK[6][1] = (2 * b * D4) / 45;
                matrixK[6][2] = -(a * D4) / 60;
                matrixK[6][3] = -((40 * b * b - 3 * a * a) * D4) / (45 * a * b);
                matrixK[6][4] = -(b * D4) / 9;
                matrixK[6][5] = (13 * a * D4) / 90;
                matrixK[6][6] = ((26 * b * b + 26 * a * a) * D4) / (45 * a * b);
                matrixK[6][7] = -(b * D4) / 15;
                matrixK[6][8] = (a * D4) / 15;
                matrixK[6][9] = ((3 * b * b - 40 * a * a) * D4) / (45 * a * b);
                matrixK[6][10] = -(13 * b * D4) / 90;
                matrixK[6][11] = (a * D4) / 9;
                matrixK[6][12] = ((17 * b * b + 28 * a * a) * D4) / (90 * a * b);
                matrixK[6][13] = (b * D4) / 60;
                matrixK[6][14] = -(2 * a * D4) / 45;
                matrixK[6][15] = -((20 * b * b + 3 * a * a) * D4) / (45 * a * b);
                matrixK[6][16] = 0;
                matrixK[6][17] = -(7 * a * D4) / 90;
                matrixK[6][18] = ((23 * b * b + 23 * a * a) * D4) / (90 * a * b);
                matrixK[6][19] = (b * D4) / 60;
                matrixK[6][20] = -(a * D4) / 60;
                matrixK[6][21] = -((3 * b * b + 20 * a * a) * D4) / (45 * a * b);
                matrixK[6][22] = (7 * b * D4) / 90;
                matrixK[6][23] = 0;

                matrixK[7][0] = -(2 * b * D4) / 45;
                matrixK[7][1] = (a * a * b * b * D4 + 17 * a * a * D3 + 28 * b * b * D1) / (90 * a * b);
                matrixK[7][2] = -(D3 - D2) / 12;
                matrixK[7][3] = (b * D4) / 9;
                matrixK[7][4] = -(3 * a * a * b * b * D4 - 6 * a * a * D3 + 80 * b * b * D1) / (90 * a * b);
                matrixK[7][5] = (5 * D3 - D2) / 9;
                matrixK[7][6] = -(b * D4) / 15;
                matrixK[7][7] = (3 * a * a * b * b * D4 + 52 * a * a * D3 + 52 * b * b * D1) / (90 * a * b);
                matrixK[7][8] = -(17 * D3 + 17 * D2) / 36;
                matrixK[7][9] = (7 * b * D4) / 90;
                matrixK[7][10] = -(3 * a * a * b * b * D4 + 80 * a * a * D3 - 6 * b * b * D1) / (90 * a * b);
                matrixK[7][11] = -(D3 - 5 * D2) / 9;
                matrixK[7][12] = (b * D4) / 60;
                matrixK[7][13] = (a * a * b * b * D4 + 28 * a * a * D3 + 17 * b * b * D1) / (90 * a * b);
                matrixK[7][14] = (D3 - D2) / 12;
                matrixK[7][15] = 0;
                matrixK[7][16] = -(2 * a * a * b * b * D4 + 3 * a * a * D3 + 20 * b * b * D1) / (45 * a * b);
                matrixK[7][17] = (D3 + D2) / 9;
                matrixK[7][18] = -(b * D4) / 60;
                matrixK[7][19] = (3 * a * a * b * b * D4 + 46 * a * a * D3 + 46 * b * b * D1) / (180 * a * b);
                matrixK[7][20] = -(7 * D3 + 7 * D2) / 36;
                matrixK[7][21] = -(7 * b * D4) / 90;
                matrixK[7][22] = -(2 * a * a * b * b * D4 + 20 * a * a * D3 + 3 * b * b * D1) / (45 * a * b);
                matrixK[7][23] = (D3 + D2) / 9;

                matrixK[8][0] = -(a * D4) / 60;
                matrixK[8][1] = (D3 - D2) / 12;
                matrixK[8][2] = (a * a * b * b * D4 + 28 * b * b * D3 + 17 * a * a * D1) / (90 * a * b);
                matrixK[8][3] = -(7 * a * D4) / 90;
                matrixK[8][4] = -(D3 - 5 * D2) / 9;
                matrixK[8][5] = -(3 * a * a * b * b * D4 + 80 * b * b * D3 - 6 * a * a * D1) / (90 * a * b);
                matrixK[8][6] = (a * D4) / 15;
                matrixK[8][7] = -(17 * D3 + 17 * D2) / 36;
                matrixK[8][8] = (3 * a * a * b * b * D4 + 52 * b * b * D3 + 52 * a * a * D1) / (90 * a * b);
                matrixK[8][9] = -(a * D4) / 9;
                matrixK[8][10] = (5 * D3 - D2) / 9;
                matrixK[8][11] = -(3 * a * a * b * b * D4 - 6 * b * b * D3 + 80 * a * a * D1) / (90 * a * b);
                matrixK[8][12] = (2 * a * D4) / 45;
                matrixK[8][13] = -(D3 - D2) / 12;
                matrixK[8][14] = (a * a * b * b * D4 + 17 * b * b * D3 + 28 * a * a * D1) / (90 * a * b);
                matrixK[8][15] = (7 * a * D4) / 90;
                matrixK[8][16] = (D3 + D2) / 9;
                matrixK[8][17] = -(2 * a * a * b * b * D4 + 20 * b * b * D3 + 3 * a * a * D1) / (45 * a * b);
                matrixK[8][18] = (a * D4) / 60;
                matrixK[8][19] = -(7 * D3 + 7 * D2) / 36;
                matrixK[8][20] = (3 * a * a * b * b * D4 + 46 * b * b * D3 + 46 * a * a * D1) / (180 * a * b);
                matrixK[8][21] = 0;
                matrixK[8][22] = (D3 + D2) / 9;
                matrixK[8][23] = -(2 * a * a * b * b * D4 + 3 * b * b * D3 + 20 * a * a * D1) / (45 * a * b);

                matrixK[9][0] = -((3 * b * b + 20 * a * a) * D4) / (45 * a * b);
                matrixK[9][1] = (7 * b * D4) / 90;
                matrixK[9][2] = 0;
                matrixK[9][3] = 0;
                matrixK[9][4] = -(2 * b * D4) / 9;
                matrixK[9][5] = -(2 * a * D4) / 9;
                matrixK[9][6] = ((3 * b * b - 40 * a * a) * D4) / (45 * a * b);
                matrixK[9][7] = (7 * b * D4) / 90;
                matrixK[9][8] = -(a * D4) / 9;
                matrixK[9][9] = ((24 * b * b + 80 * a * a) * D4) / (45 * a * b);
                matrixK[9][10] = -(4 * b * D4) / 15;
                matrixK[9][11] = 0;
                matrixK[9][12] = ((3 * b * b - 40 * a * a) * D4) / (45 * a * b);
                matrixK[9][13] = (7 * b * D4) / 90;
                matrixK[9][14] = (a * D4) / 9;
                matrixK[9][15] = 0;
                matrixK[9][16] = -(2 * b * D4) / 9;
                matrixK[9][17] = (2 * a * D4) / 9;
                matrixK[9][18] = -((3 * b * b + 20 * a * a) * D4) / (45 * a * b);
                matrixK[9][19] = (7 * b * D4) / 90;
                matrixK[9][20] = 0;
                matrixK[9][21] = -((24 * b * b - 40 * a * a) * D4) / (45 * a * b);
                matrixK[9][22] = -(4 * b * D4) / 15;
                matrixK[9][23] = 0;

                matrixK[10][0] = -(7 * b * D4) / 90;
                matrixK[10][1] = -(2 * a * a * b * b * D4 + 20 * a * a * D3 + 3 * b * b * D1) / (45 * a * b);
                matrixK[10][2] = -(D3 + D2) / 9;
                matrixK[10][3] = (2 * b * D4) / 9;
                matrixK[10][4] = (a * b * D4) / 9;
                matrixK[10][5] = -(4 * D3 + 4 * D2) / 9;
                matrixK[10][6] = -(13 * b * D4) / 90;
                matrixK[10][7] = -(3 * a * a * b * b * D4 + 80 * a * a * D3 - 6 * b * b * D1) / (90 * a * b);
                matrixK[10][8] = (5 * D3 - D2) / 9;
                matrixK[10][9] = -(4 * b * D4) / 15;
                matrixK[10][10] = (8 * a * a * b * b * D4 + 80 * a * a * D3 + 24 * b * b * D1) / (45 * a * b);
                matrixK[10][11] = 0;
                matrixK[10][12] = -(13 * b * D4) / 90;
                matrixK[10][13] = -(3 * a * a * b * b * D4 + 80 * a * a * D3 - 6 * b * b * D1) / (90 * a * b);
                matrixK[10][14] = -(5 * D3 - D2) / 9;
                matrixK[10][15] = (2 * b * D4) / 9;
                matrixK[10][16] = (a * b * D4) / 9;
                matrixK[10][17] = (4 * D3 + 4 * D2) / 9;
                matrixK[10][18] = -(7 * b * D4) / 90;
                matrixK[10][19] = -(2 * a * a * b * b * D4 + 20 * a * a * D3 + 3 * b * b * D1) / (45 * a * b);
                matrixK[10][20] = (D3 + D2) / 9;
                matrixK[10][21] = (4 * b * D4) / 15;
                matrixK[10][22] = (4 * a * a * b * b * D4 + 40 * a * a * D3 - 24 * b * b * D1) / (45 * a * b);
                matrixK[10][23] = 0;

                matrixK[11][0] = 0;
                matrixK[11][1] = -(D3 + D2) / 9;
                matrixK[11][2] = -(2 * a * a * b * b * D4 + 3 * b * b * D3 + 20 * a * a * D1) / (45 * a * b);
                matrixK[11][3] = (2 * a * D4) / 9;
                matrixK[11][4] = -(4 * D3 + 4 * D2) / 9;
                matrixK[11][5] = (a * b * D4) / 9;
                matrixK[11][6] = (a * D4) / 9;
                matrixK[11][7] = -(D3 - 5 * D2) / 9;
                matrixK[11][8] = -(3 * a * a * b * b * D4 - 6 * b * b * D3 + 80 * a * a * D1) / (90 * a * b);
                matrixK[11][9] = 0;
                matrixK[11][10] = 0;
                matrixK[11][11] = (8 * a * a * b * b * D4 + 24 * b * b * D3 + 80 * a * a * D1) / (45 * a * b);
                matrixK[11][12] = -(a * D4) / 9;
                matrixK[11][13] = (D3 - 5 * D2) / 9;
                matrixK[11][14] = -(3 * a * a * b * b * D4 - 6 * b * b * D3 + 80 * a * a * D1) / (90 * a * b);
                matrixK[11][15] = -(2 * a * D4) / 9;
                matrixK[11][16] = (4 * D3 + 4 * D2) / 9;
                matrixK[11][17] = (a * b * D4) / 9;
                matrixK[11][18] = 0;
                matrixK[11][19] = (D3 + D2) / 9;
                matrixK[11][20] = -(2 * a * a * b * b * D4 + 3 * b * b * D3 + 20 * a * a * D1) / (45 * a * b);
                matrixK[11][21] = 0;
                matrixK[11][22] = 0;
                matrixK[11][23] = (4 * a * a * b * b * D4 - 24 * b * b * D3 + 40 * a * a * D1) / (45 * a * b);

                matrixK[12][0] = ((23 * b * b + 23 * a * a) * D4) / (90 * a * b);
                matrixK[12][1] = (b * D4) / 60;
                matrixK[12][2] = (a * D4) / 60;
                matrixK[12][3] = -((20 * b * b + 3 * a * a) * D4) / (45 * a * b);
                matrixK[12][4] = 0;
                matrixK[12][5] = (7 * a * D4) / 90;
                matrixK[12][6] = ((17 * b * b + 28 * a * a) * D4) / (90 * a * b);
                matrixK[12][7] = (b * D4) / 60;
                matrixK[12][8] = (2 * a * D4) / 45;
                matrixK[12][9] = ((3 * b * b - 40 * a * a) * D4) / (45 * a * b);
                matrixK[12][10] = -(13 * b * D4) / 90;
                matrixK[12][11] = -(a * D4) / 9;
                matrixK[12][12] = ((26 * b * b + 26 * a * a) * D4) / (45 * a * b);
                matrixK[12][13] = -(b * D4) / 15;
                matrixK[12][14] = -(a * D4) / 15;
                matrixK[12][15] = -((40 * b * b - 3 * a * a) * D4) / (45 * a * b);
                matrixK[12][16] = -(b * D4) / 9;
                matrixK[12][17] = -(13 * a * D4) / 90;
                matrixK[12][18] = ((28 * b * b + 17 * a * a) * D4) / (90 * a * b);
                matrixK[12][19] = (2 * b * D4) / 45;
                matrixK[12][20] = (a * D4) / 60;
                matrixK[12][21] = -((3 * b * b + 20 * a * a) * D4) / (45 * a * b);
                matrixK[12][22] = (7 * b * D4) / 90;
                matrixK[12][23] = 0;

                matrixK[13][0] = -(b * D4) / 60;
                matrixK[13][1] = (3 * a * a * b * b * D4 + 46 * a * a * D3 + 46 * b * b * D1) / (180 * a * b);
                matrixK[13][2] = (7 * D3 + 7 * D2) / 36;
                matrixK[13][3] = 0;
                matrixK[13][4] = -(2 * a * a * b * b * D4 + 3 * a * a * D3 + 20 * b * b * D1) / (45 * a * b);
                matrixK[13][5] = -(D3 + D2) / 9;
                matrixK[13][6] = (b * D4) / 60;
                matrixK[13][7] = (a * a * b * b * D4 + 28 * a * a * D3 + 17 * b * b * D1) / (90 * a * b);
                matrixK[13][8] = -(D3 - D2) / 12;
                matrixK[13][9] = (7 * b * D4) / 90;
                matrixK[13][10] = -(3 * a * a * b * b * D4 + 80 * a * a * D3 - 6 * b * b * D1) / (90 * a * b);
                matrixK[13][11] = (D3 - 5 * D2) / 9;
                matrixK[13][12] = -(b * D4) / 15;
                matrixK[13][13] = (3 * a * a * b * b * D4 + 52 * a * a * D3 + 52 * b * b * D1) / (90 * a * b);
                matrixK[13][14] = (17 * D3 + 17 * D2) / 36;
                matrixK[13][15] = (b * D4) / 9;
                matrixK[13][16] = -(3 * a * a * b * b * D4 - 6 * a * a * D3 + 80 * b * b * D1) / (90 * a * b);
                matrixK[13][17] = -(5 * D3 - D2) / 9;
                matrixK[13][18] = -(2 * b * D4) / 45;
                matrixK[13][19] = (a * a * b * b * D4 + 17 * a * a * D3 + 28 * b * b * D1) / (90 * a * b);
                matrixK[13][20] = (D3 - D2) / 12;
                matrixK[13][21] = -(7 * b * D4) / 90;
                matrixK[13][22] = -(2 * a * a * b * b * D4 + 20 * a * a * D3 + 3 * b * b * D1) / (45 * a * b);
                matrixK[13][23] = -(D3 + D2) / 9;

                matrixK[14][0] = -(a * D4) / 60;
                matrixK[14][1] = (7 * D3 + 7 * D2) / 36;
                matrixK[14][2] = (3 * a * a * b * b * D4 + 46 * b * b * D3 + 46 * a * a * D1) / (180 * a * b);
                matrixK[14][3] = -(7 * a * D4) / 90;
                matrixK[14][4] = -(D3 + D2) / 9;
                matrixK[14][5] = -(2 * a * a * b * b * D4 + 20 * b * b * D3 + 3 * a * a * D1) / (45 * a * b);
                matrixK[14][6] = -(2 * a * D4) / 45;
                matrixK[14][7] = (D3 - D2) / 12;
                matrixK[14][8] = (a * a * b * b * D4 + 17 * b * b * D3 + 28 * a * a * D1) / (90 * a * b);
                matrixK[14][9] = (a * D4) / 9;
                matrixK[14][10] = -(5 * D3 - D2) / 9;
                matrixK[14][11] = -(3 * a * a * b * b * D4 - 6 * b * b * D3 + 80 * a * a * D1) / (90 * a * b);
                matrixK[14][12] = -(a * D4) / 15;
                matrixK[14][13] = (17 * D3 + 17 * D2) / 36;
                matrixK[14][14] = (3 * a * a * b * b * D4 + 52 * b * b * D3 + 52 * a * a * D1) / (90 * a * b);
                matrixK[14][15] = (7 * a * D4) / 90;
                matrixK[14][16] = (D3 - 5 * D2) / 9;
                matrixK[14][17] = -(3 * a * a * b * b * D4 + 80 * b * b * D3 - 6 * a * a * D1) / (90 * a * b);
                matrixK[14][18] = (a * D4) / 60;
                matrixK[14][19] = -(D3 - D2) / 12;
                matrixK[14][20] = (a * a * b * b * D4 + 28 * b * b * D3 + 17 * a * a * D1) / (90 * a * b);
                matrixK[14][21] = 0;
                matrixK[14][22] = -(D3 + D2) / 9;
                matrixK[14][23] = -(2 * a * a * b * b * D4 + 3 * b * b * D3 + 20 * a * a * D1) / (45 * a * b);

                matrixK[15][0] = -((20 * b * b + 3 * a * a) * D4) / (45 * a * b);
                matrixK[15][1] = 0;
                matrixK[15][2] = (7 * a * D4) / 90;
                matrixK[15][3] = ((40 * b * b - 24 * a * a) * D4) / (45 * a * b);
                matrixK[15][4] = 0;
                matrixK[15][5] = -(4 * a * D4) / 15;
                matrixK[15][6] = -((20 * b * b + 3 * a * a) * D4) / (45 * a * b);
                matrixK[15][7] = 0;
                matrixK[15][8] = (7 * a * D4) / 90;
                matrixK[15][9] = 0;
                matrixK[15][10] = (2 * b * D4) / 9;
                matrixK[15][11] = -(2 * a * D4) / 9;
                matrixK[15][12] = -((40 * b * b - 3 * a * a) * D4) / (45 * a * b);
                matrixK[15][13] = (b * D4) / 9;
                matrixK[15][14] = (7 * a * D4) / 90;
                matrixK[15][15] = ((80 * b * b + 24 * a * a) * D4) / (45 * a * b);
                matrixK[15][16] = 0;
                matrixK[15][17] = -(4 * a * D4) / 15;
                matrixK[15][18] = -((40 * b * b - 3 * a * a) * D4) / (45 * a * b);
                matrixK[15][19] = -(b * D4) / 9;
                matrixK[15][20] = (7 * a * D4) / 90;
                matrixK[15][21] = 0;
                matrixK[15][22] = -(2 * b * D4) / 9;
                matrixK[15][23] = -(2 * a * D4) / 9;

                matrixK[16][0] = 0;
                matrixK[16][1] = -(2 * a * a * b * b * D4 + 3 * a * a * D3 + 20 * b * b * D1) / (45 * a * b);
                matrixK[16][2] = -(D3 + D2) / 9;
                matrixK[16][3] = 0;
                matrixK[16][4] = (4 * a * a * b * b * D4 - 24 * a * a * D3 + 40 * b * b * D1) / (45 * a * b);
                matrixK[16][5] = 0;
                matrixK[16][6] = 0;
                matrixK[16][7] = -(2 * a * a * b * b * D4 + 3 * a * a * D3 + 20 * b * b * D1) / (45 * a * b);
                matrixK[16][8] = (D3 + D2) / 9;
                matrixK[16][9] = -(2 * b * D4) / 9;
                matrixK[16][10] = (a * b * D4) / 9;
                matrixK[16][11] = (4 * D3 + 4 * D2) / 9;
                matrixK[16][12] = -(b * D4) / 9;
                matrixK[16][13] = -(3 * a * a * b * b * D4 - 6 * a * a * D3 + 80 * b * b * D1) / (90 * a * b);
                matrixK[16][14] = (D3 - 5 * D2) / 9;
                matrixK[16][15] = 0;
                matrixK[16][16] = (8 * a * a * b * b * D4 + 24 * a * a * D3 + 80 * b * b * D1) / (45 * a * b);
                matrixK[16][17] = 0;
                matrixK[16][18] = (b * D4) / 9;
                matrixK[16][19] = -(3 * a * a * b * b * D4 - 6 * a * a * D3 + 80 * b * b * D1) / (90 * a * b);
                matrixK[16][20] = -(D3 - 5 * D2) / 9;
                matrixK[16][21] = (2 * b * D4) / 9;
                matrixK[16][22] = (a * b * D4) / 9;
                matrixK[16][23] = -(4 * D3 + 4 * D2) / 9;

                matrixK[17][0] = -(7 * a * D4) / 90;
                matrixK[17][1] = -(D3 + D2) / 9;
                matrixK[17][2] = -(2 * a * a * b * b * D4 + 20 * b * b * D3 + 3 * a * a * D1) / (45 * a * b);
                matrixK[17][3] = (4 * a * D4) / 15;
                matrixK[17][4] = 0;
                matrixK[17][5] = (4 * a * a * b * b * D4 + 40 * b * b * D3 - 24 * a * a * D1) / (45 * a * b);
                matrixK[17][6] = -(7 * a * D4) / 90;
                matrixK[17][7] = (D3 + D2) / 9;
                matrixK[17][8] = -(2 * a * a * b * b * D4 + 20 * b * b * D3 + 3 * a * a * D1) / (45 * a * b);
                matrixK[17][9] = (2 * a * D4) / 9;
                matrixK[17][10] = (4 * D3 + 4 * D2) / 9;
                matrixK[17][11] = (a * b * D4) / 9;
                matrixK[17][12] = -(13 * a * D4) / 90;
                matrixK[17][13] = -(5 * D3 - D2) / 9;
                matrixK[17][14] = -(3 * a * a * b * b * D4 + 80 * b * b * D3 - 6 * a * a * D1) / (90 * a * b);
                matrixK[17][15] = -(4 * a * D4) / 15;
                matrixK[17][16] = 0;
                matrixK[17][17] = (8 * a * a * b * b * D4 + 80 * b * b * D3 + 24 * a * a * D1) / (45 * a * b);
                matrixK[17][18] = -(13 * a * D4) / 90;
                matrixK[17][19] = (5 * D3 - D2) / 9;
                matrixK[17][20] = -(3 * a * a * b * b * D4 + 80 * b * b * D3 - 6 * a * a * D1) / (90 * a * b);
                matrixK[17][21] = (2 * a * D4) / 9;
                matrixK[17][22] = -(4 * D3 + 4 * D2) / 9;
                matrixK[17][23] = (a * b * D4) / 9;

                matrixK[18][0] = ((17 * b * b + 28 * a * a) * D4) / (90 * a * b);
                matrixK[18][1] = -(b * D4) / 60;
                matrixK[18][2] = (2 * a * D4) / 45;
                matrixK[18][3] = -((20 * b * b + 3 * a * a) * D4) / (45 * a * b);
                matrixK[18][4] = 0;
                matrixK[18][5] = (7 * a * D4) / 90;
                matrixK[18][6] = ((23 * b * b + 23 * a * a) * D4) / (90 * a * b);
                matrixK[18][7] = -(b * D4) / 60;
                matrixK[18][8] = (a * D4) / 60;
                matrixK[18][9] = -((3 * b * b + 20 * a * a) * D4) / (45 * a * b);
                matrixK[18][10] = -(7 * b * D4) / 90;
                matrixK[18][11] = 0;
                matrixK[18][12] = ((28 * b * b + 17 * a * a) * D4) / (90 * a * b);
                matrixK[18][13] = -(2 * b * D4) / 45;
                matrixK[18][14] = (a * D4) / 60;
                matrixK[18][15] = -((40 * b * b - 3 * a * a) * D4) / (45 * a * b);
                matrixK[18][16] = (b * D4) / 9;
                matrixK[18][17] = -(13 * a * D4) / 90;
                matrixK[18][18] = ((26 * b * b + 26 * a * a) * D4) / (45 * a * b);
                matrixK[18][19] = (b * D4) / 15;
                matrixK[18][20] = -(a * D4) / 15;
                matrixK[18][21] = ((3 * b * b - 40 * a * a) * D4) / (45 * a * b);
                matrixK[18][22] = (13 * b * D4) / 90;
                matrixK[18][23] = -(a * D4) / 9;

                matrixK[19][0] = -(b * D4) / 60;
                matrixK[19][1] = (a * a * b * b * D4 + 28 * a * a * D3 + 17 * b * b * D1) / (90 * a * b);
                matrixK[19][2] = (D3 - D2) / 12;
                matrixK[19][3] = 0;
                matrixK[19][4] = -(2 * a * a * b * b * D4 + 3 * a * a * D3 + 20 * b * b * D1) / (45 * a * b);
                matrixK[19][5] = (D3 + D2) / 9;
                matrixK[19][6] = (b * D4) / 60;
                matrixK[19][7] = (3 * a * a * b * b * D4 + 46 * a * a * D3 + 46 * b * b * D1) / (180 * a * b);
                matrixK[19][8] = -(7 * D3 + 7 * D2) / 36;
                matrixK[19][9] = (7 * b * D4) / 90;
                matrixK[19][10] = -(2 * a * a * b * b * D4 + 20 * a * a * D3 + 3 * b * b * D1) / (45 * a * b);
                matrixK[19][11] = (D3 + D2) / 9;
                matrixK[19][12] = (2 * b * D4) / 45;
                matrixK[19][13] = (a * a * b * b * D4 + 17 * a * a * D3 + 28 * b * b * D1) / (90 * a * b);
                matrixK[19][14] = -(D3 - D2) / 12;
                matrixK[19][15] = -(b * D4) / 9;
                matrixK[19][16] = -(3 * a * a * b * b * D4 - 6 * a * a * D3 + 80 * b * b * D1) / (90 * a * b);
                matrixK[19][17] = (5 * D3 - D2) / 9;
                matrixK[19][18] = (b * D4) / 15;
                matrixK[19][19] = (3 * a * a * b * b * D4 + 52 * a * a * D3 + 52 * b * b * D1) / (90 * a * b);
                matrixK[19][20] = -(17 * D3 + 17 * D2) / 36;
                matrixK[19][21] = -(7 * b * D4) / 90;
                matrixK[19][22] = -(3 * a * a * b * b * D4 + 80 * a * a * D3 - 6 * b * b * D1) / (90 * a * b);
                matrixK[19][23] = -(D3 - 5 * D2) / 9;

                matrixK[20][0] = -(2 * a * D4) / 45;
                matrixK[20][1] = -(D3 - D2) / 12;
                matrixK[20][2] = (a * a * b * b * D4 + 17 * b * b * D3 + 28 * a * a * D1) / (90 * a * b);
                matrixK[20][3] = -(7 * a * D4) / 90;
                matrixK[20][4] = (D3 + D2) / 9;
                matrixK[20][5] = -(2 * a * a * b * b * D4 + 20 * b * b * D3 + 3 * a * a * D1) / (45 * a * b);
                matrixK[20][6] = -(a * D4) / 60;
                matrixK[20][7] = -(7 * D3 + 7 * D2) / 36;
                matrixK[20][8] = (3 * a * a * b * b * D4 + 46 * b * b * D3 + 46 * a * a * D1) / (180 * a * b);
                matrixK[20][9] = 0;
                matrixK[20][10] = (D3 + D2) / 9;
                matrixK[20][11] = -(2 * a * a * b * b * D4 + 3 * b * b * D3 + 20 * a * a * D1) / (45 * a * b);
                matrixK[20][12] = (a * D4) / 60;
                matrixK[20][13] = (D3 - D2) / 12;
                matrixK[20][14] = (a * a * b * b * D4 + 28 * b * b * D3 + 17 * a * a * D1) / (90 * a * b);
                matrixK[20][15] = (7 * a * D4) / 90;
                matrixK[20][16] = -(D3 - 5 * D2) / 9;
                matrixK[20][17] = -(3 * a * a * b * b * D4 + 80 * b * b * D3 - 6 * a * a * D1) / (90 * a * b);
                matrixK[20][18] = -(a * D4) / 15;
                matrixK[20][19] = -(17 * D3 + 17 * D2) / 36;
                matrixK[20][20] = (3 * a * a * b * b * D4 + 52 * b * b * D3 + 52 * a * a * D1) / (90 * a * b);
                matrixK[20][21] = (a * D4) / 9;
                matrixK[20][22] = (5 * D3 - D2) / 9;
                matrixK[20][23] = -(3 * a * a * b * b * D4 - 6 * b * b * D3 + 80 * a * a * D1) / (90 * a * b);

                matrixK[21][0] = ((3 * b * b - 40 * a * a) * D4) / (45 * a * b);
                matrixK[21][1] = -(7 * b * D4) / 90;
                matrixK[21][2] = -(a * D4) / 9;
                matrixK[21][3] = 0;
                matrixK[21][4] = (2 * b * D4) / 9;
                matrixK[21][5] = -(2 * a * D4) / 9;
                matrixK[21][6] = -((3 * b * b + 20 * a * a) * D4) / (45 * a * b);
                matrixK[21][7] = -(7 * b * D4) / 90;
                matrixK[21][8] = 0;
                matrixK[21][9] = -((24 * b * b - 40 * a * a) * D4) / (45 * a * b);
                matrixK[21][10] = (4 * b * D4) / 15;
                matrixK[21][11] = 0;
                matrixK[21][12] = -((3 * b * b + 20 * a * a) * D4) / (45 * a * b);
                matrixK[21][13] = -(7 * b * D4) / 90;
                matrixK[21][14] = 0;
                matrixK[21][15] = 0;
                matrixK[21][16] = (2 * b * D4) / 9;
                matrixK[21][17] = (2 * a * D4) / 9;
                matrixK[21][18] = ((3 * b * b - 40 * a * a) * D4) / (45 * a * b);
                matrixK[21][19] = -(7 * b * D4) / 90;
                matrixK[21][20] = (a * D4) / 9;
                matrixK[21][21] = ((24 * b * b + 80 * a * a) * D4) / (45 * a * b);
                matrixK[21][22] = (4 * b * D4) / 15;
                matrixK[21][23] = 0;

                matrixK[22][0] = (13 * b * D4) / 90;
                matrixK[22][1] = -(3 * a * a * b * b * D4 + 80 * a * a * D3 - 6 * b * b * D1) / (90 * a * b);
                matrixK[22][2] = -(5 * D3 - D2) / 9;
                matrixK[22][3] = -(2 * b * D4) / 9;
                matrixK[22][4] = (a * b * D4) / 9;
                matrixK[22][5] = (4 * D3 + 4 * D2) / 9;
                matrixK[22][6] = (7 * b * D4) / 90;
                matrixK[22][7] = -(2 * a * a * b * b * D4 + 20 * a * a * D3 + 3 * b * b * D1) / (45 * a * b);
                matrixK[22][8] = (D3 + D2) / 9;
                matrixK[22][9] = -(4 * b * D4) / 15;
                matrixK[22][10] = (4 * a * a * b * b * D4 + 40 * a * a * D3 - 24 * b * b * D1) / (45 * a * b);
                matrixK[22][11] = 0;
                matrixK[22][12] = (7 * b * D4) / 90;
                matrixK[22][13] = -(2 * a * a * b * b * D4 + 20 * a * a * D3 + 3 * b * b * D1) / (45 * a * b);
                matrixK[22][14] = -(D3 + D2) / 9;
                matrixK[22][15] = -(2 * b * D4) / 9;
                matrixK[22][16] = (a * b * D4) / 9;
                matrixK[22][17] = -(4 * D3 + 4 * D2) / 9;
                matrixK[22][18] = (13 * b * D4) / 90;
                matrixK[22][19] = -(3 * a * a * b * b * D4 + 80 * a * a * D3 - 6 * b * b * D1) / (90 * a * b);
                matrixK[22][20] = (5 * D3 - D2) / 9;
                matrixK[22][21] = (4 * b * D4) / 15;
                matrixK[22][22] = (8 * a * a * b * b * D4 + 80 * a * a * D3 + 24 * b * b * D1) / (45 * a * b);
                matrixK[22][23] = 0;

                matrixK[23][0] = (a * D4) / 9;
                matrixK[23][1] = (D3 - 5 * D2) / 9;
                matrixK[23][2] = -(3 * a * a * b * b * D4 - 6 * b * b * D3 + 80 * a * a * D1) / (90 * a * b);
                matrixK[23][3] = (2 * a * D4) / 9;
                matrixK[23][4] = (4 * D3 + 4 * D2) / 9;
                matrixK[23][5] = (a * b * D4) / 9;
                matrixK[23][6] = 0;
                matrixK[23][7] = (D3 + D2) / 9;
                matrixK[23][8] = -(2 * a * a * b * b * D4 + 3 * b * b * D3 + 20 * a * a * D1) / (45 * a * b);
                matrixK[23][9] = 0;
                matrixK[23][10] = 0;
                matrixK[23][11] = (4 * a * a * b * b * D4 - 24 * b * b * D3 + 40 * a * a * D1) / (45 * a * b);
                matrixK[23][12] = 0;
                matrixK[23][13] = -(D3 + D2) / 9;
                matrixK[23][14] = -(2 * a * a * b * b * D4 + 3 * b * b * D3 + 20 * a * a * D1) / (45 * a * b);
                matrixK[23][15] = -(2 * a * D4) / 9;
                matrixK[23][16] = -(4 * D3 + 4 * D2) / 9;
                matrixK[23][17] = (a * b * D4) / 9;
                matrixK[23][18] = -(a * D4) / 9;
                matrixK[23][19] = -(D3 - 5 * D2) / 9;
                matrixK[23][20] = -(3 * a * a * b * b * D4 - 6 * b * b * D3 + 80 * a * a * D1) / (90 * a * b);
                matrixK[23][21] = 0;
                matrixK[23][22] = 0;
                matrixK[23][23] = (8 * a * a * b * b * D4 + 24 * b * b * D3 + 80 * a * a * D1) / (45 * a * b);
            } else if (nodes == 9) {
                matrixK = new double[27][27];

                matrixK[0][0] = ((14 * b * b + 14 * a * a) * D4) / (45 * a * b);
                matrixK[0][1] = (b * D4) / 15;
                matrixK[0][2] = (a * D4) / 15;
                matrixK[0][3] = -((16 * b * b - 7 * a * a) * D4) / (45 * a * b);
                matrixK[0][4] = (4 * b * D4) / 45;
                matrixK[0][5] = (a * D4) / 30;
                matrixK[0][6] = ((4 * b * b - 7 * a * a) * D4) / (90 * a * b);
                matrixK[0][7] = -(b * D4) / 45;
                matrixK[0][8] = -(a * D4) / 60;
                matrixK[0][9] = ((b * b + 4 * a * a) * D4) / (45 * a * b);
                matrixK[0][10] = -(b * D4) / 90;
                matrixK[0][11] = -(a * D4) / 45;
                matrixK[0][12] = -((b * b + a * a) * D4) / (90 * a * b);
                matrixK[0][13] = (b * D4) / 180;
                matrixK[0][14] = (a * D4) / 180;
                matrixK[0][15] = ((4 * b * b + a * a) * D4) / (45 * a * b);
                matrixK[0][16] = -(b * D4) / 45;
                matrixK[0][17] = -(a * D4) / 90;
                matrixK[0][18] = -((7 * b * b - 4 * a * a) * D4) / (90 * a * b);
                matrixK[0][19] = -(b * D4) / 60;
                matrixK[0][20] = -(a * D4) / 45;
                matrixK[0][21] = ((7 * b * b - 16 * a * a) * D4) / (45 * a * b);
                matrixK[0][22] = (b * D4) / 30;
                matrixK[0][23] = (4 * a * D4) / 45;
                matrixK[0][24] = -((8 * b * b + 8 * a * a) * D4) / (45 * a * b);
                matrixK[0][25] = (2 * b * D4) / 45;
                matrixK[0][26] = (2 * a * D4) / 45;

                matrixK[1][0] = (b * D4) / 15;
                matrixK[1][1] = (4 * a * a * b * b * D4 + 70 * a * a * D3 + 70 * b * b * D1) / (225 * a * b);
                matrixK[1][2] = (D3 + D2) / 4;
                matrixK[1][3] = -(4 * b * D4) / 45;
                matrixK[1][4] = (2 * a * a * b * b * D4 + 35 * a * a * D3 - 80 * b * b * D1) / (225 * a * b);
                matrixK[1][5] = -(D3 - D2) / 3;
                matrixK[1][6] = (b * D4) / 45;
                matrixK[1][7] = -(2 * a * a * b * b * D4 + 35 * a * a * D3 - 20 * b * b * D1) / (450 * a * b);
                matrixK[1][8] = (D3 - D2) / 12;
                matrixK[1][9] = (b * D4) / 90;
                matrixK[1][10] = -(a * a * b * b * D4 - 40 * a * a * D3 - 10 * b * b * D1) / (450 * a * b);
                matrixK[1][11] = (D3 + D2) / 9;
                matrixK[1][12] = -(b * D4) / 180;
                matrixK[1][13] = (a * a * b * b * D4 - 10 * a * a * D3 - 10 * b * b * D1) / (900 * a * b);
                matrixK[1][14] = -(D3 + D2) / 36;
                matrixK[1][15] = (b * D4) / 45;
                matrixK[1][16] = -(a * a * b * b * D4 - 10 * a * a * D3 - 40 * b * b * D1) / (450 * a * b);
                matrixK[1][17] = (D3 + D2) / 9;
                matrixK[1][18] = -(b * D4) / 60;
                matrixK[1][19] = -(2 * a * a * b * b * D4 - 20 * a * a * D3 + 35 * b * b * D1) / (450 * a * b);
                matrixK[1][20] = -(D3 - D2) / 12;
                matrixK[1][21] = (b * D4) / 30;
                matrixK[1][22] = (2 * a * a * b * b * D4 - 80 * a * a * D3 + 35 * b * b * D1) / (225 * a * b);
                matrixK[1][23] = (D3 - D2) / 3;
                matrixK[1][24] = -(2 * b * D4) / 45;
                matrixK[1][25] = (a * a * b * b * D4 - 40 * a * a * D3 - 40 * b * b * D1) / (225 * a * b);
                matrixK[1][26] = -(4 * D3 + 4 * D2) / 9;

                matrixK[2][0] = (a * D4) / 15;
                matrixK[2][1] = (D3 + D2) / 4;
                matrixK[2][2] = (4 * a * a * b * b * D4 + 70 * b * b * D3 + 70 * a * a * D1) / (225 * a * b);
                matrixK[2][3] = (a * D4) / 30;
                matrixK[2][4] = (D3 - D2) / 3;
                matrixK[2][5] = (2 * a * a * b * b * D4 - 80 * b * b * D3 + 35 * a * a * D1) / (225 * a * b);
                matrixK[2][6] = -(a * D4) / 60;
                matrixK[2][7] = -(D3 - D2) / 12;
                matrixK[2][8] = -(2 * a * a * b * b * D4 - 20 * b * b * D3 + 35 * a * a * D1) / (450 * a * b);
                matrixK[2][9] = (a * D4) / 45;
                matrixK[2][10] = (D3 + D2) / 9;
                matrixK[2][11] = -(a * a * b * b * D4 - 10 * b * b * D3 - 40 * a * a * D1) / (450 * a * b);
                matrixK[2][12] = -(a * D4) / 180;
                matrixK[2][13] = -(D3 + D2) / 36;
                matrixK[2][14] = (a * a * b * b * D4 - 10 * b * b * D3 - 10 * a * a * D1) / (900 * a * b);
                matrixK[2][15] = (a * D4) / 90;
                matrixK[2][16] = (D3 + D2) / 9;
                matrixK[2][17] = -(a * a * b * b * D4 - 40 * b * b * D3 - 10 * a * a * D1) / (450 * a * b);
                matrixK[2][18] = (a * D4) / 45;
                matrixK[2][19] = (D3 - D2) / 12;
                matrixK[2][20] = -(2 * a * a * b * b * D4 + 35 * b * b * D3 - 20 * a * a * D1) / (450 * a * b);
                matrixK[2][21] = -(4 * a * D4) / 45;
                matrixK[2][22] = -(D3 - D2) / 3;
                matrixK[2][23] = (2 * a * a * b * b * D4 + 35 * b * b * D3 - 80 * a * a * D1) / (225 * a * b);
                matrixK[2][24] = -(2 * a * D4) / 45;
                matrixK[2][25] = -(4 * D3 + 4 * D2) / 9;
                matrixK[2][26] = (a * a * b * b * D4 - 40 * b * b * D3 - 40 * a * a * D1) / (225 * a * b);

                matrixK[3][0] = -((16 * b * b - 7 * a * a) * D4) / (45 * a * b);
                matrixK[3][1] = -(4 * b * D4) / 45;
                matrixK[3][2] = (a * D4) / 30;
                matrixK[3][3] = ((32 * b * b + 56 * a * a) * D4) / (45 * a * b);
                matrixK[3][4] = 0;
                matrixK[3][5] = (4 * a * D4) / 15;
                matrixK[3][6] = -((16 * b * b - 7 * a * a) * D4) / (45 * a * b);
                matrixK[3][7] = (4 * b * D4) / 45;
                matrixK[3][8] = (a * D4) / 30;
                matrixK[3][9] = -((8 * b * b + 8 * a * a) * D4) / (45 * a * b);
                matrixK[3][10] = (2 * b * D4) / 45;
                matrixK[3][11] = (2 * a * D4) / 45;
                matrixK[3][12] = ((4 * b * b + a * a) * D4) / (45 * a * b);
                matrixK[3][13] = -(b * D4) / 45;
                matrixK[3][14] = -(a * D4) / 90;
                matrixK[3][15] = -((8 * b * b - 8 * a * a) * D4) / (45 * a * b);
                matrixK[3][16] = 0;
                matrixK[3][17] = -(4 * a * D4) / 45;
                matrixK[3][18] = ((4 * b * b + a * a) * D4) / (45 * a * b);
                matrixK[3][19] = (b * D4) / 45;
                matrixK[3][20] = -(a * D4) / 90;
                matrixK[3][21] = -((8 * b * b + 8 * a * a) * D4) / (45 * a * b);
                matrixK[3][22] = -(2 * b * D4) / 45;
                matrixK[3][23] = (2 * a * D4) / 45;
                matrixK[3][24] = ((16 * b * b - 64 * a * a) * D4) / (45 * a * b);
                matrixK[3][25] = 0;
                matrixK[3][26] = (16 * a * D4) / 45;

                matrixK[4][0] = (4 * b * D4) / 45;
                matrixK[4][1] = (2 * a * a * b * b * D4 + 35 * a * a * D3 - 80 * b * b * D1) / (225 * a * b);
                matrixK[4][2] = (D3 - D2) / 3;
                matrixK[4][3] = 0;
                matrixK[4][4] = (16 * a * a * b * b * D4 + 280 * a * a * D3 + 160 * b * b * D1) / (225 * a * b);
                matrixK[4][5] = 0;
                matrixK[4][6] = -(4 * b * D4) / 45;
                matrixK[4][7] = (2 * a * a * b * b * D4 + 35 * a * a * D3 - 80 * b * b * D1) / (225 * a * b);
                matrixK[4][8] = -(D3 - D2) / 3;
                matrixK[4][9] = -(2 * b * D4) / 45;
                matrixK[4][10] = (a * a * b * b * D4 - 40 * a * a * D3 - 40 * b * b * D1) / (225 * a * b);
                matrixK[4][11] = -(4 * D3 + 4 * D2) / 9;
                matrixK[4][12] = (b * D4) / 45;
                matrixK[4][13] = -(a * a * b * b * D4 - 10 * a * a * D3 - 40 * b * b * D1) / (450 * a * b);
                matrixK[4][14] = (D3 + D2) / 9;
                matrixK[4][15] = 0;
                matrixK[4][16] = -(4 * a * a * b * b * D4 - 40 * a * a * D3 + 40 * b * b * D1) / (225 * a * b);
                matrixK[4][17] = 0;
                matrixK[4][18] = -(b * D4) / 45;
                matrixK[4][19] = -(a * a * b * b * D4 - 10 * a * a * D3 - 40 * b * b * D1) / (450 * a * b);
                matrixK[4][20] = -(D3 + D2) / 9;
                matrixK[4][21] = (2 * b * D4) / 45;
                matrixK[4][22] = (a * a * b * b * D4 - 40 * a * a * D3 - 40 * b * b * D1) / (225 * a * b);
                matrixK[4][23] = (4 * D3 + 4 * D2) / 9;
                matrixK[4][24] = 0;
                matrixK[4][25] = (8 * a * a * b * b * D4 - 320 * a * a * D3 + 80 * b * b * D1) / (225 * a * b);
                matrixK[4][26] = 0;

                matrixK[5][0] = (a * D4) / 30;
                matrixK[5][1] = -(D3 - D2) / 3;
                matrixK[5][2] = (2 * a * a * b * b * D4 - 80 * b * b * D3 + 35 * a * a * D1) / (225 * a * b);
                matrixK[5][3] = (4 * a * D4) / 15;
                matrixK[5][4] = 0;
                matrixK[5][5] = (16 * a * a * b * b * D4 + 160 * b * b * D3 + 280 * a * a * D1) / (225 * a * b);
                matrixK[5][6] = (a * D4) / 30;
                matrixK[5][7] = (D3 - D2) / 3;
                matrixK[5][8] = (2 * a * a * b * b * D4 - 80 * b * b * D3 + 35 * a * a * D1) / (225 * a * b);
                matrixK[5][9] = -(2 * a * D4) / 45;
                matrixK[5][10] = -(4 * D3 + 4 * D2) / 9;
                matrixK[5][11] = (a * a * b * b * D4 - 40 * b * b * D3 - 40 * a * a * D1) / (225 * a * b);
                matrixK[5][12] = (a * D4) / 90;
                matrixK[5][13] = (D3 + D2) / 9;
                matrixK[5][14] = -(a * a * b * b * D4 - 40 * b * b * D3 - 10 * a * a * D1) / (450 * a * b);
                matrixK[5][15] = (4 * a * D4) / 45;
                matrixK[5][16] = 0;
                matrixK[5][17] = -(4 * a * a * b * b * D4 + 40 * b * b * D3 - 40 * a * a * D1) / (225 * a * b);
                matrixK[5][18] = (a * D4) / 90;
                matrixK[5][19] = -(D3 + D2) / 9;
                matrixK[5][20] = -(a * a * b * b * D4 - 40 * b * b * D3 - 10 * a * a * D1) / (450 * a * b);
                matrixK[5][21] = -(2 * a * D4) / 45;
                matrixK[5][22] = (4 * D3 + 4 * D2) / 9;
                matrixK[5][23] = (a * a * b * b * D4 - 40 * b * b * D3 - 40 * a * a * D1) / (225 * a * b);
                matrixK[5][24] = -(16 * a * D4) / 45;
                matrixK[5][25] = 0;
                matrixK[5][26] = (8 * a * a * b * b * D4 + 80 * b * b * D3 - 320 * a * a * D1) / (225 * a * b);

                matrixK[6][0] = ((4 * b * b - 7 * a * a) * D4) / (90 * a * b);
                matrixK[6][1] = (b * D4) / 45;
                matrixK[6][2] = -(a * D4) / 60;
                matrixK[6][3] = -((16 * b * b - 7 * a * a) * D4) / (45 * a * b);
                matrixK[6][4] = -(4 * b * D4) / 45;
                matrixK[6][5] = (a * D4) / 30;
                matrixK[6][6] = ((14 * b * b + 14 * a * a) * D4) / (45 * a * b);
                matrixK[6][7] = -(b * D4) / 15;
                matrixK[6][8] = (a * D4) / 15;
                matrixK[6][9] = ((7 * b * b - 16 * a * a) * D4) / (45 * a * b);
                matrixK[6][10] = -(b * D4) / 30;
                matrixK[6][11] = (4 * a * D4) / 45;
                matrixK[6][12] = -((7 * b * b - 4 * a * a) * D4) / (90 * a * b);
                matrixK[6][13] = (b * D4) / 60;
                matrixK[6][14] = -(a * D4) / 45;
                matrixK[6][15] = ((4 * b * b + a * a) * D4) / (45 * a * b);
                matrixK[6][16] = (b * D4) / 45;
                matrixK[6][17] = -(a * D4) / 90;
                matrixK[6][18] = -((b * b + a * a) * D4) / (90 * a * b);
                matrixK[6][19] = -(b * D4) / 180;
                matrixK[6][20] = (a * D4) / 180;
                matrixK[6][21] = ((b * b + 4 * a * a) * D4) / (45 * a * b);
                matrixK[6][22] = (b * D4) / 90;
                matrixK[6][23] = -(a * D4) / 45;
                matrixK[6][24] = -((8 * b * b + 8 * a * a) * D4) / (45 * a * b);
                matrixK[6][25] = -(2 * b * D4) / 45;
                matrixK[6][26] = (2 * a * D4) / 45;

                matrixK[7][0] = -(b * D4) / 45;
                matrixK[7][1] = -(2 * a * a * b * b * D4 + 35 * a * a * D3 - 20 * b * b * D1) / (450 * a * b);
                matrixK[7][2] = -(D3 - D2) / 12;
                matrixK[7][3] = (4 * b * D4) / 45;
                matrixK[7][4] = (2 * a * a * b * b * D4 + 35 * a * a * D3 - 80 * b * b * D1) / (225 * a * b);
                matrixK[7][5] = (D3 - D2) / 3;
                matrixK[7][6] = -(b * D4) / 15;
                matrixK[7][7] = (4 * a * a * b * b * D4 + 70 * a * a * D3 + 70 * b * b * D1) / (225 * a * b);
                matrixK[7][8] = -(D3 + D2) / 4;
                matrixK[7][9] = -(b * D4) / 30;
                matrixK[7][10] = (2 * a * a * b * b * D4 - 80 * a * a * D3 + 35 * b * b * D1) / (225 * a * b);
                matrixK[7][11] = -(D3 - D2) / 3;
                matrixK[7][12] = (b * D4) / 60;
                matrixK[7][13] = -(2 * a * a * b * b * D4 - 20 * a * a * D3 + 35 * b * b * D1) / (450 * a * b);
                matrixK[7][14] = (D3 - D2) / 12;
                matrixK[7][15] = -(b * D4) / 45;
                matrixK[7][16] = -(a * a * b * b * D4 - 10 * a * a * D3 - 40 * b * b * D1) / (450 * a * b);
                matrixK[7][17] = -(D3 + D2) / 9;
                matrixK[7][18] = (b * D4) / 180;
                matrixK[7][19] = (a * a * b * b * D4 - 10 * a * a * D3 - 10 * b * b * D1) / (900 * a * b);
                matrixK[7][20] = (D3 + D2) / 36;
                matrixK[7][21] = -(b * D4) / 90;
                matrixK[7][22] = -(a * a * b * b * D4 - 40 * a * a * D3 - 10 * b * b * D1) / (450 * a * b);
                matrixK[7][23] = -(D3 + D2) / 9;
                matrixK[7][24] = (2 * b * D4) / 45;
                matrixK[7][25] = (a * a * b * b * D4 - 40 * a * a * D3 - 40 * b * b * D1) / (225 * a * b);
                matrixK[7][26] = (4 * D3 + 4 * D2) / 9;

                matrixK[8][0] = -(a * D4) / 60;
                matrixK[8][1] = (D3 - D2) / 12;
                matrixK[8][2] = -(2 * a * a * b * b * D4 - 20 * b * b * D3 + 35 * a * a * D1) / (450 * a * b);
                matrixK[8][3] = (a * D4) / 30;
                matrixK[8][4] = -(D3 - D2) / 3;
                matrixK[8][5] = (2 * a * a * b * b * D4 - 80 * b * b * D3 + 35 * a * a * D1) / (225 * a * b);
                matrixK[8][6] = (a * D4) / 15;
                matrixK[8][7] = -(D3 + D2) / 4;
                matrixK[8][8] = (4 * a * a * b * b * D4 + 70 * b * b * D3 + 70 * a * a * D1) / (225 * a * b);
                matrixK[8][9] = -(4 * a * D4) / 45;
                matrixK[8][10] = (D3 - D2) / 3;
                matrixK[8][11] = (2 * a * a * b * b * D4 + 35 * b * b * D3 - 80 * a * a * D1) / (225 * a * b);
                matrixK[8][12] = (a * D4) / 45;
                matrixK[8][13] = -(D3 - D2) / 12;
                matrixK[8][14] = -(2 * a * a * b * b * D4 + 35 * b * b * D3 - 20 * a * a * D1) / (450 * a * b);
                matrixK[8][15] = (a * D4) / 90;
                matrixK[8][16] = -(D3 + D2) / 9;
                matrixK[8][17] = -(a * a * b * b * D4 - 40 * b * b * D3 - 10 * a * a * D1) / (450 * a * b);
                matrixK[8][18] = -(a * D4) / 180;
                matrixK[8][19] = (D3 + D2) / 36;
                matrixK[8][20] = (a * a * b * b * D4 - 10 * b * b * D3 - 10 * a * a * D1) / (900 * a * b);
                matrixK[8][21] = (a * D4) / 45;
                matrixK[8][22] = -(D3 + D2) / 9;
                matrixK[8][23] = -(a * a * b * b * D4 - 10 * b * b * D3 - 40 * a * a * D1) / (450 * a * b);
                matrixK[8][24] = -(2 * a * D4) / 45;
                matrixK[8][25] = (4 * D3 + 4 * D2) / 9;
                matrixK[8][26] = (a * a * b * b * D4 - 40 * b * b * D3 - 40 * a * a * D1) / (225 * a * b);

                matrixK[9][0] = ((b * b + 4 * a * a) * D4) / (45 * a * b);
                matrixK[9][1] = (b * D4) / 90;
                matrixK[9][2] = (a * D4) / 45;
                matrixK[9][3] = -((8 * b * b + 8 * a * a) * D4) / (45 * a * b);
                matrixK[9][4] = -(2 * b * D4) / 45;
                matrixK[9][5] = -(2 * a * D4) / 45;
                matrixK[9][6] = ((7 * b * b - 16 * a * a) * D4) / (45 * a * b);
                matrixK[9][7] = -(b * D4) / 30;
                matrixK[9][8] = -(4 * a * D4) / 45;
                matrixK[9][9] = ((56 * b * b + 32 * a * a) * D4) / (45 * a * b);
                matrixK[9][10] = -(4 * b * D4) / 15;
                matrixK[9][11] = 0;
                matrixK[9][12] = ((7 * b * b - 16 * a * a) * D4) / (45 * a * b);
                matrixK[9][13] = -(b * D4) / 30;
                matrixK[9][14] = (4 * a * D4) / 45;
                matrixK[9][15] = -((8 * b * b + 8 * a * a) * D4) / (45 * a * b);
                matrixK[9][16] = -(2 * b * D4) / 45;
                matrixK[9][17] = (2 * a * D4) / 45;
                matrixK[9][18] = ((b * b + 4 * a * a) * D4) / (45 * a * b);
                matrixK[9][19] = (b * D4) / 90;
                matrixK[9][20] = -(a * D4) / 45;
                matrixK[9][21] = ((8 * b * b - 8 * a * a) * D4) / (45 * a * b);
                matrixK[9][22] = (4 * b * D4) / 45;
                matrixK[9][23] = 0;
                matrixK[9][24] = -((64 * b * b - 16 * a * a) * D4) / (45 * a * b);
                matrixK[9][25] = -(16 * b * D4) / 45;
                matrixK[9][26] = 0;

                matrixK[10][0] = -(b * D4) / 90;
                matrixK[10][1] = -(a * a * b * b * D4 - 40 * a * a * D3 - 10 * b * b * D1) / (450 * a * b);
                matrixK[10][2] = (D3 + D2) / 9;
                matrixK[10][3] = (2 * b * D4) / 45;
                matrixK[10][4] = (a * a * b * b * D4 - 40 * a * a * D3 - 40 * b * b * D1) / (225 * a * b);
                matrixK[10][5] = -(4 * D3 + 4 * D2) / 9;
                matrixK[10][6] = -(b * D4) / 30;
                matrixK[10][7] = (2 * a * a * b * b * D4 - 80 * a * a * D3 + 35 * b * b * D1) / (225 * a * b);
                matrixK[10][8] = (D3 - D2) / 3;
                matrixK[10][9] = -(4 * b * D4) / 15;
                matrixK[10][10] = (16 * a * a * b * b * D4 + 160 * a * a * D3 + 280 * b * b * D1) / (225 * a * b);
                matrixK[10][11] = 0;
                matrixK[10][12] = -(b * D4) / 30;
                matrixK[10][13] = (2 * a * a * b * b * D4 - 80 * a * a * D3 + 35 * b * b * D1) / (225 * a * b);
                matrixK[10][14] = -(D3 - D2) / 3;
                matrixK[10][15] = (2 * b * D4) / 45;
                matrixK[10][16] = (a * a * b * b * D4 - 40 * a * a * D3 - 40 * b * b * D1) / (225 * a * b);
                matrixK[10][17] = (4 * D3 + 4 * D2) / 9;
                matrixK[10][18] = -(b * D4) / 90;
                matrixK[10][19] = -(a * a * b * b * D4 - 40 * a * a * D3 - 10 * b * b * D1) / (450 * a * b);
                matrixK[10][20] = -(D3 + D2) / 9;
                matrixK[10][21] = -(4 * b * D4) / 45;
                matrixK[10][22] = -(4 * a * a * b * b * D4 + 40 * a * a * D3 - 40 * b * b * D1) / (225 * a * b);
                matrixK[10][23] = 0;
                matrixK[10][24] = (16 * b * D4) / 45;
                matrixK[10][25] = (8 * a * a * b * b * D4 + 80 * a * a * D3 - 320 * b * b * D1) / (225 * a * b);
                matrixK[10][26] = 0;

                matrixK[11][0] = -(a * D4) / 45;
                matrixK[11][1] = (D3 + D2) / 9;
                matrixK[11][2] = -(a * a * b * b * D4 - 10 * b * b * D3 - 40 * a * a * D1) / (450 * a * b);
                matrixK[11][3] = (2 * a * D4) / 45;
                matrixK[11][4] = -(4 * D3 + 4 * D2) / 9;
                matrixK[11][5] = (a * a * b * b * D4 - 40 * b * b * D3 - 40 * a * a * D1) / (225 * a * b);
                matrixK[11][6] = (4 * a * D4) / 45;
                matrixK[11][7] = -(D3 - D2) / 3;
                matrixK[11][8] = (2 * a * a * b * b * D4 + 35 * b * b * D3 - 80 * a * a * D1) / (225 * a * b);
                matrixK[11][9] = 0;
                matrixK[11][10] = 0;
                matrixK[11][11] = (16 * a * a * b * b * D4 + 280 * b * b * D3 + 160 * a * a * D1) / (225 * a * b);
                matrixK[11][12] = -(4 * a * D4) / 45;
                matrixK[11][13] = (D3 - D2) / 3;
                matrixK[11][14] = (2 * a * a * b * b * D4 + 35 * b * b * D3 - 80 * a * a * D1) / (225 * a * b);
                matrixK[11][15] = -(2 * a * D4) / 45;
                matrixK[11][16] = (4 * D3 + 4 * D2) / 9;
                matrixK[11][17] = (a * a * b * b * D4 - 40 * b * b * D3 - 40 * a * a * D1) / (225 * a * b);
                matrixK[11][18] = (a * D4) / 45;
                matrixK[11][19] = -(D3 + D2) / 9;
                matrixK[11][20] = -(a * a * b * b * D4 - 10 * b * b * D3 - 40 * a * a * D1) / (450 * a * b);
                matrixK[11][21] = 0;
                matrixK[11][22] = 0;
                matrixK[11][23] = -(4 * a * a * b * b * D4 - 40 * b * b * D3 + 40 * a * a * D1) / (225 * a * b);
                matrixK[11][24] = 0;
                matrixK[11][25] = 0;
                matrixK[11][26] = (8 * a * a * b * b * D4 - 320 * b * b * D3 + 80 * a * a * D1) / (225 * a * b);

                matrixK[12][0] = -((b * b + a * a) * D4) / (90 * a * b);
                matrixK[12][1] = -(b * D4) / 180;
                matrixK[12][2] = -(a * D4) / 180;
                matrixK[12][3] = ((4 * b * b + a * a) * D4) / (45 * a * b);
                matrixK[12][4] = (b * D4) / 45;
                matrixK[12][5] = (a * D4) / 90;
                matrixK[12][6] = -((7 * b * b - 4 * a * a) * D4) / (90 * a * b);
                matrixK[12][7] = (b * D4) / 60;
                matrixK[12][8] = (a * D4) / 45;
                matrixK[12][9] = ((7 * b * b - 16 * a * a) * D4) / (45 * a * b);
                matrixK[12][10] = -(b * D4) / 30;
                matrixK[12][11] = -(4 * a * D4) / 45;
                matrixK[12][12] = ((14 * b * b + 14 * a * a) * D4) / (45 * a * b);
                matrixK[12][13] = -(b * D4) / 15;
                matrixK[12][14] = -(a * D4) / 15;
                matrixK[12][15] = -((16 * b * b - 7 * a * a) * D4) / (45 * a * b);
                matrixK[12][16] = -(4 * b * D4) / 45;
                matrixK[12][17] = -(a * D4) / 30;
                matrixK[12][18] = ((4 * b * b - 7 * a * a) * D4) / (90 * a * b);
                matrixK[12][19] = (b * D4) / 45;
                matrixK[12][20] = (a * D4) / 60;
                matrixK[12][21] = ((b * b + 4 * a * a) * D4) / (45 * a * b);
                matrixK[12][22] = (b * D4) / 90;
                matrixK[12][23] = (a * D4) / 45;
                matrixK[12][24] = -((8 * b * b + 8 * a * a) * D4) / (45 * a * b);
                matrixK[12][25] = -(2 * b * D4) / 45;
                matrixK[12][26] = -(2 * a * D4) / 45;

                matrixK[13][0] = (b * D4) / 180;
                matrixK[13][1] = (a * a * b * b * D4 - 10 * a * a * D3 - 10 * b * b * D1) / (900 * a * b);
                matrixK[13][2] = -(D3 + D2) / 36;
                matrixK[13][3] = -(b * D4) / 45;
                matrixK[13][4] = -(a * a * b * b * D4 - 10 * a * a * D3 - 40 * b * b * D1) / (450 * a * b);
                matrixK[13][5] = (D3 + D2) / 9;
                matrixK[13][6] = (b * D4) / 60;
                matrixK[13][7] = -(2 * a * a * b * b * D4 - 20 * a * a * D3 + 35 * b * b * D1) / (450 * a * b);
                matrixK[13][8] = -(D3 - D2) / 12;
                matrixK[13][9] = -(b * D4) / 30;
                matrixK[13][10] = (2 * a * a * b * b * D4 - 80 * a * a * D3 + 35 * b * b * D1) / (225 * a * b);
                matrixK[13][11] = (D3 - D2) / 3;
                matrixK[13][12] = -(b * D4) / 15;
                matrixK[13][13] = (4 * a * a * b * b * D4 + 70 * a * a * D3 + 70 * b * b * D1) / (225 * a * b);
                matrixK[13][14] = (D3 + D2) / 4;
                matrixK[13][15] = (4 * b * D4) / 45;
                matrixK[13][16] = (2 * a * a * b * b * D4 + 35 * a * a * D3 - 80 * b * b * D1) / (225 * a * b);
                matrixK[13][17] = -(D3 - D2) / 3;
                matrixK[13][18] = -(b * D4) / 45;
                matrixK[13][19] = -(2 * a * a * b * b * D4 + 35 * a * a * D3 - 20 * b * b * D1) / (450 * a * b);
                matrixK[13][20] = (D3 - D2) / 12;
                matrixK[13][21] = -(b * D4) / 90;
                matrixK[13][22] = -(a * a * b * b * D4 - 40 * a * a * D3 - 10 * b * b * D1) / (450 * a * b);
                matrixK[13][23] = (D3 + D2) / 9;
                matrixK[13][24] = (2 * b * D4) / 45;
                matrixK[13][25] = (a * a * b * b * D4 - 40 * a * a * D3 - 40 * b * b * D1) / (225 * a * b);
                matrixK[13][26] = -(4 * D3 + 4 * D2) / 9;

                matrixK[14][0] = (a * D4) / 180;
                matrixK[14][1] = -(D3 + D2) / 36;
                matrixK[14][2] = (a * a * b * b * D4 - 10 * b * b * D3 - 10 * a * a * D1) / (900 * a * b);
                matrixK[14][3] = -(a * D4) / 90;
                matrixK[14][4] = (D3 + D2) / 9;
                matrixK[14][5] = -(a * a * b * b * D4 - 40 * b * b * D3 - 10 * a * a * D1) / (450 * a * b);
                matrixK[14][6] = -(a * D4) / 45;
                matrixK[14][7] = (D3 - D2) / 12;
                matrixK[14][8] = -(2 * a * a * b * b * D4 + 35 * b * b * D3 - 20 * a * a * D1) / (450 * a * b);
                matrixK[14][9] = (4 * a * D4) / 45;
                matrixK[14][10] = -(D3 - D2) / 3;
                matrixK[14][11] = (2 * a * a * b * b * D4 + 35 * b * b * D3 - 80 * a * a * D1) / (225 * a * b);
                matrixK[14][12] = -(a * D4) / 15;
                matrixK[14][13] = (D3 + D2) / 4;
                matrixK[14][14] = (4 * a * a * b * b * D4 + 70 * b * b * D3 + 70 * a * a * D1) / (225 * a * b);
                matrixK[14][15] = -(a * D4) / 30;
                matrixK[14][16] = (D3 - D2) / 3;
                matrixK[14][17] = (2 * a * a * b * b * D4 - 80 * b * b * D3 + 35 * a * a * D1) / (225 * a * b);
                matrixK[14][18] = (a * D4) / 60;
                matrixK[14][19] = -(D3 - D2) / 12;
                matrixK[14][20] = -(2 * a * a * b * b * D4 - 20 * b * b * D3 + 35 * a * a * D1) / (450 * a * b);
                matrixK[14][21] = -(a * D4) / 45;
                matrixK[14][22] = (D3 + D2) / 9;
                matrixK[14][23] = -(a * a * b * b * D4 - 10 * b * b * D3 - 40 * a * a * D1) / (450 * a * b);
                matrixK[14][24] = (2 * a * D4) / 45;
                matrixK[14][25] = -(4 * D3 + 4 * D2) / 9;
                matrixK[14][26] = (a * a * b * b * D4 - 40 * b * b * D3 - 40 * a * a * D1) / (225 * a * b);

                matrixK[15][0] = ((4 * b * b + a * a) * D4) / (45 * a * b);
                matrixK[15][1] = (b * D4) / 45;
                matrixK[15][2] = (a * D4) / 90;
                matrixK[15][3] = -((8 * b * b - 8 * a * a) * D4) / (45 * a * b);
                matrixK[15][4] = 0;
                matrixK[15][5] = (4 * a * D4) / 45;
                matrixK[15][6] = ((4 * b * b + a * a) * D4) / (45 * a * b);
                matrixK[15][7] = -(b * D4) / 45;
                matrixK[15][8] = (a * D4) / 90;
                matrixK[15][9] = -((8 * b * b + 8 * a * a) * D4) / (45 * a * b);
                matrixK[15][10] = (2 * b * D4) / 45;
                matrixK[15][11] = -(2 * a * D4) / 45;
                matrixK[15][12] = -((16 * b * b - 7 * a * a) * D4) / (45 * a * b);
                matrixK[15][13] = (4 * b * D4) / 45;
                matrixK[15][14] = -(a * D4) / 30;
                matrixK[15][15] = ((32 * b * b + 56 * a * a) * D4) / (45 * a * b);
                matrixK[15][16] = 0;
                matrixK[15][17] = -(4 * a * D4) / 15;
                matrixK[15][18] = -((16 * b * b - 7 * a * a) * D4) / (45 * a * b);
                matrixK[15][19] = -(4 * b * D4) / 45;
                matrixK[15][20] = -(a * D4) / 30;
                matrixK[15][21] = -((8 * b * b + 8 * a * a) * D4) / (45 * a * b);
                matrixK[15][22] = -(2 * b * D4) / 45;
                matrixK[15][23] = -(2 * a * D4) / 45;
                matrixK[15][24] = ((16 * b * b - 64 * a * a) * D4) / (45 * a * b);
                matrixK[15][25] = 0;
                matrixK[15][26] = -(16 * a * D4) / 45;

                matrixK[16][0] = -(b * D4) / 45;
                matrixK[16][1] = -(a * a * b * b * D4 - 10 * a * a * D3 - 40 * b * b * D1) / (450 * a * b);
                matrixK[16][2] = (D3 + D2) / 9;
                matrixK[16][3] = 0;
                matrixK[16][4] = -(4 * a * a * b * b * D4 - 40 * a * a * D3 + 40 * b * b * D1) / (225 * a * b);
                matrixK[16][5] = 0;
                matrixK[16][6] = (b * D4) / 45;
                matrixK[16][7] = -(a * a * b * b * D4 - 10 * a * a * D3 - 40 * b * b * D1) / (450 * a * b);
                matrixK[16][8] = -(D3 + D2) / 9;
                matrixK[16][9] = -(2 * b * D4) / 45;
                matrixK[16][10] = (a * a * b * b * D4 - 40 * a * a * D3 - 40 * b * b * D1) / (225 * a * b);
                matrixK[16][11] = (4 * D3 + 4 * D2) / 9;
                matrixK[16][12] = -(4 * b * D4) / 45;
                matrixK[16][13] = (2 * a * a * b * b * D4 + 35 * a * a * D3 - 80 * b * b * D1) / (225 * a * b);
                matrixK[16][14] = (D3 - D2) / 3;
                matrixK[16][15] = 0;
                matrixK[16][16] = (16 * a * a * b * b * D4 + 280 * a * a * D3 + 160 * b * b * D1) / (225 * a * b);
                matrixK[16][17] = 0;
                matrixK[16][18] = (4 * b * D4) / 45;
                matrixK[16][19] = (2 * a * a * b * b * D4 + 35 * a * a * D3 - 80 * b * b * D1) / (225 * a * b);
                matrixK[16][20] = -(D3 - D2) / 3;
                matrixK[16][21] = (2 * b * D4) / 45;
                matrixK[16][22] = (a * a * b * b * D4 - 40 * a * a * D3 - 40 * b * b * D1) / (225 * a * b);
                matrixK[16][23] = -(4 * D3 + 4 * D2) / 9;
                matrixK[16][24] = 0;
                matrixK[16][25] = (8 * a * a * b * b * D4 - 320 * a * a * D3 + 80 * b * b * D1) / (225 * a * b);
                matrixK[16][26] = 0;

                matrixK[17][0] = -(a * D4) / 90;
                matrixK[17][1] = (D3 + D2) / 9;
                matrixK[17][2] = -(a * a * b * b * D4 - 40 * b * b * D3 - 10 * a * a * D1) / (450 * a * b);
                matrixK[17][3] = -(4 * a * D4) / 45;
                matrixK[17][4] = 0;
                matrixK[17][5] = -(4 * a * a * b * b * D4 + 40 * b * b * D3 - 40 * a * a * D1) / (225 * a * b);
                matrixK[17][6] = -(a * D4) / 90;
                matrixK[17][7] = -(D3 + D2) / 9;
                matrixK[17][8] = -(a * a * b * b * D4 - 40 * b * b * D3 - 10 * a * a * D1) / (450 * a * b);
                matrixK[17][9] = (2 * a * D4) / 45;
                matrixK[17][10] = (4 * D3 + 4 * D2) / 9;
                matrixK[17][11] = (a * a * b * b * D4 - 40 * b * b * D3 - 40 * a * a * D1) / (225 * a * b);
                matrixK[17][12] = -(a * D4) / 30;
                matrixK[17][13] = -(D3 - D2) / 3;
                matrixK[17][14] = (2 * a * a * b * b * D4 - 80 * b * b * D3 + 35 * a * a * D1) / (225 * a * b);
                matrixK[17][15] = -(4 * a * D4) / 15;
                matrixK[17][16] = 0;
                matrixK[17][17] = (16 * a * a * b * b * D4 + 160 * b * b * D3 + 280 * a * a * D1) / (225 * a * b);
                matrixK[17][18] = -(a * D4) / 30;
                matrixK[17][19] = (D3 - D2) / 3;
                matrixK[17][20] = (2 * a * a * b * b * D4 - 80 * b * b * D3 + 35 * a * a * D1) / (225 * a * b);
                matrixK[17][21] = (2 * a * D4) / 45;
                matrixK[17][22] = -(4 * D3 + 4 * D2) / 9;
                matrixK[17][23] = (a * a * b * b * D4 - 40 * b * b * D3 - 40 * a * a * D1) / (225 * a * b);
                matrixK[17][24] = (16 * a * D4) / 45;
                matrixK[17][25] = 0;
                matrixK[17][26] = (8 * a * a * b * b * D4 + 80 * b * b * D3 - 320 * a * a * D1) / (225 * a * b);

                matrixK[18][0] = -((7 * b * b - 4 * a * a) * D4) / (90 * a * b);
                matrixK[18][1] = -(b * D4) / 60;
                matrixK[18][2] = (a * D4) / 45;
                matrixK[18][3] = ((4 * b * b + a * a) * D4) / (45 * a * b);
                matrixK[18][4] = -(b * D4) / 45;
                matrixK[18][5] = (a * D4) / 90;
                matrixK[18][6] = -((b * b + a * a) * D4) / (90 * a * b);
                matrixK[18][7] = (b * D4) / 180;
                matrixK[18][8] = -(a * D4) / 180;
                matrixK[18][9] = ((b * b + 4 * a * a) * D4) / (45 * a * b);
                matrixK[18][10] = -(b * D4) / 90;
                matrixK[18][11] = (a * D4) / 45;
                matrixK[18][12] = ((4 * b * b - 7 * a * a) * D4) / (90 * a * b);
                matrixK[18][13] = -(b * D4) / 45;
                matrixK[18][14] = (a * D4) / 60;
                matrixK[18][15] = -((16 * b * b - 7 * a * a) * D4) / (45 * a * b);
                matrixK[18][16] = (4 * b * D4) / 45;
                matrixK[18][17] = -(a * D4) / 30;
                matrixK[18][18] = ((14 * b * b + 14 * a * a) * D4) / (45 * a * b);
                matrixK[18][19] = (b * D4) / 15;
                matrixK[18][20] = -(a * D4) / 15;
                matrixK[18][21] = ((7 * b * b - 16 * a * a) * D4) / (45 * a * b);
                matrixK[18][22] = (b * D4) / 30;
                matrixK[18][23] = -(4 * a * D4) / 45;
                matrixK[18][24] = -((8 * b * b + 8 * a * a) * D4) / (45 * a * b);
                matrixK[18][25] = (2 * b * D4) / 45;
                matrixK[18][26] = -(2 * a * D4) / 45;

                matrixK[19][0] = -(b * D4) / 60;
                matrixK[19][1] = -(2 * a * a * b * b * D4 - 20 * a * a * D3 + 35 * b * b * D1) / (450 * a * b);
                matrixK[19][2] = (D3 - D2) / 12;
                matrixK[19][3] = (b * D4) / 45;
                matrixK[19][4] = -(a * a * b * b * D4 - 10 * a * a * D3 - 40 * b * b * D1) / (450 * a * b);
                matrixK[19][5] = -(D3 + D2) / 9;
                matrixK[19][6] = -(b * D4) / 180;
                matrixK[19][7] = (a * a * b * b * D4 - 10 * a * a * D3 - 10 * b * b * D1) / (900 * a * b);
                matrixK[19][8] = (D3 + D2) / 36;
                matrixK[19][9] = (b * D4) / 90;
                matrixK[19][10] = -(a * a * b * b * D4 - 40 * a * a * D3 - 10 * b * b * D1) / (450 * a * b);
                matrixK[19][11] = -(D3 + D2) / 9;
                matrixK[19][12] = (b * D4) / 45;
                matrixK[19][13] = -(2 * a * a * b * b * D4 + 35 * a * a * D3 - 20 * b * b * D1) / (450 * a * b);
                matrixK[19][14] = -(D3 - D2) / 12;
                matrixK[19][15] = -(4 * b * D4) / 45;
                matrixK[19][16] = (2 * a * a * b * b * D4 + 35 * a * a * D3 - 80 * b * b * D1) / (225 * a * b);
                matrixK[19][17] = (D3 - D2) / 3;
                matrixK[19][18] = (b * D4) / 15;
                matrixK[19][19] = (4 * a * a * b * b * D4 + 70 * a * a * D3 + 70 * b * b * D1) / (225 * a * b);
                matrixK[19][20] = -(D3 + D2) / 4;
                matrixK[19][21] = (b * D4) / 30;
                matrixK[19][22] = (2 * a * a * b * b * D4 - 80 * a * a * D3 + 35 * b * b * D1) / (225 * a * b);
                matrixK[19][23] = -(D3 - D2) / 3;
                matrixK[19][24] = -(2 * b * D4) / 45;
                matrixK[19][25] = (a * a * b * b * D4 - 40 * a * a * D3 - 40 * b * b * D1) / (225 * a * b);
                matrixK[19][26] = (4 * D3 + 4 * D2) / 9;

                matrixK[20][0] = -(a * D4) / 45;
                matrixK[20][1] = -(D3 - D2) / 12;
                matrixK[20][2] = -(2 * a * a * b * b * D4 + 35 * b * b * D3 - 20 * a * a * D1) / (450 * a * b);
                matrixK[20][3] = -(a * D4) / 90;
                matrixK[20][4] = -(D3 + D2) / 9;
                matrixK[20][5] = -(a * a * b * b * D4 - 40 * b * b * D3 - 10 * a * a * D1) / (450 * a * b);
                matrixK[20][6] = (a * D4) / 180;
                matrixK[20][7] = (D3 + D2) / 36;
                matrixK[20][8] = (a * a * b * b * D4 - 10 * b * b * D3 - 10 * a * a * D1) / (900 * a * b);
                matrixK[20][9] = -(a * D4) / 45;
                matrixK[20][10] = -(D3 + D2) / 9;
                matrixK[20][11] = -(a * a * b * b * D4 - 10 * b * b * D3 - 40 * a * a * D1) / (450 * a * b);
                matrixK[20][12] = (a * D4) / 60;
                matrixK[20][13] = (D3 - D2) / 12;
                matrixK[20][14] = -(2 * a * a * b * b * D4 - 20 * b * b * D3 + 35 * a * a * D1) / (450 * a * b);
                matrixK[20][15] = -(a * D4) / 30;
                matrixK[20][16] = -(D3 - D2) / 3;
                matrixK[20][17] = (2 * a * a * b * b * D4 - 80 * b * b * D3 + 35 * a * a * D1) / (225 * a * b);
                matrixK[20][18] = -(a * D4) / 15;
                matrixK[20][19] = -(D3 + D2) / 4;
                matrixK[20][20] = (4 * a * a * b * b * D4 + 70 * b * b * D3 + 70 * a * a * D1) / (225 * a * b);
                matrixK[20][21] = (4 * a * D4) / 45;
                matrixK[20][22] = (D3 - D2) / 3;
                matrixK[20][23] = (2 * a * a * b * b * D4 + 35 * b * b * D3 - 80 * a * a * D1) / (225 * a * b);
                matrixK[20][24] = (2 * a * D4) / 45;
                matrixK[20][25] = (4 * D3 + 4 * D2) / 9;
                matrixK[20][26] = (a * a * b * b * D4 - 40 * b * b * D3 - 40 * a * a * D1) / (225 * a * b);

                matrixK[21][0] = ((7 * b * b - 16 * a * a) * D4) / (45 * a * b);
                matrixK[21][1] = (b * D4) / 30;
                matrixK[21][2] = -(4 * a * D4) / 45;
                matrixK[21][3] = -((8 * b * b + 8 * a * a) * D4) / (45 * a * b);
                matrixK[21][4] = (2 * b * D4) / 45;
                matrixK[21][5] = -(2 * a * D4) / 45;
                matrixK[21][6] = ((b * b + 4 * a * a) * D4) / (45 * a * b);
                matrixK[21][7] = -(b * D4) / 90;
                matrixK[21][8] = (a * D4) / 45;
                matrixK[21][9] = ((8 * b * b - 8 * a * a) * D4) / (45 * a * b);
                matrixK[21][10] = -(4 * b * D4) / 45;
                matrixK[21][11] = 0;
                matrixK[21][12] = ((b * b + 4 * a * a) * D4) / (45 * a * b);
                matrixK[21][13] = -(b * D4) / 90;
                matrixK[21][14] = -(a * D4) / 45;
                matrixK[21][15] = -((8 * b * b + 8 * a * a) * D4) / (45 * a * b);
                matrixK[21][16] = (2 * b * D4) / 45;
                matrixK[21][17] = (2 * a * D4) / 45;
                matrixK[21][18] = ((7 * b * b - 16 * a * a) * D4) / (45 * a * b);
                matrixK[21][19] = (b * D4) / 30;
                matrixK[21][20] = (4 * a * D4) / 45;
                matrixK[21][21] = ((56 * b * b + 32 * a * a) * D4) / (45 * a * b);
                matrixK[21][22] = (4 * b * D4) / 15;
                matrixK[21][23] = 0;
                matrixK[21][24] = -((64 * b * b - 16 * a * a) * D4) / (45 * a * b);
                matrixK[21][25] = (16 * b * D4) / 45;
                matrixK[21][26] = 0;

                matrixK[22][0] = (b * D4) / 30;
                matrixK[22][1] = (2 * a * a * b * b * D4 - 80 * a * a * D3 + 35 * b * b * D1) / (225 * a * b);
                matrixK[22][2] = -(D3 - D2) / 3;
                matrixK[22][3] = -(2 * b * D4) / 45;
                matrixK[22][4] = (a * a * b * b * D4 - 40 * a * a * D3 - 40 * b * b * D1) / (225 * a * b);
                matrixK[22][5] = (4 * D3 + 4 * D2) / 9;
                matrixK[22][6] = (b * D4) / 90;
                matrixK[22][7] = -(a * a * b * b * D4 - 40 * a * a * D3 - 10 * b * b * D1) / (450 * a * b);
                matrixK[22][8] = -(D3 + D2) / 9;
                matrixK[22][9] = (4 * b * D4) / 45;
                matrixK[22][10] = -(4 * a * a * b * b * D4 + 40 * a * a * D3 - 40 * b * b * D1) / (225 * a * b);
                matrixK[22][11] = 0;
                matrixK[22][12] = (b * D4) / 90;
                matrixK[22][13] = -(a * a * b * b * D4 - 40 * a * a * D3 - 10 * b * b * D1) / (450 * a * b);
                matrixK[22][14] = (D3 + D2) / 9;
                matrixK[22][15] = -(2 * b * D4) / 45;
                matrixK[22][16] = (a * a * b * b * D4 - 40 * a * a * D3 - 40 * b * b * D1) / (225 * a * b);
                matrixK[22][17] = -(4 * D3 + 4 * D2) / 9;
                matrixK[22][18] = (b * D4) / 30;
                matrixK[22][19] = (2 * a * a * b * b * D4 - 80 * a * a * D3 + 35 * b * b * D1) / (225 * a * b);
                matrixK[22][20] = (D3 - D2) / 3;
                matrixK[22][21] = (4 * b * D4) / 15;
                matrixK[22][22] = (16 * a * a * b * b * D4 + 160 * a * a * D3 + 280 * b * b * D1) / (225 * a * b);
                matrixK[22][23] = 0;
                matrixK[22][24] = -(16 * b * D4) / 45;
                matrixK[22][25] = (8 * a * a * b * b * D4 + 80 * a * a * D3 - 320 * b * b * D1) / (225 * a * b);
                matrixK[22][26] = 0;

                matrixK[23][0] = (4 * a * D4) / 45;
                matrixK[23][1] = (D3 - D2) / 3;
                matrixK[23][2] = (2 * a * a * b * b * D4 + 35 * b * b * D3 - 80 * a * a * D1) / (225 * a * b);
                matrixK[23][3] = (2 * a * D4) / 45;
                matrixK[23][4] = (4 * D3 + 4 * D2) / 9;
                matrixK[23][5] = (a * a * b * b * D4 - 40 * b * b * D3 - 40 * a * a * D1) / (225 * a * b);
                matrixK[23][6] = -(a * D4) / 45;
                matrixK[23][7] = -(D3 + D2) / 9;
                matrixK[23][8] = -(a * a * b * b * D4 - 10 * b * b * D3 - 40 * a * a * D1) / (450 * a * b);
                matrixK[23][9] = 0;
                matrixK[23][10] = 0;
                matrixK[23][11] = -(4 * a * a * b * b * D4 - 40 * b * b * D3 + 40 * a * a * D1) / (225 * a * b);
                matrixK[23][12] = (a * D4) / 45;
                matrixK[23][13] = (D3 + D2) / 9;
                matrixK[23][14] = -(a * a * b * b * D4 - 10 * b * b * D3 - 40 * a * a * D1) / (450 * a * b);
                matrixK[23][15] = -(2 * a * D4) / 45;
                matrixK[23][16] = -(4 * D3 + 4 * D2) / 9;
                matrixK[23][17] = (a * a * b * b * D4 - 40 * b * b * D3 - 40 * a * a * D1) / (225 * a * b);
                matrixK[23][18] = -(4 * a * D4) / 45;
                matrixK[23][19] = -(D3 - D2) / 3;
                matrixK[23][20] = (2 * a * a * b * b * D4 + 35 * b * b * D3 - 80 * a * a * D1) / (225 * a * b);
                matrixK[23][21] = 0;
                matrixK[23][22] = 0;
                matrixK[23][23] = (16 * a * a * b * b * D4 + 280 * b * b * D3 + 160 * a * a * D1) / (225 * a * b);
                matrixK[23][24] = 0;
                matrixK[23][25] = 0;
                matrixK[23][26] = (8 * a * a * b * b * D4 - 320 * b * b * D3 + 80 * a * a * D1) / (225 * a * b);

                matrixK[24][0] = -((8 * b * b + 8 * a * a) * D4) / (45 * a * b);
                matrixK[24][1] = -(2 * b * D4) / 45;
                matrixK[24][2] = -(2 * a * D4) / 45;
                matrixK[24][3] = ((16 * b * b - 64 * a * a) * D4) / (45 * a * b);
                matrixK[24][4] = 0;
                matrixK[24][5] = -(16 * a * D4) / 45;
                matrixK[24][6] = -((8 * b * b + 8 * a * a) * D4) / (45 * a * b);
                matrixK[24][7] = (2 * b * D4) / 45;
                matrixK[24][8] = -(2 * a * D4) / 45;
                matrixK[24][9] = -((64 * b * b - 16 * a * a) * D4) / (45 * a * b);
                matrixK[24][10] = (16 * b * D4) / 45;
                matrixK[24][11] = 0;
                matrixK[24][12] = -((8 * b * b + 8 * a * a) * D4) / (45 * a * b);
                matrixK[24][13] = (2 * b * D4) / 45;
                matrixK[24][14] = (2 * a * D4) / 45;
                matrixK[24][15] = ((16 * b * b - 64 * a * a) * D4) / (45 * a * b);
                matrixK[24][16] = 0;
                matrixK[24][17] = (16 * a * D4) / 45;
                matrixK[24][18] = -((8 * b * b + 8 * a * a) * D4) / (45 * a * b);
                matrixK[24][19] = -(2 * b * D4) / 45;
                matrixK[24][20] = (2 * a * D4) / 45;
                matrixK[24][21] = -((64 * b * b - 16 * a * a) * D4) / (45 * a * b);
                matrixK[24][22] = -(16 * b * D4) / 45;
                matrixK[24][23] = 0;
                matrixK[24][24] = ((128 * b * b + 128 * a * a) * D4) / (45 * a * b);
                matrixK[24][25] = 0;
                matrixK[24][26] = 0;

                matrixK[25][0] = (2 * b * D4) / 45;
                matrixK[25][1] = (a * a * b * b * D4 - 40 * a * a * D3 - 40 * b * b * D1) / (225 * a * b);
                matrixK[25][2] = -(4 * D3 + 4 * D2) / 9;
                matrixK[25][3] = 0;
                matrixK[25][4] = (8 * a * a * b * b * D4 - 320 * a * a * D3 + 80 * b * b * D1) / (225 * a * b);
                matrixK[25][5] = 0;
                matrixK[25][6] = -(2 * b * D4) / 45;
                matrixK[25][7] = (a * a * b * b * D4 - 40 * a * a * D3 - 40 * b * b * D1) / (225 * a * b);
                matrixK[25][8] = (4 * D3 + 4 * D2) / 9;
                matrixK[25][9] = -(16 * b * D4) / 45;
                matrixK[25][10] = (8 * a * a * b * b * D4 + 80 * a * a * D3 - 320 * b * b * D1) / (225 * a * b);
                matrixK[25][11] = 0;
                matrixK[25][12] = -(2 * b * D4) / 45;
                matrixK[25][13] = (a * a * b * b * D4 - 40 * a * a * D3 - 40 * b * b * D1) / (225 * a * b);
                matrixK[25][14] = -(4 * D3 + 4 * D2) / 9;
                matrixK[25][15] = 0;
                matrixK[25][16] = (8 * a * a * b * b * D4 - 320 * a * a * D3 + 80 * b * b * D1) / (225 * a * b);
                matrixK[25][17] = 0;
                matrixK[25][18] = (2 * b * D4) / 45;
                matrixK[25][19] = (a * a * b * b * D4 - 40 * a * a * D3 - 40 * b * b * D1) / (225 * a * b);
                matrixK[25][20] = (4 * D3 + 4 * D2) / 9;
                matrixK[25][21] = (16 * b * D4) / 45;
                matrixK[25][22] = (8 * a * a * b * b * D4 + 80 * a * a * D3 - 320 * b * b * D1) / (225 * a * b);
                matrixK[25][23] = 0;
                matrixK[25][24] = 0;
                matrixK[25][25] = (64 * a * a * b * b * D4 + 640 * a * a * D3 + 640 * b * b * D1) / (225 * a * b);
                matrixK[25][26] = 0;

                matrixK[26][0] = (2 * a * D4) / 45;
                matrixK[26][1] = -(4 * D3 + 4 * D2) / 9;
                matrixK[26][2] = (a * a * b * b * D4 - 40 * b * b * D3 - 40 * a * a * D1) / (225 * a * b);
                matrixK[26][3] = (16 * a * D4) / 45;
                matrixK[26][4] = 0;
                matrixK[26][5] = (8 * a * a * b * b * D4 + 80 * b * b * D3 - 320 * a * a * D1) / (225 * a * b);
                matrixK[26][6] = (2 * a * D4) / 45;
                matrixK[26][7] = (4 * D3 + 4 * D2) / 9;
                matrixK[26][8] = (a * a * b * b * D4 - 40 * b * b * D3 - 40 * a * a * D1) / (225 * a * b);
                matrixK[26][9] = 0;
                matrixK[26][10] = 0;
                matrixK[26][11] = (8 * a * a * b * b * D4 - 320 * b * b * D3 + 80 * a * a * D1) / (225 * a * b);
                matrixK[26][12] = -(2 * a * D4) / 45;
                matrixK[26][13] = -(4 * D3 + 4 * D2) / 9;
                matrixK[26][14] = (a * a * b * b * D4 - 40 * b * b * D3 - 40 * a * a * D1) / (225 * a * b);
                matrixK[26][15] = -(16 * a * D4) / 45;
                matrixK[26][16] = 0;
                matrixK[26][17] = (8 * a * a * b * b * D4 + 80 * b * b * D3 - 320 * a * a * D1) / (225 * a * b);
                matrixK[26][18] = -(2 * a * D4) / 45;
                matrixK[26][19] = (4 * D3 + 4 * D2) / 9;
                matrixK[26][20] = (a * a * b * b * D4 - 40 * b * b * D3 - 40 * a * a * D1) / (225 * a * b);
                matrixK[26][21] = 0;
                matrixK[26][22] = 0;
                matrixK[26][23] = (8 * a * a * b * b * D4 - 320 * b * b * D3 + 80 * a * a * D1) / (225 * a * b);
                matrixK[26][24] = 0;
                matrixK[26][25] = 0;
                matrixK[26][26] = (64 * a * a * b * b * D4 + 640 * b * b * D3 + 640 * a * a * D1) / (225 * a * b);
            } else {
                matrixK = null;
            }
        } else {
            matrixK = null;
        }

        return matrixK;
    }

    /**
     * Este método fornece a matriz de rigidez de uma laje
     *
     * @param a é o comprimento do elemento finito retangular
     * @param b é a largura do elemento finito retangular
     * @param nodes é o número de nós do elemento finito
     * @param matrixD é a matriz de elasticidade do elemento finito
     * @return
     */
    public static double[][] matrixK_Kirchhoff(double a, double b, int nodes, double[][] matrixD) {
        double[][] matrixK;

        if (nodes > 1) {
            if (nodes == 4) {
                matrixK = matrixK_Kirchhoff4Nodes(a, b, matrixD);
            } else if (nodes == 8) {
                matrixK = matrixK_Kirchhoff8Nodes(a, b, matrixD);
            } else if (nodes == 9) {
                matrixK = matrixK_Kirchhoff9Nodes(a, b, matrixD);
            } else {
                matrixK = null;
            }
        } else {
            matrixK = null;
        }

        return matrixK;
    }

    /**
     * Este método fornece a matriz de rigidez de uma laje com 4 nós
     *
     * @param a é o comprimento do elemento finito retangular
     * @param b é a largura do elemento finito retangular
     * @param matrixD é a matriz de elasticidade do elemento finito
     * @return
     */
    private static double[][] matrixK_Kirchhoff4Nodes(double a, double b, double[][] matrixD) {
        double[][] matrixK;

        if (a != 0 && b != 0) {
            double a2, a3, a4, b2, b3, b4;
            double D1, D2, D3;

            D1 = matrixD[0][0];
            D2 = matrixD[1][0];
            D3 = matrixD[2][2];

            a2 = a * a;
            a3 = a * a * a;
            a4 = a * a * a * a;
            b2 = b * b;
            b3 = b * b * b;
            b4 = b * b * b * b;

            matrixK = new double[16][16];

            matrixK[0][0] = (1008 * a2 * b2 * D3 + 504 * a2 * b2 * D2 + (780 * b4 + 780 * a4) * D1) / (175 * a3 * b3);
            matrixK[0][1] = (84 * a2 * b2 * D3 + 252 * a2 * b2 * D2 + (390 * b4 + 110 * a4) * D1) / (175 * a2 * b3);
            matrixK[0][2] = (84 * a2 * b2 * D3 + 252 * a2 * b2 * D2 + (110 * b4 + 390 * a4) * D1) / (175 * a3 * b2);
            matrixK[0][3] = (14 * a2 * b2 * D3 + 77 * a2 * b2 * D2 + (110 * b4 + 110 * a4) * D1) / (350 * a2 * b2);
            matrixK[0][4] = -(1008 * a2 * b2 * D3 + 504 * a2 * b2 * D2 + (780 * b4 - 270 * a4) * D1) / (175 * a3 * b3);
            matrixK[0][5] = (84 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (390 * b4 - 65 * a4) * D1) / (175 * a2 * b3);
            matrixK[0][6] = -(84 * a2 * b2 * D3 + 252 * a2 * b2 * D2 + (110 * b4 - 135 * a4) * D1) / (175 * a3 * b2);
            matrixK[0][7] = (14 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (110 * b4 - 65 * a4) * D1) / (350 * a2 * b2);
            matrixK[0][8] = (1008 * a2 * b2 * D3 + 504 * a2 * b2 * D2 + (-270 * b4 - 270 * a4) * D1) / (175 * a3 * b3);
            matrixK[0][9] = -(84 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (-135 * b4 - 65 * a4) * D1) / (175 * a2 * b3);
            matrixK[0][10] = -(84 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (-65 * b4 - 135 * a4) * D1) / (175 * a3 * b2);
            matrixK[0][11] = (14 * a2 * b2 * D3 + 7 * a2 * b2 * D2 + (-65 * b4 - 65 * a4) * D1) / (350 * a2 * b2);
            matrixK[0][12] = -(1008 * a2 * b2 * D3 + 504 * a2 * b2 * D2 + (780 * a4 - 270 * b4) * D1) / (175 * a3 * b3);
            matrixK[0][13] = -(84 * a2 * b2 * D3 + 252 * a2 * b2 * D2 + (110 * a4 - 135 * b4) * D1) / (175 * a2 * b3);
            matrixK[0][14] = (84 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (390 * a4 - 65 * b4) * D1) / (175 * a3 * b2);
            matrixK[0][15] = (14 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (110 * a4 - 65 * b4) * D1) / (350 * a2 * b2);

            matrixK[1][0] = (84 * a2 * b2 * D3 + 252 * a2 * b2 * D2 + (390 * b4 + 110 * a4) * D1) / (175 * a2 * b3);
            matrixK[1][1] = (112 * a2 * b2 * D3 + 56 * a2 * b2 * D2 + (260 * b4 + 20 * a4) * D1) / (175 * a * b3);
            matrixK[1][2] = (14 * a2 * b2 * D3 + 427 * a2 * b2 * D2 + (110 * b4 + 110 * a4) * D1) / (350 * a2 * b2);
            matrixK[1][3] = (28 * a2 * b2 * D3 + 84 * a2 * b2 * D2 + (110 * b4 + 30 * a4) * D1) / (525 * a * b2);
            matrixK[1][4] = -(84 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (390 * b4 - 65 * a4) * D1) / (175 * a2 * b3);
            matrixK[1][5] = -(28 * a2 * b2 * D3 + 14 * a2 * b2 * D2 + (15 * a4 - 130 * b4) * D1) / (175 * a * b3);
            matrixK[1][6] = -(14 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (110 * b4 - 65 * a4) * D1) / (350 * a2 * b2);
            matrixK[1][7] = -(14 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (45 * a4 - 110 * b4) * D1) / (1050 * a * b2);
            matrixK[1][8] = (84 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (-135 * b4 - 65 * a4) * D1) / (175 * a2 * b3);
            matrixK[1][9] = (28 * a2 * b2 * D3 + 14 * a2 * b2 * D2 + (45 * b4 + 15 * a4) * D1) / (175 * a * b3);
            matrixK[1][10] = -(14 * a2 * b2 * D3 + 7 * a2 * b2 * D2 + (-65 * b4 - 65 * a4) * D1) / (350 * a2 * b2);
            matrixK[1][11] = -(14 * a2 * b2 * D3 + 7 * a2 * b2 * D2 + (65 * b4 + 45 * a4) * D1) / (1050 * a * b2);
            matrixK[1][12] = -(84 * a2 * b2 * D3 + 252 * a2 * b2 * D2 + (110 * a4 - 135 * b4) * D1) / (175 * a2 * b3);
            matrixK[1][13] = -(112 * a2 * b2 * D3 + 56 * a2 * b2 * D2 + (20 * a4 - 90 * b4) * D1) / (175 * a * b3);
            matrixK[1][14] = (14 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (110 * a4 - 65 * b4) * D1) / (350 * a2 * b2);
            matrixK[1][15] = (28 * a2 * b2 * D3 + 14 * a2 * b2 * D2 + (30 * a4 - 65 * b4) * D1) / (525 * a * b2);

            matrixK[2][0] = (84 * a2 * b2 * D3 + 252 * a2 * b2 * D2 + (110 * b4 + 390 * a4) * D1) / (175 * a3 * b2);
            matrixK[2][1] = (14 * a2 * b2 * D3 + 427 * a2 * b2 * D2 + (110 * b4 + 110 * a4) * D1) / (350 * a2 * b2);
            matrixK[2][2] = (112 * a2 * b2 * D3 + 56 * a2 * b2 * D2 + (20 * b4 + 260 * a4) * D1) / (175 * a3 * b);
            matrixK[2][3] = (28 * a2 * b2 * D3 + 84 * a2 * b2 * D2 + (30 * b4 + 110 * a4) * D1) / (525 * a2 * b);
            matrixK[2][4] = -(84 * a2 * b2 * D3 + 252 * a2 * b2 * D2 + (110 * b4 - 135 * a4) * D1) / (175 * a3 * b2);
            matrixK[2][5] = (14 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (110 * b4 - 65 * a4) * D1) / (350 * a2 * b2);
            matrixK[2][6] = -(112 * a2 * b2 * D3 + 56 * a2 * b2 * D2 + (20 * b4 - 90 * a4) * D1) / (175 * a3 * b);
            matrixK[2][7] = (28 * a2 * b2 * D3 + 14 * a2 * b2 * D2 + (30 * b4 - 65 * a4) * D1) / (525 * a2 * b);
            matrixK[2][8] = (84 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (-65 * b4 - 135 * a4) * D1) / (175 * a3 * b2);
            matrixK[2][9] = -(14 * a2 * b2 * D3 + 7 * a2 * b2 * D2 + (-65 * b4 - 65 * a4) * D1) / (350 * a2 * b2);
            matrixK[2][10] = (28 * a2 * b2 * D3 + 14 * a2 * b2 * D2 + (15 * b4 + 45 * a4) * D1) / (175 * a3 * b);
            matrixK[2][11] = -(14 * a2 * b2 * D3 + 7 * a2 * b2 * D2 + (45 * b4 + 65 * a4) * D1) / (1050 * a2 * b);
            matrixK[2][12] = -(84 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (390 * a4 - 65 * b4) * D1) / (175 * a3 * b2);
            matrixK[2][13] = -(14 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (110 * a4 - 65 * b4) * D1) / (350 * a2 * b2);
            matrixK[2][14] = -(28 * a2 * b2 * D3 + 14 * a2 * b2 * D2 + (15 * b4 - 130 * a4) * D1) / (175 * a3 * b);
            matrixK[2][15] = -(14 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (45 * b4 - 110 * a4) * D1) / (1050 * a2 * b);

            matrixK[3][0] = (14 * a2 * b2 * D3 + 77 * a2 * b2 * D2 + (110 * b4 + 110 * a4) * D1) / (350 * a2 * b2);
            matrixK[3][1] = (28 * a2 * b2 * D3 + 84 * a2 * b2 * D2 + (110 * b4 + 30 * a4) * D1) / (525 * a * b2);
            matrixK[3][2] = (28 * a2 * b2 * D3 + 84 * a2 * b2 * D2 + (30 * b4 + 110 * a4) * D1) / (525 * a2 * b);
            matrixK[3][3] = (112 * a2 * b2 * D3 + 56 * a2 * b2 * D2 + (60 * b4 + 60 * a4) * D1) / (1575 * a * b);
            matrixK[3][4] = -(14 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (110 * b4 - 65 * a4) * D1) / (350 * a2 * b2);
            matrixK[3][5] = -(14 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (45 * a4 - 110 * b4) * D1) / (1050 * a * b2);
            matrixK[3][6] = -(28 * a2 * b2 * D3 + 14 * a2 * b2 * D2 + (30 * b4 - 65 * a4) * D1) / (525 * a2 * b);
            matrixK[3][7] = -(28 * a2 * b2 * D3 + 14 * a2 * b2 * D2 + (45 * a4 - 30 * b4) * D1) / (1575 * a * b);
            matrixK[3][8] = (14 * a2 * b2 * D3 + 7 * a2 * b2 * D2 + (-65 * b4 - 65 * a4) * D1) / (350 * a2 * b2);
            matrixK[3][9] = (14 * a2 * b2 * D3 + 7 * a2 * b2 * D2 + (65 * b4 + 45 * a4) * D1) / (1050 * a * b2);
            matrixK[3][10] = (14 * a2 * b2 * D3 + 7 * a2 * b2 * D2 + (45 * b4 + 65 * a4) * D1) / (1050 * a2 * b);
            matrixK[3][11] = (14 * a2 * b2 * D3 + 7 * a2 * b2 * D2 + (-45 * b4 - 45 * a4) * D1) / (3150 * a * b);
            matrixK[3][12] = -(14 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (110 * a4 - 65 * b4) * D1) / (350 * a2 * b2);
            matrixK[3][13] = -(28 * a2 * b2 * D3 + 14 * a2 * b2 * D2 + (30 * a4 - 65 * b4) * D1) / (525 * a * b2);
            matrixK[3][14] = -(14 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (45 * b4 - 110 * a4) * D1) / (1050 * a2 * b);
            matrixK[3][15] = -(28 * a2 * b2 * D3 + 14 * a2 * b2 * D2 + (45 * b4 - 30 * a4) * D1) / (1575 * a * b);

            matrixK[4][0] = -(1008 * a2 * b2 * D3 + 504 * a2 * b2 * D2 + (780 * b4 - 270 * a4) * D1) / (175 * a3 * b3);
            matrixK[4][1] = -(84 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (390 * b4 - 65 * a4) * D1) / (175 * a2 * b3);
            matrixK[4][2] = -(84 * a2 * b2 * D3 + 252 * a2 * b2 * D2 + (110 * b4 - 135 * a4) * D1) / (175 * a3 * b2);
            matrixK[4][3] = -(14 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (110 * b4 - 65 * a4) * D1) / (350 * a2 * b2);
            matrixK[4][4] = (1008 * a2 * b2 * D3 + 504 * a2 * b2 * D2 + (780 * b4 + 780 * a4) * D1) / (175 * a3 * b3);
            matrixK[4][5] = -(84 * a2 * b2 * D3 + 252 * a2 * b2 * D2 + (390 * b4 + 110 * a4) * D1) / (175 * a2 * b3);
            matrixK[4][6] = (84 * a2 * b2 * D3 + 252 * a2 * b2 * D2 + (110 * b4 + 390 * a4) * D1) / (175 * a3 * b2);
            matrixK[4][7] = -(14 * a2 * b2 * D3 + 77 * a2 * b2 * D2 + (110 * b4 + 110 * a4) * D1) / (350 * a2 * b2);
            matrixK[4][8] = -(1008 * a2 * b2 * D3 + 504 * a2 * b2 * D2 + (780 * a4 - 270 * b4) * D1) / (175 * a3 * b3);
            matrixK[4][9] = (84 * a2 * b2 * D3 + 252 * a2 * b2 * D2 + (110 * a4 - 135 * b4) * D1) / (175 * a2 * b3);
            matrixK[4][10] = (84 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (390 * a4 - 65 * b4) * D1) / (175 * a3 * b2);
            matrixK[4][11] = -(14 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (110 * a4 - 65 * b4) * D1) / (350 * a2 * b2);
            matrixK[4][12] = (1008 * a2 * b2 * D3 + 504 * a2 * b2 * D2 + (-270 * b4 - 270 * a4) * D1) / (175 * a3 * b3);
            matrixK[4][13] = (84 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (-135 * b4 - 65 * a4) * D1) / (175 * a2 * b3);
            matrixK[4][14] = -(84 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (-65 * b4 - 135 * a4) * D1) / (175 * a3 * b2);
            matrixK[4][15] = -(14 * a2 * b2 * D3 + 7 * a2 * b2 * D2 + (-65 * b4 - 65 * a4) * D1) / (350 * a2 * b2);

            matrixK[5][0] = (84 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (390 * b4 - 65 * a4) * D1) / (175 * a2 * b3);
            matrixK[5][1] = -(28 * a2 * b2 * D3 + 14 * a2 * b2 * D2 + (15 * a4 - 130 * b4) * D1) / (175 * a * b3);
            matrixK[5][2] = (14 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (110 * b4 - 65 * a4) * D1) / (350 * a2 * b2);
            matrixK[5][3] = -(14 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (45 * a4 - 110 * b4) * D1) / (1050 * a * b2);
            matrixK[5][4] = -(84 * a2 * b2 * D3 + 252 * a2 * b2 * D2 + (390 * b4 + 110 * a4) * D1) / (175 * a2 * b3);
            matrixK[5][5] = (112 * a2 * b2 * D3 + 56 * a2 * b2 * D2 + (260 * b4 + 20 * a4) * D1) / (175 * a * b3);
            matrixK[5][6] = -(14 * a2 * b2 * D3 + 427 * a2 * b2 * D2 + (110 * b4 + 110 * a4) * D1) / (350 * a2 * b2);
            matrixK[5][7] = (28 * a2 * b2 * D3 + 84 * a2 * b2 * D2 + (110 * b4 + 30 * a4) * D1) / (525 * a * b2);
            matrixK[5][8] = (84 * a2 * b2 * D3 + 252 * a2 * b2 * D2 + (110 * a4 - 135 * b4) * D1) / (175 * a2 * b3);
            matrixK[5][9] = -(112 * a2 * b2 * D3 + 56 * a2 * b2 * D2 + (20 * a4 - 90 * b4) * D1) / (175 * a * b3);
            matrixK[5][10] = -(14 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (110 * a4 - 65 * b4) * D1) / (350 * a2 * b2);
            matrixK[5][11] = (28 * a2 * b2 * D3 + 14 * a2 * b2 * D2 + (30 * a4 - 65 * b4) * D1) / (525 * a * b2);
            matrixK[5][12] = -(84 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (-135 * b4 - 65 * a4) * D1) / (175 * a2 * b3);
            matrixK[5][13] = (28 * a2 * b2 * D3 + 14 * a2 * b2 * D2 + (45 * b4 + 15 * a4) * D1) / (175 * a * b3);
            matrixK[5][14] = (14 * a2 * b2 * D3 + 7 * a2 * b2 * D2 + (-65 * b4 - 65 * a4) * D1) / (350 * a2 * b2);
            matrixK[5][15] = -(14 * a2 * b2 * D3 + 7 * a2 * b2 * D2 + (65 * b4 + 45 * a4) * D1) / (1050 * a * b2);

            matrixK[6][0] = -(84 * a2 * b2 * D3 + 252 * a2 * b2 * D2 + (110 * b4 - 135 * a4) * D1) / (175 * a3 * b2);
            matrixK[6][1] = -(14 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (110 * b4 - 65 * a4) * D1) / (350 * a2 * b2);
            matrixK[6][2] = -(112 * a2 * b2 * D3 + 56 * a2 * b2 * D2 + (20 * b4 - 90 * a4) * D1) / (175 * a3 * b);
            matrixK[6][3] = -(28 * a2 * b2 * D3 + 14 * a2 * b2 * D2 + (30 * b4 - 65 * a4) * D1) / (525 * a2 * b);
            matrixK[6][4] = (84 * a2 * b2 * D3 + 252 * a2 * b2 * D2 + (110 * b4 + 390 * a4) * D1) / (175 * a3 * b2);
            matrixK[6][5] = -(14 * a2 * b2 * D3 + 427 * a2 * b2 * D2 + (110 * b4 + 110 * a4) * D1) / (350 * a2 * b2);
            matrixK[6][6] = (112 * a2 * b2 * D3 + 56 * a2 * b2 * D2 + (20 * b4 + 260 * a4) * D1) / (175 * a3 * b);
            matrixK[6][7] = -(28 * a2 * b2 * D3 + 84 * a2 * b2 * D2 + (30 * b4 + 110 * a4) * D1) / (525 * a2 * b);
            matrixK[6][8] = -(84 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (390 * a4 - 65 * b4) * D1) / (175 * a3 * b2);
            matrixK[6][9] = (14 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (110 * a4 - 65 * b4) * D1) / (350 * a2 * b2);
            matrixK[6][10] = -(28 * a2 * b2 * D3 + 14 * a2 * b2 * D2 + (15 * b4 - 130 * a4) * D1) / (175 * a3 * b);
            matrixK[6][11] = (14 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (45 * b4 - 110 * a4) * D1) / (1050 * a2 * b);
            matrixK[6][12] = (84 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (-65 * b4 - 135 * a4) * D1) / (175 * a3 * b2);
            matrixK[6][13] = (14 * a2 * b2 * D3 + 7 * a2 * b2 * D2 + (-65 * b4 - 65 * a4) * D1) / (350 * a2 * b2);
            matrixK[6][14] = (28 * a2 * b2 * D3 + 14 * a2 * b2 * D2 + (15 * b4 + 45 * a4) * D1) / (175 * a3 * b);
            matrixK[6][15] = (14 * a2 * b2 * D3 + 7 * a2 * b2 * D2 + (45 * b4 + 65 * a4) * D1) / (1050 * a2 * b);

            matrixK[7][0] = (14 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (110 * b4 - 65 * a4) * D1) / (350 * a2 * b2);
            matrixK[7][1] = -(14 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (45 * a4 - 110 * b4) * D1) / (1050 * a * b2);
            matrixK[7][2] = (28 * a2 * b2 * D3 + 14 * a2 * b2 * D2 + (30 * b4 - 65 * a4) * D1) / (525 * a2 * b);
            matrixK[7][3] = -(28 * a2 * b2 * D3 + 14 * a2 * b2 * D2 + (45 * a4 - 30 * b4) * D1) / (1575 * a * b);
            matrixK[7][4] = -(14 * a2 * b2 * D3 + 77 * a2 * b2 * D2 + (110 * b4 + 110 * a4) * D1) / (350 * a2 * b2);
            matrixK[7][5] = (28 * a2 * b2 * D3 + 84 * a2 * b2 * D2 + (110 * b4 + 30 * a4) * D1) / (525 * a * b2);
            matrixK[7][6] = -(28 * a2 * b2 * D3 + 84 * a2 * b2 * D2 + (30 * b4 + 110 * a4) * D1) / (525 * a2 * b);
            matrixK[7][7] = (112 * a2 * b2 * D3 + 56 * a2 * b2 * D2 + (60 * b4 + 60 * a4) * D1) / (1575 * a * b);
            matrixK[7][8] = (14 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (110 * a4 - 65 * b4) * D1) / (350 * a2 * b2);
            matrixK[7][9] = -(28 * a2 * b2 * D3 + 14 * a2 * b2 * D2 + (30 * a4 - 65 * b4) * D1) / (525 * a * b2);
            matrixK[7][10] = (14 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (45 * b4 - 110 * a4) * D1) / (1050 * a2 * b);
            matrixK[7][11] = -(28 * a2 * b2 * D3 + 14 * a2 * b2 * D2 + (45 * b4 - 30 * a4) * D1) / (1575 * a * b);
            matrixK[7][12] = -(14 * a2 * b2 * D3 + 7 * a2 * b2 * D2 + (-65 * b4 - 65 * a4) * D1) / (350 * a2 * b2);
            matrixK[7][13] = (14 * a2 * b2 * D3 + 7 * a2 * b2 * D2 + (65 * b4 + 45 * a4) * D1) / (1050 * a * b2);
            matrixK[7][14] = -(14 * a2 * b2 * D3 + 7 * a2 * b2 * D2 + (45 * b4 + 65 * a4) * D1) / (1050 * a2 * b);
            matrixK[7][15] = (14 * a2 * b2 * D3 + 7 * a2 * b2 * D2 + (-45 * b4 - 45 * a4) * D1) / (3150 * a * b);

            matrixK[8][0] = (1008 * a2 * b2 * D3 + 504 * a2 * b2 * D2 + (-270 * b4 - 270 * a4) * D1) / (175 * a3 * b3);
            matrixK[8][1] = (84 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (-135 * b4 - 65 * a4) * D1) / (175 * a2 * b3);
            matrixK[8][2] = (84 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (-65 * b4 - 135 * a4) * D1) / (175 * a3 * b2);
            matrixK[8][3] = (14 * a2 * b2 * D3 + 7 * a2 * b2 * D2 + (-65 * b4 - 65 * a4) * D1) / (350 * a2 * b2);
            matrixK[8][4] = -(1008 * a2 * b2 * D3 + 504 * a2 * b2 * D2 + (780 * a4 - 270 * b4) * D1) / (175 * a3 * b3);
            matrixK[8][5] = (84 * a2 * b2 * D3 + 252 * a2 * b2 * D2 + (110 * a4 - 135 * b4) * D1) / (175 * a2 * b3);
            matrixK[8][6] = -(84 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (390 * a4 - 65 * b4) * D1) / (175 * a3 * b2);
            matrixK[8][7] = (14 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (110 * a4 - 65 * b4) * D1) / (350 * a2 * b2);
            matrixK[8][8] = (1008 * a2 * b2 * D3 + 504 * a2 * b2 * D2 + (780 * b4 + 780 * a4) * D1) / (175 * a3 * b3);
            matrixK[8][9] = -(84 * a2 * b2 * D3 + 252 * a2 * b2 * D2 + (390 * b4 + 110 * a4) * D1) / (175 * a2 * b3);
            matrixK[8][10] = -(84 * a2 * b2 * D3 + 252 * a2 * b2 * D2 + (110 * b4 + 390 * a4) * D1) / (175 * a3 * b2);
            matrixK[8][11] = (14 * a2 * b2 * D3 + 77 * a2 * b2 * D2 + (110 * b4 + 110 * a4) * D1) / (350 * a2 * b2);
            matrixK[8][12] = -(1008 * a2 * b2 * D3 + 504 * a2 * b2 * D2 + (780 * b4 - 270 * a4) * D1) / (175 * a3 * b3);
            matrixK[8][13] = -(84 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (390 * b4 - 65 * a4) * D1) / (175 * a2 * b3);
            matrixK[8][14] = (84 * a2 * b2 * D3 + 252 * a2 * b2 * D2 + (110 * b4 - 135 * a4) * D1) / (175 * a3 * b2);
            matrixK[8][15] = (14 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (110 * b4 - 65 * a4) * D1) / (350 * a2 * b2);

            matrixK[9][0] = -(84 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (-135 * b4 - 65 * a4) * D1) / (175 * a2 * b3);
            matrixK[9][1] = (28 * a2 * b2 * D3 + 14 * a2 * b2 * D2 + (45 * b4 + 15 * a4) * D1) / (175 * a * b3);
            matrixK[9][2] = -(14 * a2 * b2 * D3 + 7 * a2 * b2 * D2 + (-65 * b4 - 65 * a4) * D1) / (350 * a2 * b2);
            matrixK[9][3] = (14 * a2 * b2 * D3 + 7 * a2 * b2 * D2 + (65 * b4 + 45 * a4) * D1) / (1050 * a * b2);
            matrixK[9][4] = (84 * a2 * b2 * D3 + 252 * a2 * b2 * D2 + (110 * a4 - 135 * b4) * D1) / (175 * a2 * b3);
            matrixK[9][5] = -(112 * a2 * b2 * D3 + 56 * a2 * b2 * D2 + (20 * a4 - 90 * b4) * D1) / (175 * a * b3);
            matrixK[9][6] = (14 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (110 * a4 - 65 * b4) * D1) / (350 * a2 * b2);
            matrixK[9][7] = -(28 * a2 * b2 * D3 + 14 * a2 * b2 * D2 + (30 * a4 - 65 * b4) * D1) / (525 * a * b2);
            matrixK[9][8] = -(84 * a2 * b2 * D3 + 252 * a2 * b2 * D2 + (390 * b4 + 110 * a4) * D1) / (175 * a2 * b3);
            matrixK[9][9] = (112 * a2 * b2 * D3 + 56 * a2 * b2 * D2 + (260 * b4 + 20 * a4) * D1) / (175 * a * b3);
            matrixK[9][10] = (14 * a2 * b2 * D3 + 427 * a2 * b2 * D2 + (110 * b4 + 110 * a4) * D1) / (350 * a2 * b2);
            matrixK[9][11] = -(28 * a2 * b2 * D3 + 84 * a2 * b2 * D2 + (110 * b4 + 30 * a4) * D1) / (525 * a * b2);
            matrixK[9][12] = (84 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (390 * b4 - 65 * a4) * D1) / (175 * a2 * b3);
            matrixK[9][13] = -(28 * a2 * b2 * D3 + 14 * a2 * b2 * D2 + (15 * a4 - 130 * b4) * D1) / (175 * a * b3);
            matrixK[9][14] = -(14 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (110 * b4 - 65 * a4) * D1) / (350 * a2 * b2);
            matrixK[9][15] = (14 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (45 * a4 - 110 * b4) * D1) / (1050 * a * b2);

            matrixK[10][0] = -(84 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (-65 * b4 - 135 * a4) * D1) / (175 * a3 * b2);
            matrixK[10][1] = -(14 * a2 * b2 * D3 + 7 * a2 * b2 * D2 + (-65 * b4 - 65 * a4) * D1) / (350 * a2 * b2);
            matrixK[10][2] = (28 * a2 * b2 * D3 + 14 * a2 * b2 * D2 + (15 * b4 + 45 * a4) * D1) / (175 * a3 * b);
            matrixK[10][3] = (14 * a2 * b2 * D3 + 7 * a2 * b2 * D2 + (45 * b4 + 65 * a4) * D1) / (1050 * a2 * b);
            matrixK[10][4] = (84 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (390 * a4 - 65 * b4) * D1) / (175 * a3 * b2);
            matrixK[10][5] = -(14 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (110 * a4 - 65 * b4) * D1) / (350 * a2 * b2);
            matrixK[10][6] = -(28 * a2 * b2 * D3 + 14 * a2 * b2 * D2 + (15 * b4 - 130 * a4) * D1) / (175 * a3 * b);
            matrixK[10][7] = (14 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (45 * b4 - 110 * a4) * D1) / (1050 * a2 * b);
            matrixK[10][8] = -(84 * a2 * b2 * D3 + 252 * a2 * b2 * D2 + (110 * b4 + 390 * a4) * D1) / (175 * a3 * b2);
            matrixK[10][9] = (14 * a2 * b2 * D3 + 427 * a2 * b2 * D2 + (110 * b4 + 110 * a4) * D1) / (350 * a2 * b2);
            matrixK[10][10] = (112 * a2 * b2 * D3 + 56 * a2 * b2 * D2 + (20 * b4 + 260 * a4) * D1) / (175 * a3 * b);
            matrixK[10][11] = -(28 * a2 * b2 * D3 + 84 * a2 * b2 * D2 + (30 * b4 + 110 * a4) * D1) / (525 * a2 * b);
            matrixK[10][12] = (84 * a2 * b2 * D3 + 252 * a2 * b2 * D2 + (110 * b4 - 135 * a4) * D1) / (175 * a3 * b2);
            matrixK[10][13] = (14 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (110 * b4 - 65 * a4) * D1) / (350 * a2 * b2);
            matrixK[10][14] = -(112 * a2 * b2 * D3 + 56 * a2 * b2 * D2 + (20 * b4 - 90 * a4) * D1) / (175 * a3 * b);
            matrixK[10][15] = -(28 * a2 * b2 * D3 + 14 * a2 * b2 * D2 + (30 * b4 - 65 * a4) * D1) / (525 * a2 * b);

            matrixK[11][0] = (14 * a2 * b2 * D3 + 7 * a2 * b2 * D2 + (-65 * b4 - 65 * a4) * D1) / (350 * a2 * b2);
            matrixK[11][1] = -(14 * a2 * b2 * D3 + 7 * a2 * b2 * D2 + (65 * b4 + 45 * a4) * D1) / (1050 * a * b2);
            matrixK[11][2] = -(14 * a2 * b2 * D3 + 7 * a2 * b2 * D2 + (45 * b4 + 65 * a4) * D1) / (1050 * a2 * b);
            matrixK[11][3] = (14 * a2 * b2 * D3 + 7 * a2 * b2 * D2 + (-45 * b4 - 45 * a4) * D1) / (3150 * a * b);
            matrixK[11][4] = -(14 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (110 * a4 - 65 * b4) * D1) / (350 * a2 * b2);
            matrixK[11][5] = (28 * a2 * b2 * D3 + 14 * a2 * b2 * D2 + (30 * a4 - 65 * b4) * D1) / (525 * a * b2);
            matrixK[11][6] = (14 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (45 * b4 - 110 * a4) * D1) / (1050 * a2 * b);
            matrixK[11][7] = -(28 * a2 * b2 * D3 + 14 * a2 * b2 * D2 + (45 * b4 - 30 * a4) * D1) / (1575 * a * b);
            matrixK[11][8] = (14 * a2 * b2 * D3 + 77 * a2 * b2 * D2 + (110 * b4 + 110 * a4) * D1) / (350 * a2 * b2);
            matrixK[11][9] = -(28 * a2 * b2 * D3 + 84 * a2 * b2 * D2 + (110 * b4 + 30 * a4) * D1) / (525 * a * b2);
            matrixK[11][10] = -(28 * a2 * b2 * D3 + 84 * a2 * b2 * D2 + (30 * b4 + 110 * a4) * D1) / (525 * a2 * b);
            matrixK[11][11] = (112 * a2 * b2 * D3 + 56 * a2 * b2 * D2 + (60 * b4 + 60 * a4) * D1) / (1575 * a * b);
            matrixK[11][12] = -(14 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (110 * b4 - 65 * a4) * D1) / (350 * a2 * b2);
            matrixK[11][13] = (14 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (45 * a4 - 110 * b4) * D1) / (1050 * a * b2);
            matrixK[11][14] = (28 * a2 * b2 * D3 + 14 * a2 * b2 * D2 + (30 * b4 - 65 * a4) * D1) / (525 * a2 * b);
            matrixK[11][15] = -(28 * a2 * b2 * D3 + 14 * a2 * b2 * D2 + (45 * a4 - 30 * b4) * D1) / (1575 * a * b);

            matrixK[12][0] = -(1008 * a2 * b2 * D3 + 504 * a2 * b2 * D2 + (780 * a4 - 270 * b4) * D1) / (175 * a3 * b3);
            matrixK[12][1] = -(84 * a2 * b2 * D3 + 252 * a2 * b2 * D2 + (110 * a4 - 135 * b4) * D1) / (175 * a2 * b3);
            matrixK[12][2] = -(84 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (390 * a4 - 65 * b4) * D1) / (175 * a3 * b2);
            matrixK[12][3] = -(14 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (110 * a4 - 65 * b4) * D1) / (350 * a2 * b2);
            matrixK[12][4] = (1008 * a2 * b2 * D3 + 504 * a2 * b2 * D2 + (-270 * b4 - 270 * a4) * D1) / (175 * a3 * b3);
            matrixK[12][5] = -(84 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (-135 * b4 - 65 * a4) * D1) / (175 * a2 * b3);
            matrixK[12][6] = (84 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (-65 * b4 - 135 * a4) * D1) / (175 * a3 * b2);
            matrixK[12][7] = -(14 * a2 * b2 * D3 + 7 * a2 * b2 * D2 + (-65 * b4 - 65 * a4) * D1) / (350 * a2 * b2);
            matrixK[12][8] = -(1008 * a2 * b2 * D3 + 504 * a2 * b2 * D2 + (780 * b4 - 270 * a4) * D1) / (175 * a3 * b3);
            matrixK[12][9] = (84 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (390 * b4 - 65 * a4) * D1) / (175 * a2 * b3);
            matrixK[12][10] = (84 * a2 * b2 * D3 + 252 * a2 * b2 * D2 + (110 * b4 - 135 * a4) * D1) / (175 * a3 * b2);
            matrixK[12][11] = -(14 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (110 * b4 - 65 * a4) * D1) / (350 * a2 * b2);
            matrixK[12][12] = (1008 * a2 * b2 * D3 + 504 * a2 * b2 * D2 + (780 * b4 + 780 * a4) * D1) / (175 * a3 * b3);
            matrixK[12][13] = (84 * a2 * b2 * D3 + 252 * a2 * b2 * D2 + (390 * b4 + 110 * a4) * D1) / (175 * a2 * b3);
            matrixK[12][14] = -(84 * a2 * b2 * D3 + 252 * a2 * b2 * D2 + (110 * b4 + 390 * a4) * D1) / (175 * a3 * b2);
            matrixK[12][15] = -(14 * a2 * b2 * D3 + 77 * a2 * b2 * D2 + (110 * b4 + 110 * a4) * D1) / (350 * a2 * b2);

            matrixK[13][0] = -(84 * a2 * b2 * D3 + 252 * a2 * b2 * D2 + (110 * a4 - 135 * b4) * D1) / (175 * a2 * b3);
            matrixK[13][1] = -(112 * a2 * b2 * D3 + 56 * a2 * b2 * D2 + (20 * a4 - 90 * b4) * D1) / (175 * a * b3);
            matrixK[13][2] = -(14 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (110 * a4 - 65 * b4) * D1) / (350 * a2 * b2);
            matrixK[13][3] = -(28 * a2 * b2 * D3 + 14 * a2 * b2 * D2 + (30 * a4 - 65 * b4) * D1) / (525 * a * b2);
            matrixK[13][4] = (84 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (-135 * b4 - 65 * a4) * D1) / (175 * a2 * b3);
            matrixK[13][5] = (28 * a2 * b2 * D3 + 14 * a2 * b2 * D2 + (45 * b4 + 15 * a4) * D1) / (175 * a * b3);
            matrixK[13][6] = (14 * a2 * b2 * D3 + 7 * a2 * b2 * D2 + (-65 * b4 - 65 * a4) * D1) / (350 * a2 * b2);
            matrixK[13][7] = (14 * a2 * b2 * D3 + 7 * a2 * b2 * D2 + (65 * b4 + 45 * a4) * D1) / (1050 * a * b2);
            matrixK[13][8] = -(84 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (390 * b4 - 65 * a4) * D1) / (175 * a2 * b3);
            matrixK[13][9] = -(28 * a2 * b2 * D3 + 14 * a2 * b2 * D2 + (15 * a4 - 130 * b4) * D1) / (175 * a * b3);
            matrixK[13][10] = (14 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (110 * b4 - 65 * a4) * D1) / (350 * a2 * b2);
            matrixK[13][11] = (14 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (45 * a4 - 110 * b4) * D1) / (1050 * a * b2);
            matrixK[13][12] = (84 * a2 * b2 * D3 + 252 * a2 * b2 * D2 + (390 * b4 + 110 * a4) * D1) / (175 * a2 * b3);
            matrixK[13][13] = (112 * a2 * b2 * D3 + 56 * a2 * b2 * D2 + (260 * b4 + 20 * a4) * D1) / (175 * a * b3);
            matrixK[13][14] = -(14 * a2 * b2 * D3 + 427 * a2 * b2 * D2 + (110 * b4 + 110 * a4) * D1) / (350 * a2 * b2);
            matrixK[13][15] = -(28 * a2 * b2 * D3 + 84 * a2 * b2 * D2 + (110 * b4 + 30 * a4) * D1) / (525 * a * b2);

            matrixK[14][0] = (84 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (390 * a4 - 65 * b4) * D1) / (175 * a3 * b2);
            matrixK[14][1] = (14 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (110 * a4 - 65 * b4) * D1) / (350 * a2 * b2);
            matrixK[14][2] = -(28 * a2 * b2 * D3 + 14 * a2 * b2 * D2 + (15 * b4 - 130 * a4) * D1) / (175 * a3 * b);
            matrixK[14][3] = -(14 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (45 * b4 - 110 * a4) * D1) / (1050 * a2 * b);
            matrixK[14][4] = -(84 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (-65 * b4 - 135 * a4) * D1) / (175 * a3 * b2);
            matrixK[14][5] = (14 * a2 * b2 * D3 + 7 * a2 * b2 * D2 + (-65 * b4 - 65 * a4) * D1) / (350 * a2 * b2);
            matrixK[14][6] = (28 * a2 * b2 * D3 + 14 * a2 * b2 * D2 + (15 * b4 + 45 * a4) * D1) / (175 * a3 * b);
            matrixK[14][7] = -(14 * a2 * b2 * D3 + 7 * a2 * b2 * D2 + (45 * b4 + 65 * a4) * D1) / (1050 * a2 * b);
            matrixK[14][8] = (84 * a2 * b2 * D3 + 252 * a2 * b2 * D2 + (110 * b4 - 135 * a4) * D1) / (175 * a3 * b2);
            matrixK[14][9] = -(14 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (110 * b4 - 65 * a4) * D1) / (350 * a2 * b2);
            matrixK[14][10] = -(112 * a2 * b2 * D3 + 56 * a2 * b2 * D2 + (20 * b4 - 90 * a4) * D1) / (175 * a3 * b);
            matrixK[14][11] = (28 * a2 * b2 * D3 + 14 * a2 * b2 * D2 + (30 * b4 - 65 * a4) * D1) / (525 * a2 * b);
            matrixK[14][12] = -(84 * a2 * b2 * D3 + 252 * a2 * b2 * D2 + (110 * b4 + 390 * a4) * D1) / (175 * a3 * b2);
            matrixK[14][13] = -(14 * a2 * b2 * D3 + 427 * a2 * b2 * D2 + (110 * b4 + 110 * a4) * D1) / (350 * a2 * b2);
            matrixK[14][14] = (112 * a2 * b2 * D3 + 56 * a2 * b2 * D2 + (20 * b4 + 260 * a4) * D1) / (175 * a3 * b);
            matrixK[14][15] = (28 * a2 * b2 * D3 + 84 * a2 * b2 * D2 + (30 * b4 + 110 * a4) * D1) / (525 * a2 * b);

            matrixK[15][0] = (14 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (110 * a4 - 65 * b4) * D1) / (350 * a2 * b2);
            matrixK[15][1] = (28 * a2 * b2 * D3 + 14 * a2 * b2 * D2 + (30 * a4 - 65 * b4) * D1) / (525 * a * b2);
            matrixK[15][2] = -(14 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (45 * b4 - 110 * a4) * D1) / (1050 * a2 * b);
            matrixK[15][3] = -(28 * a2 * b2 * D3 + 14 * a2 * b2 * D2 + (45 * b4 - 30 * a4) * D1) / (1575 * a * b);
            matrixK[15][4] = -(14 * a2 * b2 * D3 + 7 * a2 * b2 * D2 + (-65 * b4 - 65 * a4) * D1) / (350 * a2 * b2);
            matrixK[15][5] = -(14 * a2 * b2 * D3 + 7 * a2 * b2 * D2 + (65 * b4 + 45 * a4) * D1) / (1050 * a * b2);
            matrixK[15][6] = (14 * a2 * b2 * D3 + 7 * a2 * b2 * D2 + (45 * b4 + 65 * a4) * D1) / (1050 * a2 * b);
            matrixK[15][7] = (14 * a2 * b2 * D3 + 7 * a2 * b2 * D2 + (-45 * b4 - 45 * a4) * D1) / (3150 * a * b);
            matrixK[15][8] = (14 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (110 * b4 - 65 * a4) * D1) / (350 * a2 * b2);
            matrixK[15][9] = (14 * a2 * b2 * D3 + 42 * a2 * b2 * D2 + (45 * a4 - 110 * b4) * D1) / (1050 * a * b2);
            matrixK[15][10] = -(28 * a2 * b2 * D3 + 14 * a2 * b2 * D2 + (30 * b4 - 65 * a4) * D1) / (525 * a2 * b);
            matrixK[15][11] = -(28 * a2 * b2 * D3 + 14 * a2 * b2 * D2 + (45 * a4 - 30 * b4) * D1) / (1575 * a * b);
            matrixK[15][12] = -(14 * a2 * b2 * D3 + 77 * a2 * b2 * D2 + (110 * b4 + 110 * a4) * D1) / (350 * a2 * b2);
            matrixK[15][13] = -(28 * a2 * b2 * D3 + 84 * a2 * b2 * D2 + (110 * b4 + 30 * a4) * D1) / (525 * a * b2);
            matrixK[15][14] = (28 * a2 * b2 * D3 + 84 * a2 * b2 * D2 + (30 * b4 + 110 * a4) * D1) / (525 * a2 * b);
            matrixK[15][15] = (112 * a2 * b2 * D3 + 56 * a2 * b2 * D2 + (60 * b4 + 60 * a4) * D1) / (1575 * a * b);
        } else {
            matrixK = null;
        }

        return matrixK;
    }

    /**
     * Este método fornece a matriz de rigidez de uma laje com 8 nós
     *
     * @param a é o comprimento do elemento finito retangular
     * @param b é a largura do elemento finito retangular
     * @param matrixD é a matriz de elasticidade do elemento finito
     * @return
     */
    private static double[][] matrixK_Kirchhoff8Nodes(double a, double b, double[][] matrixD) {
        double[][] matrixK;

        if (a != 0 && b != 0) {
            double a2, a3, a4, b2, b3, b4;
            double D1, D2, D3;

            D1 = matrixD[0][0];
            D2 = matrixD[1][0];
            D3 = matrixD[2][2];

            a2 = a * a;
            a3 = a * a * a;
            a4 = a * a * a * a;
            b2 = b * b;
            b3 = b * b * b;
            b4 = b * b * b * b;

            matrixK = new double[32][32];

            matrixK[0][0] = (832656 * a2 * b2 * D3 + 416328 * a2 * b2 * D2 + (2077508 * b4 + 2077508 * a4) * D1) / (40425 * a3 * b3);
            matrixK[0][1] = (62876 * a2 * b2 * D3 + 138468 * a2 * b2 * D2 + (434722 * b4 + 286646 * a4) * D1) / (40425 * a2 * b3);
            matrixK[0][2] = (62876 * a2 * b2 * D3 + 138468 * a2 * b2 * D2 + (286646 * b4 + 434722 * a4) * D1) / (40425 * a3 * b2);
            matrixK[0][3] = (16962 * a2 * b2 * D3 + 18491 * a2 * b2 * D2 + (116278 * b4 + 116278 * a4) * D1) / (80850 * a2 * b2);
            matrixK[0][4] = -(6144 * a2 * b2 * D3 + 3072 * a2 * b2 * D2 + (19968 * b4 - 400 * a4) * D1) / (525 * a3 * b3);
            matrixK[0][5] = (86592 * a2 * b2 * D3 + 43296 * a2 * b2 * D2 + (823680 * b4 - 5600 * a4) * D1) / (40425 * a2 * b3);
            matrixK[0][6] = -(512 * a2 * b2 * D3 + 1536 * a2 * b2 * D2 + (2816 * b4 - 200 * a4) * D1) / (525 * a3 * b2);
            matrixK[0][7] = (22352 * a2 * b2 * D3 + 26576 * a2 * b2 * D2 + (116160 * b4 - 2800 * a4) * D1) / (40425 * a2 * b2);
            matrixK[0][8] = -(359568 * a2 * b2 * D3 + 179784 * a2 * b2 * D2 + (539972 * b4 - 702962 * a4) * D1) / (40425 * a3 * b3);
            matrixK[0][9] = (18524 * a2 * b2 * D3 + 9262 * a2 * b2 * D2 + (50338 * b4 - 168039 * a4) * D1) / (40425 * a2 * b3);
            matrixK[0][10] = -(23452 * a2 * b2 * D3 + 20196 * a2 * b2 * D2 + (69814 * b4 - 142393 * a4) * D1) / (40425 * a3 * b2);
            matrixK[0][11] = (4642 * a2 * b2 * D3 + 1166 * a2 * b2 * D2 + (7862 * b4 - 67367 * a4) * D1) / (80850 * a2 * b2);
            matrixK[0][12] = (6144 * a2 * b2 * D3 + 3072 * a2 * b2 * D2 + (-400 * b4 - 6912 * a4) * D1) / (525 * a3 * b3);
            matrixK[0][13] = -(512 * a2 * b2 * D3 + 256 * a2 * b2 * D2 + (-200 * b4 - 1664 * a4) * D1) / (525 * a2 * b3);
            matrixK[0][14] = -(86592 * a2 * b2 * D3 + 43296 * a2 * b2 * D2 + (-5600 * b4 - 285120 * a4) * D1) / (40425 * a3 * b2);
            matrixK[0][15] = (528 * a2 * b2 * D3 + 264 * a2 * b2 * D2 + (-560 * b4 - 13728 * a4) * D1) / (8085 * a2 * b2);
            matrixK[0][16] = -(113520 * a2 * b2 * D3 + 56760 * a2 * b2 * D2 + (170738 * b4 + 170738 * a4) * D1) / (40425 * a3 * b3);
            matrixK[0][17] = (20900 * a2 * b2 * D3 + 10450 * a2 * b2 * D2 + (9337 * b4 + 39911 * a4) * D1) / (40425 * a2 * b3);
            matrixK[0][18] = (20900 * a2 * b2 * D3 + 10450 * a2 * b2 * D2 + (39911 * b4 + 9337 * a4) * D1) / (40425 * a3 * b2);
            matrixK[0][19] = -(7678 * a2 * b2 * D3 + 3839 * a2 * b2 * D2 + (3303 * b4 + 3303 * a4) * D1) / (80850 * a2 * b2);
            matrixK[0][20] = (6144 * a2 * b2 * D3 + 3072 * a2 * b2 * D2 + (-6912 * b4 - 400 * a4) * D1) / (525 * a3 * b3);
            matrixK[0][21] = -(86592 * a2 * b2 * D3 + 43296 * a2 * b2 * D2 + (-285120 * b4 - 5600 * a4) * D1) / (40425 * a2 * b3);
            matrixK[0][22] = -(512 * a2 * b2 * D3 + 256 * a2 * b2 * D2 + (-1664 * b4 - 200 * a4) * D1) / (525 * a3 * b2);
            matrixK[0][23] = (528 * a2 * b2 * D3 + 264 * a2 * b2 * D2 + (-13728 * b4 - 560 * a4) * D1) / (8085 * a2 * b2);
            matrixK[0][24] = -(359568 * a2 * b2 * D3 + 179784 * a2 * b2 * D2 + (539972 * a4 - 702962 * b4) * D1) / (40425 * a3 * b3);
            matrixK[0][25] = -(23452 * a2 * b2 * D3 + 20196 * a2 * b2 * D2 + (69814 * a4 - 142393 * b4) * D1) / (40425 * a2 * b3);
            matrixK[0][26] = (18524 * a2 * b2 * D3 + 9262 * a2 * b2 * D2 + (50338 * a4 - 168039 * b4) * D1) / (40425 * a3 * b2);
            matrixK[0][27] = (4642 * a2 * b2 * D3 + 1166 * a2 * b2 * D2 + (7862 * a4 - 67367 * b4) * D1) / (80850 * a2 * b2);
            matrixK[0][28] = -(6144 * a2 * b2 * D3 + 3072 * a2 * b2 * D2 + (19968 * a4 - 400 * b4) * D1) / (525 * a3 * b3);
            matrixK[0][29] = -(512 * a2 * b2 * D3 + 1536 * a2 * b2 * D2 + (2816 * a4 - 200 * b4) * D1) / (525 * a2 * b3);
            matrixK[0][30] = (86592 * a2 * b2 * D3 + 43296 * a2 * b2 * D2 + (823680 * a4 - 5600 * b4) * D1) / (40425 * a3 * b2);
            matrixK[0][31] = (22352 * a2 * b2 * D3 + 26576 * a2 * b2 * D2 + (116160 * a4 - 2800 * b4) * D1) / (40425 * a2 * b2);

            matrixK[1][0] = (62876 * a2 * b2 * D3 + 138468 * a2 * b2 * D2 + (434722 * b4 + 286646 * a4) * D1) / (40425 * a2 * b3);
            matrixK[1][1] = (151184 * a2 * b2 * D3 + 75592 * a2 * b2 * D2 + (320324 * b4 + 155016 * a4) * D1) / (121275 * a * b3);
            matrixK[1][2] = (191686 * a2 * b2 * D3 + 368423 * a2 * b2 * D2 + (348834 * b4 + 348834 * a4) * D1) / (242550 * a2 * b2);
            matrixK[1][3] = (22572 * a2 * b2 * D3 + 16676 * a2 * b2 * D2 + (38838 * b4 + 31044 * a4) * D1) / (121275 * a * b2);
            matrixK[1][4] = -(576 * a2 * b2 * D3 + 288 * a2 * b2 * D2 + (4992 * b4 - 40 * a4) * D1) / (525 * a2 * b3);
            matrixK[1][5] = (3872 * a2 * b2 * D3 + 1936 * a2 * b2 * D2 + (137280 * b4 - 420 * a4) * D1) / (40425 * a * b3);
            matrixK[1][6] = -(1520 * a2 * b2 * D3 + 880 * a2 * b2 * D2 + (2112 * b4 - 60 * a4) * D1) / (1575 * a2 * b2);
            matrixK[1][7] = (23672 * a2 * b2 * D3 + 10296 * a2 * b2 * D2 + (58080 * b4 - 630 * a4) * D1) / (121275 * a * b2);
            matrixK[1][8] = -(18524 * a2 * b2 * D3 + 9262 * a2 * b2 * D2 + (50338 * b4 - 168039 * a4) * D1) / (40425 * a2 * b3);
            matrixK[1][9] = -(40700 * a2 * b2 * D3 + 20350 * a2 * b2 * D2 + (4574 * b4 + 115947 * a4) * D1) / (121275 * a * b3);
            matrixK[1][10] = (42394 * a2 * b2 * D3 + 24662 * a2 * b2 * D2 + (202101 * a4 - 23586 * b4) * D1) / (242550 * a2 * b2);
            matrixK[1][11] = -(17842 * a2 * b2 * D3 + 10846 * a2 * b2 * D2 + (7626 * b4 + 46251 * a4) * D1) / (242550 * a * b2);
            matrixK[1][12] = (512 * a2 * b2 * D3 + 256 * a2 * b2 * D2 + (-200 * b4 - 1664 * a4) * D1) / (525 * a2 * b3);
            matrixK[1][13] = (512 * a2 * b2 * D3 + 256 * a2 * b2 * D2 + (200 * b4 + 1152 * a4) * D1) / (1575 * a * b3);
            matrixK[1][14] = -(8272 * a2 * b2 * D3 + 4136 * a2 * b2 * D2 + (-2800 * b4 - 68640 * a4) * D1) / (40425 * a2 * b2);
            matrixK[1][15] = -(10384 * a2 * b2 * D3 + 5192 * a2 * b2 * D2 + (2800 * b4 + 47520 * a4) * D1) / (121275 * a * b2);
            matrixK[1][16] = -(20900 * a2 * b2 * D3 + 10450 * a2 * b2 * D2 + (9337 * b4 + 39911 * a4) * D1) / (40425 * a2 * b3);
            matrixK[1][17] = (1276 * a2 * b2 * D3 + 638 * a2 * b2 * D2 + (27243 * a4 - 9671 * b4) * D1) / (121275 * a * b3);
            matrixK[1][18] = (506 * a2 * b2 * D3 + 253 * a2 * b2 * D2 + (9909 * b4 + 9909 * a4) * D1) / (242550 * a2 * b2);
            matrixK[1][19] = (4334 * a2 * b2 * D3 + 2167 * a2 * b2 * D2 + (5849 * b4 - 1899 * a4) * D1) / (242550 * a * b2);
            matrixK[1][20] = (576 * a2 * b2 * D3 + 288 * a2 * b2 * D2 + (-1728 * b4 - 40 * a4) * D1) / (525 * a2 * b3);
            matrixK[1][21] = -(3872 * a2 * b2 * D3 + 1936 * a2 * b2 * D2 + (-47520 * b4 - 420 * a4) * D1) / (40425 * a * b3);
            matrixK[1][22] = (272 * a2 * b2 * D3 + 136 * a2 * b2 * D2 + (1248 * b4 + 60 * a4) * D1) / (1575 * a2 * b2);
            matrixK[1][23] = -(5896 * a2 * b2 * D3 + 2948 * a2 * b2 * D2 + (34320 * b4 + 630 * a4) * D1) / (121275 * a * b2);
            matrixK[1][24] = -(23452 * a2 * b2 * D3 + 20196 * a2 * b2 * D2 + (69814 * a4 - 142393 * b4) * D1) / (40425 * a2 * b3);
            matrixK[1][25] = (6512 * a2 * b2 * D3 + 3256 * a2 * b2 * D2 + (94706 * b4 - 36744 * a4) * D1) / (121275 * a * b3);
            matrixK[1][26] = -(42394 * a2 * b2 * D3 + 24662 * a2 * b2 * D2 + (202101 * b4 - 23586 * a4) * D1) / (242550 * a2 * b2);
            matrixK[1][27] = -(6996 * a2 * b2 * D3 + 3498 * a2 * b2 * D2 + (21607 * b4 - 1476 * a4) * D1) / (121275 * a * b2);
            matrixK[1][28] = -(512 * a2 * b2 * D3 + 1536 * a2 * b2 * D2 + (2816 * a4 - 200 * b4) * D1) / (525 * a2 * b3);
            matrixK[1][29] = -(2048 * a2 * b2 * D3 + 1024 * a2 * b2 * D2 + (1536 * a4 - 400 * b4) * D1) / (1575 * a * b3);
            matrixK[1][30] = (8272 * a2 * b2 * D3 + 19536 * a2 * b2 * D2 + (116160 * a4 - 2800 * b4) * D1) / (40425 * a2 * b2);
            matrixK[1][31] = (7040 * a2 * b2 * D3 + 3520 * a2 * b2 * D2 + (12672 * a4 - 1120 * b4) * D1) / (24255 * a * b2);

            matrixK[2][0] = (62876 * a2 * b2 * D3 + 138468 * a2 * b2 * D2 + (286646 * b4 + 434722 * a4) * D1) / (40425 * a3 * b2);
            matrixK[2][1] = (191686 * a2 * b2 * D3 + 368423 * a2 * b2 * D2 + (348834 * b4 + 348834 * a4) * D1) / (242550 * a2 * b2);
            matrixK[2][2] = (151184 * a2 * b2 * D3 + 75592 * a2 * b2 * D2 + (155016 * b4 + 320324 * a4) * D1) / (121275 * a3 * b);
            matrixK[2][3] = (22572 * a2 * b2 * D3 + 16676 * a2 * b2 * D2 + (31044 * b4 + 38838 * a4) * D1) / (121275 * a2 * b);
            matrixK[2][4] = -(512 * a2 * b2 * D3 + 1536 * a2 * b2 * D2 + (2816 * b4 - 200 * a4) * D1) / (525 * a3 * b2);
            matrixK[2][5] = (8272 * a2 * b2 * D3 + 19536 * a2 * b2 * D2 + (116160 * b4 - 2800 * a4) * D1) / (40425 * a2 * b2);
            matrixK[2][6] = -(2048 * a2 * b2 * D3 + 1024 * a2 * b2 * D2 + (1536 * b4 - 400 * a4) * D1) / (1575 * a3 * b);
            matrixK[2][7] = (7040 * a2 * b2 * D3 + 3520 * a2 * b2 * D2 + (12672 * b4 - 1120 * a4) * D1) / (24255 * a2 * b);
            matrixK[2][8] = -(23452 * a2 * b2 * D3 + 20196 * a2 * b2 * D2 + (69814 * b4 - 142393 * a4) * D1) / (40425 * a3 * b2);
            matrixK[2][9] = -(42394 * a2 * b2 * D3 + 24662 * a2 * b2 * D2 + (202101 * a4 - 23586 * b4) * D1) / (242550 * a2 * b2);
            matrixK[2][10] = (6512 * a2 * b2 * D3 + 3256 * a2 * b2 * D2 + (94706 * a4 - 36744 * b4) * D1) / (121275 * a3 * b);
            matrixK[2][11] = -(6996 * a2 * b2 * D3 + 3498 * a2 * b2 * D2 + (21607 * a4 - 1476 * b4) * D1) / (121275 * a2 * b);
            matrixK[2][12] = (576 * a2 * b2 * D3 + 288 * a2 * b2 * D2 + (-40 * b4 - 1728 * a4) * D1) / (525 * a3 * b2);
            matrixK[2][13] = (272 * a2 * b2 * D3 + 136 * a2 * b2 * D2 + (60 * b4 + 1248 * a4) * D1) / (1575 * a2 * b2);
            matrixK[2][14] = -(3872 * a2 * b2 * D3 + 1936 * a2 * b2 * D2 + (-420 * b4 - 47520 * a4) * D1) / (40425 * a3 * b);
            matrixK[2][15] = -(5896 * a2 * b2 * D3 + 2948 * a2 * b2 * D2 + (630 * b4 + 34320 * a4) * D1) / (121275 * a2 * b);
            matrixK[2][16] = -(20900 * a2 * b2 * D3 + 10450 * a2 * b2 * D2 + (39911 * b4 + 9337 * a4) * D1) / (40425 * a3 * b2);
            matrixK[2][17] = (506 * a2 * b2 * D3 + 253 * a2 * b2 * D2 + (9909 * b4 + 9909 * a4) * D1) / (242550 * a2 * b2);
            matrixK[2][18] = (1276 * a2 * b2 * D3 + 638 * a2 * b2 * D2 + (27243 * b4 - 9671 * a4) * D1) / (121275 * a3 * b);
            matrixK[2][19] = (4334 * a2 * b2 * D3 + 2167 * a2 * b2 * D2 + (5849 * a4 - 1899 * b4) * D1) / (242550 * a2 * b);
            matrixK[2][20] = (512 * a2 * b2 * D3 + 256 * a2 * b2 * D2 + (-1664 * b4 - 200 * a4) * D1) / (525 * a3 * b2);
            matrixK[2][21] = -(8272 * a2 * b2 * D3 + 4136 * a2 * b2 * D2 + (-68640 * b4 - 2800 * a4) * D1) / (40425 * a2 * b2);
            matrixK[2][22] = (512 * a2 * b2 * D3 + 256 * a2 * b2 * D2 + (1152 * b4 + 200 * a4) * D1) / (1575 * a3 * b);
            matrixK[2][23] = -(10384 * a2 * b2 * D3 + 5192 * a2 * b2 * D2 + (47520 * b4 + 2800 * a4) * D1) / (121275 * a2 * b);
            matrixK[2][24] = -(18524 * a2 * b2 * D3 + 9262 * a2 * b2 * D2 + (50338 * a4 - 168039 * b4) * D1) / (40425 * a3 * b2);
            matrixK[2][25] = (42394 * a2 * b2 * D3 + 24662 * a2 * b2 * D2 + (202101 * b4 - 23586 * a4) * D1) / (242550 * a2 * b2);
            matrixK[2][26] = -(40700 * a2 * b2 * D3 + 20350 * a2 * b2 * D2 + (115947 * b4 + 4574 * a4) * D1) / (121275 * a3 * b);
            matrixK[2][27] = -(17842 * a2 * b2 * D3 + 10846 * a2 * b2 * D2 + (46251 * b4 + 7626 * a4) * D1) / (242550 * a2 * b);
            matrixK[2][28] = -(576 * a2 * b2 * D3 + 288 * a2 * b2 * D2 + (4992 * a4 - 40 * b4) * D1) / (525 * a3 * b2);
            matrixK[2][29] = -(1520 * a2 * b2 * D3 + 880 * a2 * b2 * D2 + (2112 * a4 - 60 * b4) * D1) / (1575 * a2 * b2);
            matrixK[2][30] = (3872 * a2 * b2 * D3 + 1936 * a2 * b2 * D2 + (137280 * a4 - 420 * b4) * D1) / (40425 * a3 * b);
            matrixK[2][31] = (23672 * a2 * b2 * D3 + 10296 * a2 * b2 * D2 + (58080 * a4 - 630 * b4) * D1) / (121275 * a2 * b);

            matrixK[3][0] = (16962 * a2 * b2 * D3 + 18491 * a2 * b2 * D2 + (116278 * b4 + 116278 * a4) * D1) / (80850 * a2 * b2);
            matrixK[3][1] = (22572 * a2 * b2 * D3 + 16676 * a2 * b2 * D2 + (38838 * b4 + 31044 * a4) * D1) / (121275 * a * b2);
            matrixK[3][2] = (22572 * a2 * b2 * D3 + 16676 * a2 * b2 * D2 + (31044 * b4 + 38838 * a4) * D1) / (121275 * a2 * b);
            matrixK[3][3] = (17776 * a2 * b2 * D3 + 8888 * a2 * b2 * D2 + (19848 * b4 + 19848 * a4) * D1) / (363825 * a * b);
            matrixK[3][4] = -(80 * a2 * b2 * D3 + 80 * a2 * b2 * D2 + (704 * b4 - 20 * a4) * D1) / (525 * a2 * b2);
            matrixK[3][5] = (2552 * a2 * b2 * D3 - 264 * a2 * b2 * D2 + (58080 * b4 - 630 * a4) * D1) / (121275 * a * b2);
            matrixK[3][6] = -(384 * a2 * b2 * D3 + 192 * a2 * b2 * D2 + (384 * b4 - 40 * a4) * D1) / (1575 * a2 * b);
            matrixK[3][7] = (13376 * a2 * b2 * D3 + 6688 * a2 * b2 * D2 + (31680 * b4 - 1260 * a4) * D1) / (363825 * a * b);
            matrixK[3][8] = -(4642 * a2 * b2 * D3 + 1166 * a2 * b2 * D2 + (7862 * b4 - 67367 * a4) * D1) / (80850 * a2 * b2);
            matrixK[3][9] = -(17842 * a2 * b2 * D3 + 10846 * a2 * b2 * D2 + (7626 * b4 + 46251 * a4) * D1) / (242550 * a * b2);
            matrixK[3][10] = (6996 * a2 * b2 * D3 + 3498 * a2 * b2 * D2 + (21607 * a4 - 1476 * b4) * D1) / (121275 * a2 * b);
            matrixK[3][11] = -(2596 * a2 * b2 * D3 + 1298 * a2 * b2 * D2 + (916 * b4 + 4857 * a4) * D1) / (121275 * a * b);
            matrixK[3][12] = (80 * a2 * b2 * D3 + 40 * a2 * b2 * D2 + (-20 * b4 - 416 * a4) * D1) / (525 * a2 * b2);
            matrixK[3][13] = (144 * a2 * b2 * D3 + 72 * a2 * b2 * D2 + (20 * b4 + 288 * a4) * D1) / (1575 * a * b2);
            matrixK[3][14] = -(2552 * a2 * b2 * D3 + 1276 * a2 * b2 * D2 + (-630 * b4 - 34320 * a4) * D1) / (121275 * a2 * b);
            matrixK[3][15] = -(1144 * a2 * b2 * D3 + 572 * a2 * b2 * D2 + (126 * b4 + 4752 * a4) * D1) / (72765 * a * b);
            matrixK[3][16] = -(7678 * a2 * b2 * D3 + 3839 * a2 * b2 * D2 + (3303 * b4 + 3303 * a4) * D1) / (80850 * a2 * b2);
            matrixK[3][17] = -(4334 * a2 * b2 * D3 + 2167 * a2 * b2 * D2 + (5849 * b4 - 1899 * a4) * D1) / (242550 * a * b2);
            matrixK[3][18] = -(4334 * a2 * b2 * D3 + 2167 * a2 * b2 * D2 + (5849 * a4 - 1899 * b4) * D1) / (242550 * a2 * b);
            matrixK[3][19] = (6754 * a2 * b2 * D3 + 3377 * a2 * b2 * D2 + (4437 * b4 + 4437 * a4) * D1) / (727650 * a * b);
            matrixK[3][20] = (80 * a2 * b2 * D3 + 40 * a2 * b2 * D2 + (-416 * b4 - 20 * a4) * D1) / (525 * a2 * b2);
            matrixK[3][21] = -(2552 * a2 * b2 * D3 + 1276 * a2 * b2 * D2 + (-34320 * b4 - 630 * a4) * D1) / (121275 * a * b2);
            matrixK[3][22] = (144 * a2 * b2 * D3 + 72 * a2 * b2 * D2 + (288 * b4 + 20 * a4) * D1) / (1575 * a2 * b);
            matrixK[3][23] = -(1144 * a2 * b2 * D3 + 572 * a2 * b2 * D2 + (4752 * b4 + 126 * a4) * D1) / (72765 * a * b);
            matrixK[3][24] = -(4642 * a2 * b2 * D3 + 1166 * a2 * b2 * D2 + (7862 * a4 - 67367 * b4) * D1) / (80850 * a2 * b2);
            matrixK[3][25] = (6996 * a2 * b2 * D3 + 3498 * a2 * b2 * D2 + (21607 * b4 - 1476 * a4) * D1) / (121275 * a * b2);
            matrixK[3][26] = -(17842 * a2 * b2 * D3 + 10846 * a2 * b2 * D2 + (46251 * b4 + 7626 * a4) * D1) / (242550 * a2 * b);
            matrixK[3][27] = -(2596 * a2 * b2 * D3 + 1298 * a2 * b2 * D2 + (4857 * b4 + 916 * a4) * D1) / (121275 * a * b);
            matrixK[3][28] = -(80 * a2 * b2 * D3 + 80 * a2 * b2 * D2 + (704 * a4 - 20 * b4) * D1) / (525 * a2 * b2);
            matrixK[3][29] = -(384 * a2 * b2 * D3 + 192 * a2 * b2 * D2 + (384 * a4 - 40 * b4) * D1) / (1575 * a * b2);
            matrixK[3][30] = (2552 * a2 * b2 * D3 - 264 * a2 * b2 * D2 + (58080 * a4 - 630 * b4) * D1) / (121275 * a2 * b);
            matrixK[3][31] = (13376 * a2 * b2 * D3 + 6688 * a2 * b2 * D2 + (31680 * a4 - 1260 * b4) * D1) / (363825 * a * b);

            matrixK[4][0] = -(6144 * a2 * b2 * D3 + 3072 * a2 * b2 * D2 + (19968 * b4 - 400 * a4) * D1) / (525 * a3 * b3);
            matrixK[4][1] = -(576 * a2 * b2 * D3 + 288 * a2 * b2 * D2 + (4992 * b4 - 40 * a4) * D1) / (525 * a2 * b3);
            matrixK[4][2] = -(512 * a2 * b2 * D3 + 1536 * a2 * b2 * D2 + (2816 * b4 - 200 * a4) * D1) / (525 * a3 * b2);
            matrixK[4][3] = -(80 * a2 * b2 * D3 + 80 * a2 * b2 * D2 + (704 * b4 - 20 * a4) * D1) / (525 * a2 * b2);
            matrixK[4][4] = (12288 * a2 * b2 * D3 + 6144 * a2 * b2 * D2 + (39936 * b4 + 2560 * a4) * D1) / (525 * a3 * b3);
            matrixK[4][5] = 0;
            matrixK[4][6] = (1024 * a2 * b2 * D3 + 3072 * a2 * b2 * D2 + (5632 * b4 + 1280 * a4) * D1) / (525 * a3 * b2);
            matrixK[4][7] = 0;
            matrixK[4][8] = -(6144 * a2 * b2 * D3 + 3072 * a2 * b2 * D2 + (19968 * b4 - 400 * a4) * D1) / (525 * a3 * b3);
            matrixK[4][9] = (576 * a2 * b2 * D3 + 288 * a2 * b2 * D2 + (4992 * b4 - 40 * a4) * D1) / (525 * a2 * b3);
            matrixK[4][10] = -(512 * a2 * b2 * D3 + 1536 * a2 * b2 * D2 + (2816 * b4 - 200 * a4) * D1) / (525 * a3 * b2);
            matrixK[4][11] = (80 * a2 * b2 * D3 + 80 * a2 * b2 * D2 + (704 * b4 - 20 * a4) * D1) / (525 * a2 * b2);
            matrixK[4][12] = 0;
            matrixK[4][13] = 0;
            matrixK[4][14] = 0;
            matrixK[4][15] = (256 * D3 + 128 * D2) / 525;
            matrixK[4][16] = (6144 * a2 * b2 * D3 + 3072 * a2 * b2 * D2 + (-6912 * b4 - 400 * a4) * D1) / (525 * a3 * b3);
            matrixK[4][17] = -(576 * a2 * b2 * D3 + 288 * a2 * b2 * D2 + (-1728 * b4 - 40 * a4) * D1) / (525 * a2 * b3);
            matrixK[4][18] = -(512 * a2 * b2 * D3 + 256 * a2 * b2 * D2 + (-1664 * b4 - 200 * a4) * D1) / (525 * a3 * b2);
            matrixK[4][19] = (80 * a2 * b2 * D3 + 40 * a2 * b2 * D2 + (-416 * b4 - 20 * a4) * D1) / (525 * a2 * b2);
            matrixK[4][20] = -(12288 * a2 * b2 * D3 + 6144 * a2 * b2 * D2 + (2560 * a4 - 13824 * b4) * D1) / (525 * a3 * b3);
            matrixK[4][21] = 0;
            matrixK[4][22] = (1024 * a2 * b2 * D3 + 512 * a2 * b2 * D2 + (1280 * a4 - 3328 * b4) * D1) / (525 * a3 * b2);
            matrixK[4][23] = 0;
            matrixK[4][24] = (6144 * a2 * b2 * D3 + 3072 * a2 * b2 * D2 + (-6912 * b4 - 400 * a4) * D1) / (525 * a3 * b3);
            matrixK[4][25] = (576 * a2 * b2 * D3 + 288 * a2 * b2 * D2 + (-1728 * b4 - 40 * a4) * D1) / (525 * a2 * b3);
            matrixK[4][26] = -(512 * a2 * b2 * D3 + 256 * a2 * b2 * D2 + (-1664 * b4 - 200 * a4) * D1) / (525 * a3 * b2);
            matrixK[4][27] = -(80 * a2 * b2 * D3 + 40 * a2 * b2 * D2 + (-416 * b4 - 20 * a4) * D1) / (525 * a2 * b2);
            matrixK[4][28] = 0;
            matrixK[4][29] = 0;
            matrixK[4][30] = 0;
            matrixK[4][31] = -(256 * D3 + 128 * D2) / 525;

            matrixK[5][0] = (86592 * a2 * b2 * D3 + 43296 * a2 * b2 * D2 + (823680 * b4 - 5600 * a4) * D1) / (40425 * a2 * b3);
            matrixK[5][1] = (3872 * a2 * b2 * D3 + 1936 * a2 * b2 * D2 + (137280 * b4 - 420 * a4) * D1) / (40425 * a * b3);
            matrixK[5][2] = (8272 * a2 * b2 * D3 + 19536 * a2 * b2 * D2 + (116160 * b4 - 2800 * a4) * D1) / (40425 * a2 * b2);
            matrixK[5][3] = (2552 * a2 * b2 * D3 - 264 * a2 * b2 * D2 + (58080 * b4 - 630 * a4) * D1) / (121275 * a * b2);
            matrixK[5][4] = 0;
            matrixK[5][5] = (78848 * a2 * b2 * D3 + 39424 * a2 * b2 * D2 + (549120 * b4 + 4480 * a4) * D1) / (40425 * a * b3);
            matrixK[5][6] = 0;
            matrixK[5][7] = (19712 * a2 * b2 * D3 + 59136 * a2 * b2 * D2 + (232320 * b4 + 6720 * a4) * D1) / (121275 * a * b2);
            matrixK[5][8] = -(86592 * a2 * b2 * D3 + 43296 * a2 * b2 * D2 + (823680 * b4 - 5600 * a4) * D1) / (40425 * a2 * b3);
            matrixK[5][9] = (3872 * a2 * b2 * D3 + 1936 * a2 * b2 * D2 + (137280 * b4 - 420 * a4) * D1) / (40425 * a * b3);
            matrixK[5][10] = -(8272 * a2 * b2 * D3 + 19536 * a2 * b2 * D2 + (116160 * b4 - 2800 * a4) * D1) / (40425 * a2 * b2);
            matrixK[5][11] = (2552 * a2 * b2 * D3 - 264 * a2 * b2 * D2 + (58080 * b4 - 630 * a4) * D1) / (121275 * a * b2);
            matrixK[5][12] = 0;
            matrixK[5][13] = 0;
            matrixK[5][14] = -(256 * D3 + 128 * D2) / 1225;
            matrixK[5][15] = (128 * a * D3 + 64 * a * D2) / 1225;
            matrixK[5][16] = (86592 * a2 * b2 * D3 + 43296 * a2 * b2 * D2 + (-285120 * b4 - 5600 * a4) * D1) / (40425 * a2 * b3);
            matrixK[5][17] = -(3872 * a2 * b2 * D3 + 1936 * a2 * b2 * D2 + (-47520 * b4 - 420 * a4) * D1) / (40425 * a * b3);
            matrixK[5][18] = -(8272 * a2 * b2 * D3 + 4136 * a2 * b2 * D2 + (-68640 * b4 - 2800 * a4) * D1) / (40425 * a2 * b2);
            matrixK[5][19] = (2552 * a2 * b2 * D3 + 1276 * a2 * b2 * D2 + (-34320 * b4 - 630 * a4) * D1) / (121275 * a * b2);
            matrixK[5][20] = 0;
            matrixK[5][21] = -(78848 * a2 * b2 * D3 + 39424 * a2 * b2 * D2 + (4480 * a4 - 190080 * b4) * D1) / (40425 * a * b3);
            matrixK[5][22] = 0;
            matrixK[5][23] = (19712 * a2 * b2 * D3 + 9856 * a2 * b2 * D2 + (6720 * a4 - 137280 * b4) * D1) / (121275 * a * b2);
            matrixK[5][24] = -(86592 * a2 * b2 * D3 + 43296 * a2 * b2 * D2 + (-285120 * b4 - 5600 * a4) * D1) / (40425 * a2 * b3);
            matrixK[5][25] = -(3872 * a2 * b2 * D3 + 1936 * a2 * b2 * D2 + (-47520 * b4 - 420 * a4) * D1) / (40425 * a * b3);
            matrixK[5][26] = (8272 * a2 * b2 * D3 + 4136 * a2 * b2 * D2 + (-68640 * b4 - 2800 * a4) * D1) / (40425 * a2 * b2);
            matrixK[5][27] = (2552 * a2 * b2 * D3 + 1276 * a2 * b2 * D2 + (-34320 * b4 - 630 * a4) * D1) / (121275 * a * b2);
            matrixK[5][28] = 0;
            matrixK[5][29] = 0;
            matrixK[5][30] = (256 * D3 + 128 * D2) / 1225;
            matrixK[5][31] = (128 * a * D3 + 64 * a * D2) / 1225;

            matrixK[6][0] = -(512 * a2 * b2 * D3 + 1536 * a2 * b2 * D2 + (2816 * b4 - 200 * a4) * D1) / (525 * a3 * b2);
            matrixK[6][1] = -(1520 * a2 * b2 * D3 + 880 * a2 * b2 * D2 + (2112 * b4 - 60 * a4) * D1) / (1575 * a2 * b2);
            matrixK[6][2] = -(2048 * a2 * b2 * D3 + 1024 * a2 * b2 * D2 + (1536 * b4 - 400 * a4) * D1) / (1575 * a3 * b);
            matrixK[6][3] = -(384 * a2 * b2 * D3 + 192 * a2 * b2 * D2 + (384 * b4 - 40 * a4) * D1) / (1575 * a2 * b);
            matrixK[6][4] = (1024 * a2 * b2 * D3 + 3072 * a2 * b2 * D2 + (5632 * b4 + 1280 * a4) * D1) / (525 * a3 * b2);
            matrixK[6][5] = 0;
            matrixK[6][6] = (4096 * a2 * b2 * D3 + 2048 * a2 * b2 * D2 + (3072 * b4 + 2560 * a4) * D1) / (1575 * a3 * b);
            matrixK[6][7] = 0;
            matrixK[6][8] = -(512 * a2 * b2 * D3 + 1536 * a2 * b2 * D2 + (2816 * b4 - 200 * a4) * D1) / (525 * a3 * b2);
            matrixK[6][9] = (1520 * a2 * b2 * D3 + 880 * a2 * b2 * D2 + (2112 * b4 - 60 * a4) * D1) / (1575 * a2 * b2);
            matrixK[6][10] = -(2048 * a2 * b2 * D3 + 1024 * a2 * b2 * D2 + (1536 * b4 - 400 * a4) * D1) / (1575 * a3 * b);
            matrixK[6][11] = (384 * a2 * b2 * D3 + 192 * a2 * b2 * D2 + (384 * b4 - 40 * a4) * D1) / (1575 * a2 * b);
            matrixK[6][12] = 0;
            matrixK[6][13] = -(256 * D3 + 128 * D2) / 225;
            matrixK[6][14] = 0;
            matrixK[6][15] = (128 * b * D3 + 64 * b * D2) / 525;
            matrixK[6][16] = (512 * a2 * b2 * D3 + 256 * a2 * b2 * D2 + (-1664 * b4 - 200 * a4) * D1) / (525 * a3 * b2);
            matrixK[6][17] = (272 * a2 * b2 * D3 + 136 * a2 * b2 * D2 + (1248 * b4 + 60 * a4) * D1) / (1575 * a2 * b2);
            matrixK[6][18] = (512 * a2 * b2 * D3 + 256 * a2 * b2 * D2 + (1152 * b4 + 200 * a4) * D1) / (1575 * a3 * b);
            matrixK[6][19] = -(144 * a2 * b2 * D3 + 72 * a2 * b2 * D2 + (288 * b4 + 20 * a4) * D1) / (1575 * a2 * b);
            matrixK[6][20] = -(1024 * a2 * b2 * D3 + 512 * a2 * b2 * D2 + (1280 * a4 - 3328 * b4) * D1) / (525 * a3 * b2);
            matrixK[6][21] = 0;
            matrixK[6][22] = -(1024 * a2 * b2 * D3 + 512 * a2 * b2 * D2 + (2304 * b4 - 1280 * a4) * D1) / (1575 * a3 * b);
            matrixK[6][23] = 0;
            matrixK[6][24] = (512 * a2 * b2 * D3 + 256 * a2 * b2 * D2 + (-1664 * b4 - 200 * a4) * D1) / (525 * a3 * b2);
            matrixK[6][25] = -(272 * a2 * b2 * D3 + 136 * a2 * b2 * D2 + (1248 * b4 + 60 * a4) * D1) / (1575 * a2 * b2);
            matrixK[6][26] = (512 * a2 * b2 * D3 + 256 * a2 * b2 * D2 + (1152 * b4 + 200 * a4) * D1) / (1575 * a3 * b);
            matrixK[6][27] = (144 * a2 * b2 * D3 + 72 * a2 * b2 * D2 + (288 * b4 + 20 * a4) * D1) / (1575 * a2 * b);
            matrixK[6][28] = 0;
            matrixK[6][29] = (256 * D3 + 128 * D2) / 225;
            matrixK[6][30] = 0;
            matrixK[6][31] = -(128 * b * D3 + 64 * b * D2) / 525;

            matrixK[7][0] = (22352 * a2 * b2 * D3 + 26576 * a2 * b2 * D2 + (116160 * b4 - 2800 * a4) * D1) / (40425 * a2 * b2);
            matrixK[7][1] = (23672 * a2 * b2 * D3 + 10296 * a2 * b2 * D2 + (58080 * b4 - 630 * a4) * D1) / (121275 * a * b2);
            matrixK[7][2] = (7040 * a2 * b2 * D3 + 3520 * a2 * b2 * D2 + (12672 * b4 - 1120 * a4) * D1) / (24255 * a2 * b);
            matrixK[7][3] = (13376 * a2 * b2 * D3 + 6688 * a2 * b2 * D2 + (31680 * b4 - 1260 * a4) * D1) / (363825 * a * b);
            matrixK[7][4] = 0;
            matrixK[7][5] = (19712 * a2 * b2 * D3 + 59136 * a2 * b2 * D2 + (232320 * b4 + 6720 * a4) * D1) / (121275 * a * b2);
            matrixK[7][6] = 0;
            matrixK[7][7] = (78848 * a2 * b2 * D3 + 39424 * a2 * b2 * D2 + (126720 * b4 + 13440 * a4) * D1) / (363825 * a * b);
            matrixK[7][8] = -(22352 * a2 * b2 * D3 + 26576 * a2 * b2 * D2 + (116160 * b4 - 2800 * a4) * D1) / (40425 * a2 * b2);
            matrixK[7][9] = (23672 * a2 * b2 * D3 + 10296 * a2 * b2 * D2 + (58080 * b4 - 630 * a4) * D1) / (121275 * a * b2);
            matrixK[7][10] = -(7040 * a2 * b2 * D3 + 3520 * a2 * b2 * D2 + (12672 * b4 - 1120 * a4) * D1) / (24255 * a2 * b);
            matrixK[7][11] = (13376 * a2 * b2 * D3 + 6688 * a2 * b2 * D2 + (31680 * b4 - 1260 * a4) * D1) / (363825 * a * b);
            matrixK[7][12] = (256 * D3 + 128 * D2) / 525;
            matrixK[7][13] = -(128 * a * D3 + 64 * a * D2) / 525;
            matrixK[7][14] = -(128 * b * D3 + 64 * b * D2) / 1225;
            matrixK[7][15] = (64 * a * b * D3 + 32 * a * b * D2) / 1225;
            matrixK[7][16] = (528 * a2 * b2 * D3 + 264 * a2 * b2 * D2 + (-13728 * b4 - 560 * a4) * D1) / (8085 * a2 * b2);
            matrixK[7][17] = (5896 * a2 * b2 * D3 + 2948 * a2 * b2 * D2 + (34320 * b4 + 630 * a4) * D1) / (121275 * a * b2);
            matrixK[7][18] = (10384 * a2 * b2 * D3 + 5192 * a2 * b2 * D2 + (47520 * b4 + 2800 * a4) * D1) / (121275 * a2 * b);
            matrixK[7][19] = -(1144 * a2 * b2 * D3 + 572 * a2 * b2 * D2 + (4752 * b4 + 126 * a4) * D1) / (72765 * a * b);
            matrixK[7][20] = 0;
            matrixK[7][21] = -(19712 * a2 * b2 * D3 + 9856 * a2 * b2 * D2 + (6720 * a4 - 137280 * b4) * D1) / (121275 * a * b2);
            matrixK[7][22] = 0;
            matrixK[7][23] = -(19712 * a2 * b2 * D3 + 9856 * a2 * b2 * D2 + (95040 * b4 - 6720 * a4) * D1) / (363825 * a * b);
            matrixK[7][24] = -(528 * a2 * b2 * D3 + 264 * a2 * b2 * D2 + (-13728 * b4 - 560 * a4) * D1) / (8085 * a2 * b2);
            matrixK[7][25] = (5896 * a2 * b2 * D3 + 2948 * a2 * b2 * D2 + (34320 * b4 + 630 * a4) * D1) / (121275 * a * b2);
            matrixK[7][26] = -(10384 * a2 * b2 * D3 + 5192 * a2 * b2 * D2 + (47520 * b4 + 2800 * a4) * D1) / (121275 * a2 * b);
            matrixK[7][27] = -(1144 * a2 * b2 * D3 + 572 * a2 * b2 * D2 + (4752 * b4 + 126 * a4) * D1) / (72765 * a * b);
            matrixK[7][28] = -(256 * D3 + 128 * D2) / 525;
            matrixK[7][29] = -(128 * a * D3 + 64 * a * D2) / 525;
            matrixK[7][30] = (128 * b * D3 + 64 * b * D2) / 1225;
            matrixK[7][31] = (64 * a * b * D3 + 32 * a * b * D2) / 1225;

            matrixK[8][0] = -(359568 * a2 * b2 * D3 + 179784 * a2 * b2 * D2 + (539972 * b4 - 702962 * a4) * D1) / (40425 * a3 * b3);
            matrixK[8][1] = -(18524 * a2 * b2 * D3 + 9262 * a2 * b2 * D2 + (50338 * b4 - 168039 * a4) * D1) / (40425 * a2 * b3);
            matrixK[8][2] = -(23452 * a2 * b2 * D3 + 20196 * a2 * b2 * D2 + (69814 * b4 - 142393 * a4) * D1) / (40425 * a3 * b2);
            matrixK[8][3] = -(4642 * a2 * b2 * D3 + 1166 * a2 * b2 * D2 + (7862 * b4 - 67367 * a4) * D1) / (80850 * a2 * b2);
            matrixK[8][4] = -(6144 * a2 * b2 * D3 + 3072 * a2 * b2 * D2 + (19968 * b4 - 400 * a4) * D1) / (525 * a3 * b3);
            matrixK[8][5] = -(86592 * a2 * b2 * D3 + 43296 * a2 * b2 * D2 + (823680 * b4 - 5600 * a4) * D1) / (40425 * a2 * b3);
            matrixK[8][6] = -(512 * a2 * b2 * D3 + 1536 * a2 * b2 * D2 + (2816 * b4 - 200 * a4) * D1) / (525 * a3 * b2);
            matrixK[8][7] = -(22352 * a2 * b2 * D3 + 26576 * a2 * b2 * D2 + (116160 * b4 - 2800 * a4) * D1) / (40425 * a2 * b2);
            matrixK[8][8] = (832656 * a2 * b2 * D3 + 416328 * a2 * b2 * D2 + (2077508 * b4 + 2077508 * a4) * D1) / (40425 * a3 * b3);
            matrixK[8][9] = -(62876 * a2 * b2 * D3 + 138468 * a2 * b2 * D2 + (434722 * b4 + 286646 * a4) * D1) / (40425 * a2 * b3);
            matrixK[8][10] = (62876 * a2 * b2 * D3 + 138468 * a2 * b2 * D2 + (286646 * b4 + 434722 * a4) * D1) / (40425 * a3 * b2);
            matrixK[8][11] = -(16962 * a2 * b2 * D3 + 18491 * a2 * b2 * D2 + (116278 * b4 + 116278 * a4) * D1) / (80850 * a2 * b2);
            matrixK[8][12] = -(6144 * a2 * b2 * D3 + 3072 * a2 * b2 * D2 + (19968 * a4 - 400 * b4) * D1) / (525 * a3 * b3);
            matrixK[8][13] = (512 * a2 * b2 * D3 + 1536 * a2 * b2 * D2 + (2816 * a4 - 200 * b4) * D1) / (525 * a2 * b3);
            matrixK[8][14] = (86592 * a2 * b2 * D3 + 43296 * a2 * b2 * D2 + (823680 * a4 - 5600 * b4) * D1) / (40425 * a3 * b2);
            matrixK[8][15] = -(22352 * a2 * b2 * D3 + 26576 * a2 * b2 * D2 + (116160 * a4 - 2800 * b4) * D1) / (40425 * a2 * b2);
            matrixK[8][16] = -(359568 * a2 * b2 * D3 + 179784 * a2 * b2 * D2 + (539972 * a4 - 702962 * b4) * D1) / (40425 * a3 * b3);
            matrixK[8][17] = (23452 * a2 * b2 * D3 + 20196 * a2 * b2 * D2 + (69814 * a4 - 142393 * b4) * D1) / (40425 * a2 * b3);
            matrixK[8][18] = (18524 * a2 * b2 * D3 + 9262 * a2 * b2 * D2 + (50338 * a4 - 168039 * b4) * D1) / (40425 * a3 * b2);
            matrixK[8][19] = -(4642 * a2 * b2 * D3 + 1166 * a2 * b2 * D2 + (7862 * a4 - 67367 * b4) * D1) / (80850 * a2 * b2);
            matrixK[8][20] = (6144 * a2 * b2 * D3 + 3072 * a2 * b2 * D2 + (-6912 * b4 - 400 * a4) * D1) / (525 * a3 * b3);
            matrixK[8][21] = (86592 * a2 * b2 * D3 + 43296 * a2 * b2 * D2 + (-285120 * b4 - 5600 * a4) * D1) / (40425 * a2 * b3);
            matrixK[8][22] = -(512 * a2 * b2 * D3 + 256 * a2 * b2 * D2 + (-1664 * b4 - 200 * a4) * D1) / (525 * a3 * b2);
            matrixK[8][23] = -(528 * a2 * b2 * D3 + 264 * a2 * b2 * D2 + (-13728 * b4 - 560 * a4) * D1) / (8085 * a2 * b2);
            matrixK[8][24] = -(113520 * a2 * b2 * D3 + 56760 * a2 * b2 * D2 + (170738 * b4 + 170738 * a4) * D1) / (40425 * a3 * b3);
            matrixK[8][25] = -(20900 * a2 * b2 * D3 + 10450 * a2 * b2 * D2 + (9337 * b4 + 39911 * a4) * D1) / (40425 * a2 * b3);
            matrixK[8][26] = (20900 * a2 * b2 * D3 + 10450 * a2 * b2 * D2 + (39911 * b4 + 9337 * a4) * D1) / (40425 * a3 * b2);
            matrixK[8][27] = (7678 * a2 * b2 * D3 + 3839 * a2 * b2 * D2 + (3303 * b4 + 3303 * a4) * D1) / (80850 * a2 * b2);
            matrixK[8][28] = (6144 * a2 * b2 * D3 + 3072 * a2 * b2 * D2 + (-400 * b4 - 6912 * a4) * D1) / (525 * a3 * b3);
            matrixK[8][29] = (512 * a2 * b2 * D3 + 256 * a2 * b2 * D2 + (-200 * b4 - 1664 * a4) * D1) / (525 * a2 * b3);
            matrixK[8][30] = -(86592 * a2 * b2 * D3 + 43296 * a2 * b2 * D2 + (-5600 * b4 - 285120 * a4) * D1) / (40425 * a3 * b2);
            matrixK[8][31] = -(528 * a2 * b2 * D3 + 264 * a2 * b2 * D2 + (-560 * b4 - 13728 * a4) * D1) / (8085 * a2 * b2);

            matrixK[9][0] = (18524 * a2 * b2 * D3 + 9262 * a2 * b2 * D2 + (50338 * b4 - 168039 * a4) * D1) / (40425 * a2 * b3);
            matrixK[9][1] = -(40700 * a2 * b2 * D3 + 20350 * a2 * b2 * D2 + (4574 * b4 + 115947 * a4) * D1) / (121275 * a * b3);
            matrixK[9][2] = -(42394 * a2 * b2 * D3 + 24662 * a2 * b2 * D2 + (202101 * a4 - 23586 * b4) * D1) / (242550 * a2 * b2);
            matrixK[9][3] = -(17842 * a2 * b2 * D3 + 10846 * a2 * b2 * D2 + (7626 * b4 + 46251 * a4) * D1) / (242550 * a * b2);
            matrixK[9][4] = (576 * a2 * b2 * D3 + 288 * a2 * b2 * D2 + (4992 * b4 - 40 * a4) * D1) / (525 * a2 * b3);
            matrixK[9][5] = (3872 * a2 * b2 * D3 + 1936 * a2 * b2 * D2 + (137280 * b4 - 420 * a4) * D1) / (40425 * a * b3);
            matrixK[9][6] = (1520 * a2 * b2 * D3 + 880 * a2 * b2 * D2 + (2112 * b4 - 60 * a4) * D1) / (1575 * a2 * b2);
            matrixK[9][7] = (23672 * a2 * b2 * D3 + 10296 * a2 * b2 * D2 + (58080 * b4 - 630 * a4) * D1) / (121275 * a * b2);
            matrixK[9][8] = -(62876 * a2 * b2 * D3 + 138468 * a2 * b2 * D2 + (434722 * b4 + 286646 * a4) * D1) / (40425 * a2 * b3);
            matrixK[9][9] = (151184 * a2 * b2 * D3 + 75592 * a2 * b2 * D2 + (320324 * b4 + 155016 * a4) * D1) / (121275 * a * b3);
            matrixK[9][10] = -(191686 * a2 * b2 * D3 + 368423 * a2 * b2 * D2 + (348834 * b4 + 348834 * a4) * D1) / (242550 * a2 * b2);
            matrixK[9][11] = (22572 * a2 * b2 * D3 + 16676 * a2 * b2 * D2 + (38838 * b4 + 31044 * a4) * D1) / (121275 * a * b2);
            matrixK[9][12] = (512 * a2 * b2 * D3 + 1536 * a2 * b2 * D2 + (2816 * a4 - 200 * b4) * D1) / (525 * a2 * b3);
            matrixK[9][13] = -(2048 * a2 * b2 * D3 + 1024 * a2 * b2 * D2 + (1536 * a4 - 400 * b4) * D1) / (1575 * a * b3);
            matrixK[9][14] = -(8272 * a2 * b2 * D3 + 19536 * a2 * b2 * D2 + (116160 * a4 - 2800 * b4) * D1) / (40425 * a2 * b2);
            matrixK[9][15] = (7040 * a2 * b2 * D3 + 3520 * a2 * b2 * D2 + (12672 * a4 - 1120 * b4) * D1) / (24255 * a * b2);
            matrixK[9][16] = (23452 * a2 * b2 * D3 + 20196 * a2 * b2 * D2 + (69814 * a4 - 142393 * b4) * D1) / (40425 * a2 * b3);
            matrixK[9][17] = (6512 * a2 * b2 * D3 + 3256 * a2 * b2 * D2 + (94706 * b4 - 36744 * a4) * D1) / (121275 * a * b3);
            matrixK[9][18] = (42394 * a2 * b2 * D3 + 24662 * a2 * b2 * D2 + (202101 * b4 - 23586 * a4) * D1) / (242550 * a2 * b2);
            matrixK[9][19] = -(6996 * a2 * b2 * D3 + 3498 * a2 * b2 * D2 + (21607 * b4 - 1476 * a4) * D1) / (121275 * a * b2);
            matrixK[9][20] = -(576 * a2 * b2 * D3 + 288 * a2 * b2 * D2 + (-1728 * b4 - 40 * a4) * D1) / (525 * a2 * b3);
            matrixK[9][21] = -(3872 * a2 * b2 * D3 + 1936 * a2 * b2 * D2 + (-47520 * b4 - 420 * a4) * D1) / (40425 * a * b3);
            matrixK[9][22] = -(272 * a2 * b2 * D3 + 136 * a2 * b2 * D2 + (1248 * b4 + 60 * a4) * D1) / (1575 * a2 * b2);
            matrixK[9][23] = -(5896 * a2 * b2 * D3 + 2948 * a2 * b2 * D2 + (34320 * b4 + 630 * a4) * D1) / (121275 * a * b2);
            matrixK[9][24] = (20900 * a2 * b2 * D3 + 10450 * a2 * b2 * D2 + (9337 * b4 + 39911 * a4) * D1) / (40425 * a2 * b3);
            matrixK[9][25] = (1276 * a2 * b2 * D3 + 638 * a2 * b2 * D2 + (27243 * a4 - 9671 * b4) * D1) / (121275 * a * b3);
            matrixK[9][26] = -(506 * a2 * b2 * D3 + 253 * a2 * b2 * D2 + (9909 * b4 + 9909 * a4) * D1) / (242550 * a2 * b2);
            matrixK[9][27] = (4334 * a2 * b2 * D3 + 2167 * a2 * b2 * D2 + (5849 * b4 - 1899 * a4) * D1) / (242550 * a * b2);
            matrixK[9][28] = -(512 * a2 * b2 * D3 + 256 * a2 * b2 * D2 + (-200 * b4 - 1664 * a4) * D1) / (525 * a2 * b3);
            matrixK[9][29] = (512 * a2 * b2 * D3 + 256 * a2 * b2 * D2 + (200 * b4 + 1152 * a4) * D1) / (1575 * a * b3);
            matrixK[9][30] = (8272 * a2 * b2 * D3 + 4136 * a2 * b2 * D2 + (-2800 * b4 - 68640 * a4) * D1) / (40425 * a2 * b2);
            matrixK[9][31] = -(10384 * a2 * b2 * D3 + 5192 * a2 * b2 * D2 + (2800 * b4 + 47520 * a4) * D1) / (121275 * a * b2);

            matrixK[10][0] = -(23452 * a2 * b2 * D3 + 20196 * a2 * b2 * D2 + (69814 * b4 - 142393 * a4) * D1) / (40425 * a3 * b2);
            matrixK[10][1] = (42394 * a2 * b2 * D3 + 24662 * a2 * b2 * D2 + (202101 * a4 - 23586 * b4) * D1) / (242550 * a2 * b2);
            matrixK[10][2] = (6512 * a2 * b2 * D3 + 3256 * a2 * b2 * D2 + (94706 * a4 - 36744 * b4) * D1) / (121275 * a3 * b);
            matrixK[10][3] = (6996 * a2 * b2 * D3 + 3498 * a2 * b2 * D2 + (21607 * a4 - 1476 * b4) * D1) / (121275 * a2 * b);
            matrixK[10][4] = -(512 * a2 * b2 * D3 + 1536 * a2 * b2 * D2 + (2816 * b4 - 200 * a4) * D1) / (525 * a3 * b2);
            matrixK[10][5] = -(8272 * a2 * b2 * D3 + 19536 * a2 * b2 * D2 + (116160 * b4 - 2800 * a4) * D1) / (40425 * a2 * b2);
            matrixK[10][6] = -(2048 * a2 * b2 * D3 + 1024 * a2 * b2 * D2 + (1536 * b4 - 400 * a4) * D1) / (1575 * a3 * b);
            matrixK[10][7] = -(7040 * a2 * b2 * D3 + 3520 * a2 * b2 * D2 + (12672 * b4 - 1120 * a4) * D1) / (24255 * a2 * b);
            matrixK[10][8] = (62876 * a2 * b2 * D3 + 138468 * a2 * b2 * D2 + (286646 * b4 + 434722 * a4) * D1) / (40425 * a3 * b2);
            matrixK[10][9] = -(191686 * a2 * b2 * D3 + 368423 * a2 * b2 * D2 + (348834 * b4 + 348834 * a4) * D1) / (242550 * a2 * b2);
            matrixK[10][10] = (151184 * a2 * b2 * D3 + 75592 * a2 * b2 * D2 + (155016 * b4 + 320324 * a4) * D1) / (121275 * a3 * b);
            matrixK[10][11] = -(22572 * a2 * b2 * D3 + 16676 * a2 * b2 * D2 + (31044 * b4 + 38838 * a4) * D1) / (121275 * a2 * b);
            matrixK[10][12] = -(576 * a2 * b2 * D3 + 288 * a2 * b2 * D2 + (4992 * a4 - 40 * b4) * D1) / (525 * a3 * b2);
            matrixK[10][13] = (1520 * a2 * b2 * D3 + 880 * a2 * b2 * D2 + (2112 * a4 - 60 * b4) * D1) / (1575 * a2 * b2);
            matrixK[10][14] = (3872 * a2 * b2 * D3 + 1936 * a2 * b2 * D2 + (137280 * a4 - 420 * b4) * D1) / (40425 * a3 * b);
            matrixK[10][15] = -(23672 * a2 * b2 * D3 + 10296 * a2 * b2 * D2 + (58080 * a4 - 630 * b4) * D1) / (121275 * a2 * b);
            matrixK[10][16] = -(18524 * a2 * b2 * D3 + 9262 * a2 * b2 * D2 + (50338 * a4 - 168039 * b4) * D1) / (40425 * a3 * b2);
            matrixK[10][17] = -(42394 * a2 * b2 * D3 + 24662 * a2 * b2 * D2 + (202101 * b4 - 23586 * a4) * D1) / (242550 * a2 * b2);
            matrixK[10][18] = -(40700 * a2 * b2 * D3 + 20350 * a2 * b2 * D2 + (115947 * b4 + 4574 * a4) * D1) / (121275 * a3 * b);
            matrixK[10][19] = (17842 * a2 * b2 * D3 + 10846 * a2 * b2 * D2 + (46251 * b4 + 7626 * a4) * D1) / (242550 * a2 * b);
            matrixK[10][20] = (512 * a2 * b2 * D3 + 256 * a2 * b2 * D2 + (-1664 * b4 - 200 * a4) * D1) / (525 * a3 * b2);
            matrixK[10][21] = (8272 * a2 * b2 * D3 + 4136 * a2 * b2 * D2 + (-68640 * b4 - 2800 * a4) * D1) / (40425 * a2 * b2);
            matrixK[10][22] = (512 * a2 * b2 * D3 + 256 * a2 * b2 * D2 + (1152 * b4 + 200 * a4) * D1) / (1575 * a3 * b);
            matrixK[10][23] = (10384 * a2 * b2 * D3 + 5192 * a2 * b2 * D2 + (47520 * b4 + 2800 * a4) * D1) / (121275 * a2 * b);
            matrixK[10][24] = -(20900 * a2 * b2 * D3 + 10450 * a2 * b2 * D2 + (39911 * b4 + 9337 * a4) * D1) / (40425 * a3 * b2);
            matrixK[10][25] = -(506 * a2 * b2 * D3 + 253 * a2 * b2 * D2 + (9909 * b4 + 9909 * a4) * D1) / (242550 * a2 * b2);
            matrixK[10][26] = (1276 * a2 * b2 * D3 + 638 * a2 * b2 * D2 + (27243 * b4 - 9671 * a4) * D1) / (121275 * a3 * b);
            matrixK[10][27] = -(4334 * a2 * b2 * D3 + 2167 * a2 * b2 * D2 + (5849 * a4 - 1899 * b4) * D1) / (242550 * a2 * b);
            matrixK[10][28] = (576 * a2 * b2 * D3 + 288 * a2 * b2 * D2 + (-40 * b4 - 1728 * a4) * D1) / (525 * a3 * b2);
            matrixK[10][29] = -(272 * a2 * b2 * D3 + 136 * a2 * b2 * D2 + (60 * b4 + 1248 * a4) * D1) / (1575 * a2 * b2);
            matrixK[10][30] = -(3872 * a2 * b2 * D3 + 1936 * a2 * b2 * D2 + (-420 * b4 - 47520 * a4) * D1) / (40425 * a3 * b);
            matrixK[10][31] = (5896 * a2 * b2 * D3 + 2948 * a2 * b2 * D2 + (630 * b4 + 34320 * a4) * D1) / (121275 * a2 * b);

            matrixK[11][0] = (4642 * a2 * b2 * D3 + 1166 * a2 * b2 * D2 + (7862 * b4 - 67367 * a4) * D1) / (80850 * a2 * b2);
            matrixK[11][1] = -(17842 * a2 * b2 * D3 + 10846 * a2 * b2 * D2 + (7626 * b4 + 46251 * a4) * D1) / (242550 * a * b2);
            matrixK[11][2] = -(6996 * a2 * b2 * D3 + 3498 * a2 * b2 * D2 + (21607 * a4 - 1476 * b4) * D1) / (121275 * a2 * b);
            matrixK[11][3] = -(2596 * a2 * b2 * D3 + 1298 * a2 * b2 * D2 + (916 * b4 + 4857 * a4) * D1) / (121275 * a * b);
            matrixK[11][4] = (80 * a2 * b2 * D3 + 80 * a2 * b2 * D2 + (704 * b4 - 20 * a4) * D1) / (525 * a2 * b2);
            matrixK[11][5] = (2552 * a2 * b2 * D3 - 264 * a2 * b2 * D2 + (58080 * b4 - 630 * a4) * D1) / (121275 * a * b2);
            matrixK[11][6] = (384 * a2 * b2 * D3 + 192 * a2 * b2 * D2 + (384 * b4 - 40 * a4) * D1) / (1575 * a2 * b);
            matrixK[11][7] = (13376 * a2 * b2 * D3 + 6688 * a2 * b2 * D2 + (31680 * b4 - 1260 * a4) * D1) / (363825 * a * b);
            matrixK[11][8] = -(16962 * a2 * b2 * D3 + 18491 * a2 * b2 * D2 + (116278 * b4 + 116278 * a4) * D1) / (80850 * a2 * b2);
            matrixK[11][9] = (22572 * a2 * b2 * D3 + 16676 * a2 * b2 * D2 + (38838 * b4 + 31044 * a4) * D1) / (121275 * a * b2);
            matrixK[11][10] = -(22572 * a2 * b2 * D3 + 16676 * a2 * b2 * D2 + (31044 * b4 + 38838 * a4) * D1) / (121275 * a2 * b);
            matrixK[11][11] = (17776 * a2 * b2 * D3 + 8888 * a2 * b2 * D2 + (19848 * b4 + 19848 * a4) * D1) / (363825 * a * b);
            matrixK[11][12] = (80 * a2 * b2 * D3 + 80 * a2 * b2 * D2 + (704 * a4 - 20 * b4) * D1) / (525 * a2 * b2);
            matrixK[11][13] = -(384 * a2 * b2 * D3 + 192 * a2 * b2 * D2 + (384 * a4 - 40 * b4) * D1) / (1575 * a * b2);
            matrixK[11][14] = -(2552 * a2 * b2 * D3 - 264 * a2 * b2 * D2 + (58080 * a4 - 630 * b4) * D1) / (121275 * a2 * b);
            matrixK[11][15] = (13376 * a2 * b2 * D3 + 6688 * a2 * b2 * D2 + (31680 * a4 - 1260 * b4) * D1) / (363825 * a * b);
            matrixK[11][16] = (4642 * a2 * b2 * D3 + 1166 * a2 * b2 * D2 + (7862 * a4 - 67367 * b4) * D1) / (80850 * a2 * b2);
            matrixK[11][17] = (6996 * a2 * b2 * D3 + 3498 * a2 * b2 * D2 + (21607 * b4 - 1476 * a4) * D1) / (121275 * a * b2);
            matrixK[11][18] = (17842 * a2 * b2 * D3 + 10846 * a2 * b2 * D2 + (46251 * b4 + 7626 * a4) * D1) / (242550 * a2 * b);
            matrixK[11][19] = -(2596 * a2 * b2 * D3 + 1298 * a2 * b2 * D2 + (4857 * b4 + 916 * a4) * D1) / (121275 * a * b);
            matrixK[11][20] = -(80 * a2 * b2 * D3 + 40 * a2 * b2 * D2 + (-416 * b4 - 20 * a4) * D1) / (525 * a2 * b2);
            matrixK[11][21] = -(2552 * a2 * b2 * D3 + 1276 * a2 * b2 * D2 + (-34320 * b4 - 630 * a4) * D1) / (121275 * a * b2);
            matrixK[11][22] = -(144 * a2 * b2 * D3 + 72 * a2 * b2 * D2 + (288 * b4 + 20 * a4) * D1) / (1575 * a2 * b);
            matrixK[11][23] = -(1144 * a2 * b2 * D3 + 572 * a2 * b2 * D2 + (4752 * b4 + 126 * a4) * D1) / (72765 * a * b);
            matrixK[11][24] = (7678 * a2 * b2 * D3 + 3839 * a2 * b2 * D2 + (3303 * b4 + 3303 * a4) * D1) / (80850 * a2 * b2);
            matrixK[11][25] = -(4334 * a2 * b2 * D3 + 2167 * a2 * b2 * D2 + (5849 * b4 - 1899 * a4) * D1) / (242550 * a * b2);
            matrixK[11][26] = (4334 * a2 * b2 * D3 + 2167 * a2 * b2 * D2 + (5849 * a4 - 1899 * b4) * D1) / (242550 * a2 * b);
            matrixK[11][27] = (6754 * a2 * b2 * D3 + 3377 * a2 * b2 * D2 + (4437 * b4 + 4437 * a4) * D1) / (727650 * a * b);
            matrixK[11][28] = -(80 * a2 * b2 * D3 + 40 * a2 * b2 * D2 + (-20 * b4 - 416 * a4) * D1) / (525 * a2 * b2);
            matrixK[11][29] = (144 * a2 * b2 * D3 + 72 * a2 * b2 * D2 + (20 * b4 + 288 * a4) * D1) / (1575 * a * b2);
            matrixK[11][30] = (2552 * a2 * b2 * D3 + 1276 * a2 * b2 * D2 + (-630 * b4 - 34320 * a4) * D1) / (121275 * a2 * b);
            matrixK[11][31] = -(1144 * a2 * b2 * D3 + 572 * a2 * b2 * D2 + (126 * b4 + 4752 * a4) * D1) / (72765 * a * b);

            matrixK[12][0] = (6144 * a2 * b2 * D3 + 3072 * a2 * b2 * D2 + (-400 * b4 - 6912 * a4) * D1) / (525 * a3 * b3);
            matrixK[12][1] = (512 * a2 * b2 * D3 + 256 * a2 * b2 * D2 + (-200 * b4 - 1664 * a4) * D1) / (525 * a2 * b3);
            matrixK[12][2] = (576 * a2 * b2 * D3 + 288 * a2 * b2 * D2 + (-40 * b4 - 1728 * a4) * D1) / (525 * a3 * b2);
            matrixK[12][3] = (80 * a2 * b2 * D3 + 40 * a2 * b2 * D2 + (-20 * b4 - 416 * a4) * D1) / (525 * a2 * b2);
            matrixK[12][4] = 0;
            matrixK[12][5] = 0;
            matrixK[12][6] = 0;
            matrixK[12][7] = (256 * D3 + 128 * D2) / 525;
            matrixK[12][8] = -(6144 * a2 * b2 * D3 + 3072 * a2 * b2 * D2 + (19968 * a4 - 400 * b4) * D1) / (525 * a3 * b3);
            matrixK[12][9] = (512 * a2 * b2 * D3 + 1536 * a2 * b2 * D2 + (2816 * a4 - 200 * b4) * D1) / (525 * a2 * b3);
            matrixK[12][10] = -(576 * a2 * b2 * D3 + 288 * a2 * b2 * D2 + (4992 * a4 - 40 * b4) * D1) / (525 * a3 * b2);
            matrixK[12][11] = (80 * a2 * b2 * D3 + 80 * a2 * b2 * D2 + (704 * a4 - 20 * b4) * D1) / (525 * a2 * b2);
            matrixK[12][12] = (12288 * a2 * b2 * D3 + 6144 * a2 * b2 * D2 + (2560 * b4 + 39936 * a4) * D1) / (525 * a3 * b3);
            matrixK[12][13] = -(1024 * a2 * b2 * D3 + 3072 * a2 * b2 * D2 + (1280 * b4 + 5632 * a4) * D1) / (525 * a2 * b3);
            matrixK[12][14] = 0;
            matrixK[12][15] = 0;
            matrixK[12][16] = -(6144 * a2 * b2 * D3 + 3072 * a2 * b2 * D2 + (19968 * a4 - 400 * b4) * D1) / (525 * a3 * b3);
            matrixK[12][17] = (512 * a2 * b2 * D3 + 1536 * a2 * b2 * D2 + (2816 * a4 - 200 * b4) * D1) / (525 * a2 * b3);
            matrixK[12][18] = (576 * a2 * b2 * D3 + 288 * a2 * b2 * D2 + (4992 * a4 - 40 * b4) * D1) / (525 * a3 * b2);
            matrixK[12][19] = -(80 * a2 * b2 * D3 + 80 * a2 * b2 * D2 + (704 * a4 - 20 * b4) * D1) / (525 * a2 * b2);
            matrixK[12][20] = 0;
            matrixK[12][21] = 0;
            matrixK[12][22] = 0;
            matrixK[12][23] = -(256 * D3 + 128 * D2) / 525;
            matrixK[12][24] = (6144 * a2 * b2 * D3 + 3072 * a2 * b2 * D2 + (-400 * b4 - 6912 * a4) * D1) / (525 * a3 * b3);
            matrixK[12][25] = (512 * a2 * b2 * D3 + 256 * a2 * b2 * D2 + (-200 * b4 - 1664 * a4) * D1) / (525 * a2 * b3);
            matrixK[12][26] = -(576 * a2 * b2 * D3 + 288 * a2 * b2 * D2 + (-40 * b4 - 1728 * a4) * D1) / (525 * a3 * b2);
            matrixK[12][27] = -(80 * a2 * b2 * D3 + 40 * a2 * b2 * D2 + (-20 * b4 - 416 * a4) * D1) / (525 * a2 * b2);
            matrixK[12][28] = -(12288 * a2 * b2 * D3 + 6144 * a2 * b2 * D2 + (2560 * b4 - 13824 * a4) * D1) / (525 * a3 * b3);
            matrixK[12][29] = -(1024 * a2 * b2 * D3 + 512 * a2 * b2 * D2 + (1280 * b4 - 3328 * a4) * D1) / (525 * a2 * b3);
            matrixK[12][30] = 0;
            matrixK[12][31] = 0;

            matrixK[13][0] = -(512 * a2 * b2 * D3 + 256 * a2 * b2 * D2 + (-200 * b4 - 1664 * a4) * D1) / (525 * a2 * b3);
            matrixK[13][1] = (512 * a2 * b2 * D3 + 256 * a2 * b2 * D2 + (200 * b4 + 1152 * a4) * D1) / (1575 * a * b3);
            matrixK[13][2] = (272 * a2 * b2 * D3 + 136 * a2 * b2 * D2 + (60 * b4 + 1248 * a4) * D1) / (1575 * a2 * b2);
            matrixK[13][3] = (144 * a2 * b2 * D3 + 72 * a2 * b2 * D2 + (20 * b4 + 288 * a4) * D1) / (1575 * a * b2);
            matrixK[13][4] = 0;
            matrixK[13][5] = 0;
            matrixK[13][6] = -(256 * D3 + 128 * D2) / 225;
            matrixK[13][7] = -(128 * a * D3 + 64 * a * D2) / 525;
            matrixK[13][8] = (512 * a2 * b2 * D3 + 1536 * a2 * b2 * D2 + (2816 * a4 - 200 * b4) * D1) / (525 * a2 * b3);
            matrixK[13][9] = -(2048 * a2 * b2 * D3 + 1024 * a2 * b2 * D2 + (1536 * a4 - 400 * b4) * D1) / (1575 * a * b3);
            matrixK[13][10] = (1520 * a2 * b2 * D3 + 880 * a2 * b2 * D2 + (2112 * a4 - 60 * b4) * D1) / (1575 * a2 * b2);
            matrixK[13][11] = -(384 * a2 * b2 * D3 + 192 * a2 * b2 * D2 + (384 * a4 - 40 * b4) * D1) / (1575 * a * b2);
            matrixK[13][12] = -(1024 * a2 * b2 * D3 + 3072 * a2 * b2 * D2 + (1280 * b4 + 5632 * a4) * D1) / (525 * a2 * b3);
            matrixK[13][13] = (4096 * a2 * b2 * D3 + 2048 * a2 * b2 * D2 + (2560 * b4 + 3072 * a4) * D1) / (1575 * a * b3);
            matrixK[13][14] = 0;
            matrixK[13][15] = 0;
            matrixK[13][16] = (512 * a2 * b2 * D3 + 1536 * a2 * b2 * D2 + (2816 * a4 - 200 * b4) * D1) / (525 * a2 * b3);
            matrixK[13][17] = -(2048 * a2 * b2 * D3 + 1024 * a2 * b2 * D2 + (1536 * a4 - 400 * b4) * D1) / (1575 * a * b3);
            matrixK[13][18] = -(1520 * a2 * b2 * D3 + 880 * a2 * b2 * D2 + (2112 * a4 - 60 * b4) * D1) / (1575 * a2 * b2);
            matrixK[13][19] = (384 * a2 * b2 * D3 + 192 * a2 * b2 * D2 + (384 * a4 - 40 * b4) * D1) / (1575 * a * b2);
            matrixK[13][20] = 0;
            matrixK[13][21] = 0;
            matrixK[13][22] = (256 * D3 + 128 * D2) / 225;
            matrixK[13][23] = (128 * a * D3 + 64 * a * D2) / 525;
            matrixK[13][24] = -(512 * a2 * b2 * D3 + 256 * a2 * b2 * D2 + (-200 * b4 - 1664 * a4) * D1) / (525 * a2 * b3);
            matrixK[13][25] = (512 * a2 * b2 * D3 + 256 * a2 * b2 * D2 + (200 * b4 + 1152 * a4) * D1) / (1575 * a * b3);
            matrixK[13][26] = -(272 * a2 * b2 * D3 + 136 * a2 * b2 * D2 + (60 * b4 + 1248 * a4) * D1) / (1575 * a2 * b2);
            matrixK[13][27] = -(144 * a2 * b2 * D3 + 72 * a2 * b2 * D2 + (20 * b4 + 288 * a4) * D1) / (1575 * a * b2);
            matrixK[13][28] = (1024 * a2 * b2 * D3 + 512 * a2 * b2 * D2 + (1280 * b4 - 3328 * a4) * D1) / (525 * a2 * b3);
            matrixK[13][29] = -(1024 * a2 * b2 * D3 + 512 * a2 * b2 * D2 + (2304 * a4 - 1280 * b4) * D1) / (1575 * a * b3);
            matrixK[13][30] = 0;
            matrixK[13][31] = 0;

            matrixK[14][0] = -(86592 * a2 * b2 * D3 + 43296 * a2 * b2 * D2 + (-5600 * b4 - 285120 * a4) * D1) / (40425 * a3 * b2);
            matrixK[14][1] = -(8272 * a2 * b2 * D3 + 4136 * a2 * b2 * D2 + (-2800 * b4 - 68640 * a4) * D1) / (40425 * a2 * b2);
            matrixK[14][2] = -(3872 * a2 * b2 * D3 + 1936 * a2 * b2 * D2 + (-420 * b4 - 47520 * a4) * D1) / (40425 * a3 * b);
            matrixK[14][3] = -(2552 * a2 * b2 * D3 + 1276 * a2 * b2 * D2 + (-630 * b4 - 34320 * a4) * D1) / (121275 * a2 * b);
            matrixK[14][4] = 0;
            matrixK[14][5] = -(256 * D3 + 128 * D2) / 1225;
            matrixK[14][6] = 0;
            matrixK[14][7] = -(128 * b * D3 + 64 * b * D2) / 1225;
            matrixK[14][8] = (86592 * a2 * b2 * D3 + 43296 * a2 * b2 * D2 + (823680 * a4 - 5600 * b4) * D1) / (40425 * a3 * b2);
            matrixK[14][9] = -(8272 * a2 * b2 * D3 + 19536 * a2 * b2 * D2 + (116160 * a4 - 2800 * b4) * D1) / (40425 * a2 * b2);
            matrixK[14][10] = (3872 * a2 * b2 * D3 + 1936 * a2 * b2 * D2 + (137280 * a4 - 420 * b4) * D1) / (40425 * a3 * b);
            matrixK[14][11] = -(2552 * a2 * b2 * D3 - 264 * a2 * b2 * D2 + (58080 * a4 - 630 * b4) * D1) / (121275 * a2 * b);
            matrixK[14][12] = 0;
            matrixK[14][13] = 0;
            matrixK[14][14] = (78848 * a2 * b2 * D3 + 39424 * a2 * b2 * D2 + (4480 * b4 + 549120 * a4) * D1) / (40425 * a3 * b);
            matrixK[14][15] = -(19712 * a2 * b2 * D3 + 59136 * a2 * b2 * D2 + (6720 * b4 + 232320 * a4) * D1) / (121275 * a2 * b);
            matrixK[14][16] = -(86592 * a2 * b2 * D3 + 43296 * a2 * b2 * D2 + (823680 * a4 - 5600 * b4) * D1) / (40425 * a3 * b2);
            matrixK[14][17] = (8272 * a2 * b2 * D3 + 19536 * a2 * b2 * D2 + (116160 * a4 - 2800 * b4) * D1) / (40425 * a2 * b2);
            matrixK[14][18] = (3872 * a2 * b2 * D3 + 1936 * a2 * b2 * D2 + (137280 * a4 - 420 * b4) * D1) / (40425 * a3 * b);
            matrixK[14][19] = -(2552 * a2 * b2 * D3 - 264 * a2 * b2 * D2 + (58080 * a4 - 630 * b4) * D1) / (121275 * a2 * b);
            matrixK[14][20] = 0;
            matrixK[14][21] = (256 * D3 + 128 * D2) / 1225;
            matrixK[14][22] = 0;
            matrixK[14][23] = -(128 * b * D3 + 64 * b * D2) / 1225;
            matrixK[14][24] = (86592 * a2 * b2 * D3 + 43296 * a2 * b2 * D2 + (-5600 * b4 - 285120 * a4) * D1) / (40425 * a3 * b2);
            matrixK[14][25] = (8272 * a2 * b2 * D3 + 4136 * a2 * b2 * D2 + (-2800 * b4 - 68640 * a4) * D1) / (40425 * a2 * b2);
            matrixK[14][26] = -(3872 * a2 * b2 * D3 + 1936 * a2 * b2 * D2 + (-420 * b4 - 47520 * a4) * D1) / (40425 * a3 * b);
            matrixK[14][27] = -(2552 * a2 * b2 * D3 + 1276 * a2 * b2 * D2 + (-630 * b4 - 34320 * a4) * D1) / (121275 * a2 * b);
            matrixK[14][28] = 0;
            matrixK[14][29] = 0;
            matrixK[14][30] = -(78848 * a2 * b2 * D3 + 39424 * a2 * b2 * D2 + (4480 * b4 - 190080 * a4) * D1) / (40425 * a3 * b);
            matrixK[14][31] = -(19712 * a2 * b2 * D3 + 9856 * a2 * b2 * D2 + (6720 * b4 - 137280 * a4) * D1) / (121275 * a2 * b);

            matrixK[15][0] = (528 * a2 * b2 * D3 + 264 * a2 * b2 * D2 + (-560 * b4 - 13728 * a4) * D1) / (8085 * a2 * b2);
            matrixK[15][1] = -(10384 * a2 * b2 * D3 + 5192 * a2 * b2 * D2 + (2800 * b4 + 47520 * a4) * D1) / (121275 * a * b2);
            matrixK[15][2] = -(5896 * a2 * b2 * D3 + 2948 * a2 * b2 * D2 + (630 * b4 + 34320 * a4) * D1) / (121275 * a2 * b);
            matrixK[15][3] = -(1144 * a2 * b2 * D3 + 572 * a2 * b2 * D2 + (126 * b4 + 4752 * a4) * D1) / (72765 * a * b);
            matrixK[15][4] = (256 * D3 + 128 * D2) / 525;
            matrixK[15][5] = (128 * a * D3 + 64 * a * D2) / 1225;
            matrixK[15][6] = (128 * b * D3 + 64 * b * D2) / 525;
            matrixK[15][7] = (64 * a * b * D3 + 32 * a * b * D2) / 1225;
            matrixK[15][8] = -(22352 * a2 * b2 * D3 + 26576 * a2 * b2 * D2 + (116160 * a4 - 2800 * b4) * D1) / (40425 * a2 * b2);
            matrixK[15][9] = (7040 * a2 * b2 * D3 + 3520 * a2 * b2 * D2 + (12672 * a4 - 1120 * b4) * D1) / (24255 * a * b2);
            matrixK[15][10] = -(23672 * a2 * b2 * D3 + 10296 * a2 * b2 * D2 + (58080 * a4 - 630 * b4) * D1) / (121275 * a2 * b);
            matrixK[15][11] = (13376 * a2 * b2 * D3 + 6688 * a2 * b2 * D2 + (31680 * a4 - 1260 * b4) * D1) / (363825 * a * b);
            matrixK[15][12] = 0;
            matrixK[15][13] = 0;
            matrixK[15][14] = -(19712 * a2 * b2 * D3 + 59136 * a2 * b2 * D2 + (6720 * b4 + 232320 * a4) * D1) / (121275 * a2 * b);
            matrixK[15][15] = (78848 * a2 * b2 * D3 + 39424 * a2 * b2 * D2 + (13440 * b4 + 126720 * a4) * D1) / (363825 * a * b);
            matrixK[15][16] = (22352 * a2 * b2 * D3 + 26576 * a2 * b2 * D2 + (116160 * a4 - 2800 * b4) * D1) / (40425 * a2 * b2);
            matrixK[15][17] = -(7040 * a2 * b2 * D3 + 3520 * a2 * b2 * D2 + (12672 * a4 - 1120 * b4) * D1) / (24255 * a * b2);
            matrixK[15][18] = -(23672 * a2 * b2 * D3 + 10296 * a2 * b2 * D2 + (58080 * a4 - 630 * b4) * D1) / (121275 * a2 * b);
            matrixK[15][19] = (13376 * a2 * b2 * D3 + 6688 * a2 * b2 * D2 + (31680 * a4 - 1260 * b4) * D1) / (363825 * a * b);
            matrixK[15][20] = -(256 * D3 + 128 * D2) / 525;
            matrixK[15][21] = -(128 * a * D3 + 64 * a * D2) / 1225;
            matrixK[15][22] = (128 * b * D3 + 64 * b * D2) / 525;
            matrixK[15][23] = (64 * a * b * D3 + 32 * a * b * D2) / 1225;
            matrixK[15][24] = -(528 * a2 * b2 * D3 + 264 * a2 * b2 * D2 + (-560 * b4 - 13728 * a4) * D1) / (8085 * a2 * b2);
            matrixK[15][25] = (10384 * a2 * b2 * D3 + 5192 * a2 * b2 * D2 + (2800 * b4 + 47520 * a4) * D1) / (121275 * a * b2);
            matrixK[15][26] = -(5896 * a2 * b2 * D3 + 2948 * a2 * b2 * D2 + (630 * b4 + 34320 * a4) * D1) / (121275 * a2 * b);
            matrixK[15][27] = -(1144 * a2 * b2 * D3 + 572 * a2 * b2 * D2 + (126 * b4 + 4752 * a4) * D1) / (72765 * a * b);
            matrixK[15][28] = 0;
            matrixK[15][29] = 0;
            matrixK[15][30] = (19712 * a2 * b2 * D3 + 9856 * a2 * b2 * D2 + (6720 * b4 - 137280 * a4) * D1) / (121275 * a2 * b);
            matrixK[15][31] = -(19712 * a2 * b2 * D3 + 9856 * a2 * b2 * D2 + (95040 * a4 - 6720 * b4) * D1) / (363825 * a * b);

            matrixK[16][0] = -(113520 * a2 * b2 * D3 + 56760 * a2 * b2 * D2 + (170738 * b4 + 170738 * a4) * D1) / (40425 * a3 * b3);
            matrixK[16][1] = -(20900 * a2 * b2 * D3 + 10450 * a2 * b2 * D2 + (9337 * b4 + 39911 * a4) * D1) / (40425 * a2 * b3);
            matrixK[16][2] = -(20900 * a2 * b2 * D3 + 10450 * a2 * b2 * D2 + (39911 * b4 + 9337 * a4) * D1) / (40425 * a3 * b2);
            matrixK[16][3] = -(7678 * a2 * b2 * D3 + 3839 * a2 * b2 * D2 + (3303 * b4 + 3303 * a4) * D1) / (80850 * a2 * b2);
            matrixK[16][4] = (6144 * a2 * b2 * D3 + 3072 * a2 * b2 * D2 + (-6912 * b4 - 400 * a4) * D1) / (525 * a3 * b3);
            matrixK[16][5] = (86592 * a2 * b2 * D3 + 43296 * a2 * b2 * D2 + (-285120 * b4 - 5600 * a4) * D1) / (40425 * a2 * b3);
            matrixK[16][6] = (512 * a2 * b2 * D3 + 256 * a2 * b2 * D2 + (-1664 * b4 - 200 * a4) * D1) / (525 * a3 * b2);
            matrixK[16][7] = (528 * a2 * b2 * D3 + 264 * a2 * b2 * D2 + (-13728 * b4 - 560 * a4) * D1) / (8085 * a2 * b2);
            matrixK[16][8] = -(359568 * a2 * b2 * D3 + 179784 * a2 * b2 * D2 + (539972 * a4 - 702962 * b4) * D1) / (40425 * a3 * b3);
            matrixK[16][9] = (23452 * a2 * b2 * D3 + 20196 * a2 * b2 * D2 + (69814 * a4 - 142393 * b4) * D1) / (40425 * a2 * b3);
            matrixK[16][10] = -(18524 * a2 * b2 * D3 + 9262 * a2 * b2 * D2 + (50338 * a4 - 168039 * b4) * D1) / (40425 * a3 * b2);
            matrixK[16][11] = (4642 * a2 * b2 * D3 + 1166 * a2 * b2 * D2 + (7862 * a4 - 67367 * b4) * D1) / (80850 * a2 * b2);
            matrixK[16][12] = -(6144 * a2 * b2 * D3 + 3072 * a2 * b2 * D2 + (19968 * a4 - 400 * b4) * D1) / (525 * a3 * b3);
            matrixK[16][13] = (512 * a2 * b2 * D3 + 1536 * a2 * b2 * D2 + (2816 * a4 - 200 * b4) * D1) / (525 * a2 * b3);
            matrixK[16][14] = -(86592 * a2 * b2 * D3 + 43296 * a2 * b2 * D2 + (823680 * a4 - 5600 * b4) * D1) / (40425 * a3 * b2);
            matrixK[16][15] = (22352 * a2 * b2 * D3 + 26576 * a2 * b2 * D2 + (116160 * a4 - 2800 * b4) * D1) / (40425 * a2 * b2);
            matrixK[16][16] = (832656 * a2 * b2 * D3 + 416328 * a2 * b2 * D2 + (2077508 * b4 + 2077508 * a4) * D1) / (40425 * a3 * b3);
            matrixK[16][17] = -(62876 * a2 * b2 * D3 + 138468 * a2 * b2 * D2 + (434722 * b4 + 286646 * a4) * D1) / (40425 * a2 * b3);
            matrixK[16][18] = -(62876 * a2 * b2 * D3 + 138468 * a2 * b2 * D2 + (286646 * b4 + 434722 * a4) * D1) / (40425 * a3 * b2);
            matrixK[16][19] = (16962 * a2 * b2 * D3 + 18491 * a2 * b2 * D2 + (116278 * b4 + 116278 * a4) * D1) / (80850 * a2 * b2);
            matrixK[16][20] = -(6144 * a2 * b2 * D3 + 3072 * a2 * b2 * D2 + (19968 * b4 - 400 * a4) * D1) / (525 * a3 * b3);
            matrixK[16][21] = -(86592 * a2 * b2 * D3 + 43296 * a2 * b2 * D2 + (823680 * b4 - 5600 * a4) * D1) / (40425 * a2 * b3);
            matrixK[16][22] = (512 * a2 * b2 * D3 + 1536 * a2 * b2 * D2 + (2816 * b4 - 200 * a4) * D1) / (525 * a3 * b2);
            matrixK[16][23] = (22352 * a2 * b2 * D3 + 26576 * a2 * b2 * D2 + (116160 * b4 - 2800 * a4) * D1) / (40425 * a2 * b2);
            matrixK[16][24] = -(359568 * a2 * b2 * D3 + 179784 * a2 * b2 * D2 + (539972 * b4 - 702962 * a4) * D1) / (40425 * a3 * b3);
            matrixK[16][25] = -(18524 * a2 * b2 * D3 + 9262 * a2 * b2 * D2 + (50338 * b4 - 168039 * a4) * D1) / (40425 * a2 * b3);
            matrixK[16][26] = (23452 * a2 * b2 * D3 + 20196 * a2 * b2 * D2 + (69814 * b4 - 142393 * a4) * D1) / (40425 * a3 * b2);
            matrixK[16][27] = (4642 * a2 * b2 * D3 + 1166 * a2 * b2 * D2 + (7862 * b4 - 67367 * a4) * D1) / (80850 * a2 * b2);
            matrixK[16][28] = (6144 * a2 * b2 * D3 + 3072 * a2 * b2 * D2 + (-400 * b4 - 6912 * a4) * D1) / (525 * a3 * b3);
            matrixK[16][29] = (512 * a2 * b2 * D3 + 256 * a2 * b2 * D2 + (-200 * b4 - 1664 * a4) * D1) / (525 * a2 * b3);
            matrixK[16][30] = (86592 * a2 * b2 * D3 + 43296 * a2 * b2 * D2 + (-5600 * b4 - 285120 * a4) * D1) / (40425 * a3 * b2);
            matrixK[16][31] = (528 * a2 * b2 * D3 + 264 * a2 * b2 * D2 + (-560 * b4 - 13728 * a4) * D1) / (8085 * a2 * b2);

            matrixK[17][0] = (20900 * a2 * b2 * D3 + 10450 * a2 * b2 * D2 + (9337 * b4 + 39911 * a4) * D1) / (40425 * a2 * b3);
            matrixK[17][1] = (1276 * a2 * b2 * D3 + 638 * a2 * b2 * D2 + (27243 * a4 - 9671 * b4) * D1) / (121275 * a * b3);
            matrixK[17][2] = (506 * a2 * b2 * D3 + 253 * a2 * b2 * D2 + (9909 * b4 + 9909 * a4) * D1) / (242550 * a2 * b2);
            matrixK[17][3] = -(4334 * a2 * b2 * D3 + 2167 * a2 * b2 * D2 + (5849 * b4 - 1899 * a4) * D1) / (242550 * a * b2);
            matrixK[17][4] = -(576 * a2 * b2 * D3 + 288 * a2 * b2 * D2 + (-1728 * b4 - 40 * a4) * D1) / (525 * a2 * b3);
            matrixK[17][5] = -(3872 * a2 * b2 * D3 + 1936 * a2 * b2 * D2 + (-47520 * b4 - 420 * a4) * D1) / (40425 * a * b3);
            matrixK[17][6] = (272 * a2 * b2 * D3 + 136 * a2 * b2 * D2 + (1248 * b4 + 60 * a4) * D1) / (1575 * a2 * b2);
            matrixK[17][7] = (5896 * a2 * b2 * D3 + 2948 * a2 * b2 * D2 + (34320 * b4 + 630 * a4) * D1) / (121275 * a * b2);
            matrixK[17][8] = (23452 * a2 * b2 * D3 + 20196 * a2 * b2 * D2 + (69814 * a4 - 142393 * b4) * D1) / (40425 * a2 * b3);
            matrixK[17][9] = (6512 * a2 * b2 * D3 + 3256 * a2 * b2 * D2 + (94706 * b4 - 36744 * a4) * D1) / (121275 * a * b3);
            matrixK[17][10] = -(42394 * a2 * b2 * D3 + 24662 * a2 * b2 * D2 + (202101 * b4 - 23586 * a4) * D1) / (242550 * a2 * b2);
            matrixK[17][11] = (6996 * a2 * b2 * D3 + 3498 * a2 * b2 * D2 + (21607 * b4 - 1476 * a4) * D1) / (121275 * a * b2);
            matrixK[17][12] = (512 * a2 * b2 * D3 + 1536 * a2 * b2 * D2 + (2816 * a4 - 200 * b4) * D1) / (525 * a2 * b3);
            matrixK[17][13] = -(2048 * a2 * b2 * D3 + 1024 * a2 * b2 * D2 + (1536 * a4 - 400 * b4) * D1) / (1575 * a * b3);
            matrixK[17][14] = (8272 * a2 * b2 * D3 + 19536 * a2 * b2 * D2 + (116160 * a4 - 2800 * b4) * D1) / (40425 * a2 * b2);
            matrixK[17][15] = -(7040 * a2 * b2 * D3 + 3520 * a2 * b2 * D2 + (12672 * a4 - 1120 * b4) * D1) / (24255 * a * b2);
            matrixK[17][16] = -(62876 * a2 * b2 * D3 + 138468 * a2 * b2 * D2 + (434722 * b4 + 286646 * a4) * D1) / (40425 * a2 * b3);
            matrixK[17][17] = (151184 * a2 * b2 * D3 + 75592 * a2 * b2 * D2 + (320324 * b4 + 155016 * a4) * D1) / (121275 * a * b3);
            matrixK[17][18] = (191686 * a2 * b2 * D3 + 368423 * a2 * b2 * D2 + (348834 * b4 + 348834 * a4) * D1) / (242550 * a2 * b2);
            matrixK[17][19] = -(22572 * a2 * b2 * D3 + 16676 * a2 * b2 * D2 + (38838 * b4 + 31044 * a4) * D1) / (121275 * a * b2);
            matrixK[17][20] = (576 * a2 * b2 * D3 + 288 * a2 * b2 * D2 + (4992 * b4 - 40 * a4) * D1) / (525 * a2 * b3);
            matrixK[17][21] = (3872 * a2 * b2 * D3 + 1936 * a2 * b2 * D2 + (137280 * b4 - 420 * a4) * D1) / (40425 * a * b3);
            matrixK[17][22] = -(1520 * a2 * b2 * D3 + 880 * a2 * b2 * D2 + (2112 * b4 - 60 * a4) * D1) / (1575 * a2 * b2);
            matrixK[17][23] = -(23672 * a2 * b2 * D3 + 10296 * a2 * b2 * D2 + (58080 * b4 - 630 * a4) * D1) / (121275 * a * b2);
            matrixK[17][24] = (18524 * a2 * b2 * D3 + 9262 * a2 * b2 * D2 + (50338 * b4 - 168039 * a4) * D1) / (40425 * a2 * b3);
            matrixK[17][25] = -(40700 * a2 * b2 * D3 + 20350 * a2 * b2 * D2 + (4574 * b4 + 115947 * a4) * D1) / (121275 * a * b3);
            matrixK[17][26] = (42394 * a2 * b2 * D3 + 24662 * a2 * b2 * D2 + (202101 * a4 - 23586 * b4) * D1) / (242550 * a2 * b2);
            matrixK[17][27] = (17842 * a2 * b2 * D3 + 10846 * a2 * b2 * D2 + (7626 * b4 + 46251 * a4) * D1) / (242550 * a * b2);
            matrixK[17][28] = -(512 * a2 * b2 * D3 + 256 * a2 * b2 * D2 + (-200 * b4 - 1664 * a4) * D1) / (525 * a2 * b3);
            matrixK[17][29] = (512 * a2 * b2 * D3 + 256 * a2 * b2 * D2 + (200 * b4 + 1152 * a4) * D1) / (1575 * a * b3);
            matrixK[17][30] = -(8272 * a2 * b2 * D3 + 4136 * a2 * b2 * D2 + (-2800 * b4 - 68640 * a4) * D1) / (40425 * a2 * b2);
            matrixK[17][31] = (10384 * a2 * b2 * D3 + 5192 * a2 * b2 * D2 + (2800 * b4 + 47520 * a4) * D1) / (121275 * a * b2);

            matrixK[18][0] = (20900 * a2 * b2 * D3 + 10450 * a2 * b2 * D2 + (39911 * b4 + 9337 * a4) * D1) / (40425 * a3 * b2);
            matrixK[18][1] = (506 * a2 * b2 * D3 + 253 * a2 * b2 * D2 + (9909 * b4 + 9909 * a4) * D1) / (242550 * a2 * b2);
            matrixK[18][2] = (1276 * a2 * b2 * D3 + 638 * a2 * b2 * D2 + (27243 * b4 - 9671 * a4) * D1) / (121275 * a3 * b);
            matrixK[18][3] = -(4334 * a2 * b2 * D3 + 2167 * a2 * b2 * D2 + (5849 * a4 - 1899 * b4) * D1) / (242550 * a2 * b);
            matrixK[18][4] = -(512 * a2 * b2 * D3 + 256 * a2 * b2 * D2 + (-1664 * b4 - 200 * a4) * D1) / (525 * a3 * b2);
            matrixK[18][5] = -(8272 * a2 * b2 * D3 + 4136 * a2 * b2 * D2 + (-68640 * b4 - 2800 * a4) * D1) / (40425 * a2 * b2);
            matrixK[18][6] = (512 * a2 * b2 * D3 + 256 * a2 * b2 * D2 + (1152 * b4 + 200 * a4) * D1) / (1575 * a3 * b);
            matrixK[18][7] = (10384 * a2 * b2 * D3 + 5192 * a2 * b2 * D2 + (47520 * b4 + 2800 * a4) * D1) / (121275 * a2 * b);
            matrixK[18][8] = (18524 * a2 * b2 * D3 + 9262 * a2 * b2 * D2 + (50338 * a4 - 168039 * b4) * D1) / (40425 * a3 * b2);
            matrixK[18][9] = (42394 * a2 * b2 * D3 + 24662 * a2 * b2 * D2 + (202101 * b4 - 23586 * a4) * D1) / (242550 * a2 * b2);
            matrixK[18][10] = -(40700 * a2 * b2 * D3 + 20350 * a2 * b2 * D2 + (115947 * b4 + 4574 * a4) * D1) / (121275 * a3 * b);
            matrixK[18][11] = (17842 * a2 * b2 * D3 + 10846 * a2 * b2 * D2 + (46251 * b4 + 7626 * a4) * D1) / (242550 * a2 * b);
            matrixK[18][12] = (576 * a2 * b2 * D3 + 288 * a2 * b2 * D2 + (4992 * a4 - 40 * b4) * D1) / (525 * a3 * b2);
            matrixK[18][13] = -(1520 * a2 * b2 * D3 + 880 * a2 * b2 * D2 + (2112 * a4 - 60 * b4) * D1) / (1575 * a2 * b2);
            matrixK[18][14] = (3872 * a2 * b2 * D3 + 1936 * a2 * b2 * D2 + (137280 * a4 - 420 * b4) * D1) / (40425 * a3 * b);
            matrixK[18][15] = -(23672 * a2 * b2 * D3 + 10296 * a2 * b2 * D2 + (58080 * a4 - 630 * b4) * D1) / (121275 * a2 * b);
            matrixK[18][16] = -(62876 * a2 * b2 * D3 + 138468 * a2 * b2 * D2 + (286646 * b4 + 434722 * a4) * D1) / (40425 * a3 * b2);
            matrixK[18][17] = (191686 * a2 * b2 * D3 + 368423 * a2 * b2 * D2 + (348834 * b4 + 348834 * a4) * D1) / (242550 * a2 * b2);
            matrixK[18][18] = (151184 * a2 * b2 * D3 + 75592 * a2 * b2 * D2 + (155016 * b4 + 320324 * a4) * D1) / (121275 * a3 * b);
            matrixK[18][19] = -(22572 * a2 * b2 * D3 + 16676 * a2 * b2 * D2 + (31044 * b4 + 38838 * a4) * D1) / (121275 * a2 * b);
            matrixK[18][20] = (512 * a2 * b2 * D3 + 1536 * a2 * b2 * D2 + (2816 * b4 - 200 * a4) * D1) / (525 * a3 * b2);
            matrixK[18][21] = (8272 * a2 * b2 * D3 + 19536 * a2 * b2 * D2 + (116160 * b4 - 2800 * a4) * D1) / (40425 * a2 * b2);
            matrixK[18][22] = -(2048 * a2 * b2 * D3 + 1024 * a2 * b2 * D2 + (1536 * b4 - 400 * a4) * D1) / (1575 * a3 * b);
            matrixK[18][23] = -(7040 * a2 * b2 * D3 + 3520 * a2 * b2 * D2 + (12672 * b4 - 1120 * a4) * D1) / (24255 * a2 * b);
            matrixK[18][24] = (23452 * a2 * b2 * D3 + 20196 * a2 * b2 * D2 + (69814 * b4 - 142393 * a4) * D1) / (40425 * a3 * b2);
            matrixK[18][25] = -(42394 * a2 * b2 * D3 + 24662 * a2 * b2 * D2 + (202101 * a4 - 23586 * b4) * D1) / (242550 * a2 * b2);
            matrixK[18][26] = (6512 * a2 * b2 * D3 + 3256 * a2 * b2 * D2 + (94706 * a4 - 36744 * b4) * D1) / (121275 * a3 * b);
            matrixK[18][27] = (6996 * a2 * b2 * D3 + 3498 * a2 * b2 * D2 + (21607 * a4 - 1476 * b4) * D1) / (121275 * a2 * b);
            matrixK[18][28] = -(576 * a2 * b2 * D3 + 288 * a2 * b2 * D2 + (-40 * b4 - 1728 * a4) * D1) / (525 * a3 * b2);
            matrixK[18][29] = (272 * a2 * b2 * D3 + 136 * a2 * b2 * D2 + (60 * b4 + 1248 * a4) * D1) / (1575 * a2 * b2);
            matrixK[18][30] = -(3872 * a2 * b2 * D3 + 1936 * a2 * b2 * D2 + (-420 * b4 - 47520 * a4) * D1) / (40425 * a3 * b);
            matrixK[18][31] = (5896 * a2 * b2 * D3 + 2948 * a2 * b2 * D2 + (630 * b4 + 34320 * a4) * D1) / (121275 * a2 * b);

            matrixK[19][0] = -(7678 * a2 * b2 * D3 + 3839 * a2 * b2 * D2 + (3303 * b4 + 3303 * a4) * D1) / (80850 * a2 * b2);
            matrixK[19][1] = (4334 * a2 * b2 * D3 + 2167 * a2 * b2 * D2 + (5849 * b4 - 1899 * a4) * D1) / (242550 * a * b2);
            matrixK[19][2] = (4334 * a2 * b2 * D3 + 2167 * a2 * b2 * D2 + (5849 * a4 - 1899 * b4) * D1) / (242550 * a2 * b);
            matrixK[19][3] = (6754 * a2 * b2 * D3 + 3377 * a2 * b2 * D2 + (4437 * b4 + 4437 * a4) * D1) / (727650 * a * b);
            matrixK[19][4] = (80 * a2 * b2 * D3 + 40 * a2 * b2 * D2 + (-416 * b4 - 20 * a4) * D1) / (525 * a2 * b2);
            matrixK[19][5] = (2552 * a2 * b2 * D3 + 1276 * a2 * b2 * D2 + (-34320 * b4 - 630 * a4) * D1) / (121275 * a * b2);
            matrixK[19][6] = -(144 * a2 * b2 * D3 + 72 * a2 * b2 * D2 + (288 * b4 + 20 * a4) * D1) / (1575 * a2 * b);
            matrixK[19][7] = -(1144 * a2 * b2 * D3 + 572 * a2 * b2 * D2 + (4752 * b4 + 126 * a4) * D1) / (72765 * a * b);
            matrixK[19][8] = -(4642 * a2 * b2 * D3 + 1166 * a2 * b2 * D2 + (7862 * a4 - 67367 * b4) * D1) / (80850 * a2 * b2);
            matrixK[19][9] = -(6996 * a2 * b2 * D3 + 3498 * a2 * b2 * D2 + (21607 * b4 - 1476 * a4) * D1) / (121275 * a * b2);
            matrixK[19][10] = (17842 * a2 * b2 * D3 + 10846 * a2 * b2 * D2 + (46251 * b4 + 7626 * a4) * D1) / (242550 * a2 * b);
            matrixK[19][11] = -(2596 * a2 * b2 * D3 + 1298 * a2 * b2 * D2 + (4857 * b4 + 916 * a4) * D1) / (121275 * a * b);
            matrixK[19][12] = -(80 * a2 * b2 * D3 + 80 * a2 * b2 * D2 + (704 * a4 - 20 * b4) * D1) / (525 * a2 * b2);
            matrixK[19][13] = (384 * a2 * b2 * D3 + 192 * a2 * b2 * D2 + (384 * a4 - 40 * b4) * D1) / (1575 * a * b2);
            matrixK[19][14] = -(2552 * a2 * b2 * D3 - 264 * a2 * b2 * D2 + (58080 * a4 - 630 * b4) * D1) / (121275 * a2 * b);
            matrixK[19][15] = (13376 * a2 * b2 * D3 + 6688 * a2 * b2 * D2 + (31680 * a4 - 1260 * b4) * D1) / (363825 * a * b);
            matrixK[19][16] = (16962 * a2 * b2 * D3 + 18491 * a2 * b2 * D2 + (116278 * b4 + 116278 * a4) * D1) / (80850 * a2 * b2);
            matrixK[19][17] = -(22572 * a2 * b2 * D3 + 16676 * a2 * b2 * D2 + (38838 * b4 + 31044 * a4) * D1) / (121275 * a * b2);
            matrixK[19][18] = -(22572 * a2 * b2 * D3 + 16676 * a2 * b2 * D2 + (31044 * b4 + 38838 * a4) * D1) / (121275 * a2 * b);
            matrixK[19][19] = (17776 * a2 * b2 * D3 + 8888 * a2 * b2 * D2 + (19848 * b4 + 19848 * a4) * D1) / (363825 * a * b);
            matrixK[19][20] = -(80 * a2 * b2 * D3 + 80 * a2 * b2 * D2 + (704 * b4 - 20 * a4) * D1) / (525 * a2 * b2);
            matrixK[19][21] = -(2552 * a2 * b2 * D3 - 264 * a2 * b2 * D2 + (58080 * b4 - 630 * a4) * D1) / (121275 * a * b2);
            matrixK[19][22] = (384 * a2 * b2 * D3 + 192 * a2 * b2 * D2 + (384 * b4 - 40 * a4) * D1) / (1575 * a2 * b);
            matrixK[19][23] = (13376 * a2 * b2 * D3 + 6688 * a2 * b2 * D2 + (31680 * b4 - 1260 * a4) * D1) / (363825 * a * b);
            matrixK[19][24] = -(4642 * a2 * b2 * D3 + 1166 * a2 * b2 * D2 + (7862 * b4 - 67367 * a4) * D1) / (80850 * a2 * b2);
            matrixK[19][25] = (17842 * a2 * b2 * D3 + 10846 * a2 * b2 * D2 + (7626 * b4 + 46251 * a4) * D1) / (242550 * a * b2);
            matrixK[19][26] = -(6996 * a2 * b2 * D3 + 3498 * a2 * b2 * D2 + (21607 * a4 - 1476 * b4) * D1) / (121275 * a2 * b);
            matrixK[19][27] = -(2596 * a2 * b2 * D3 + 1298 * a2 * b2 * D2 + (916 * b4 + 4857 * a4) * D1) / (121275 * a * b);
            matrixK[19][28] = (80 * a2 * b2 * D3 + 40 * a2 * b2 * D2 + (-20 * b4 - 416 * a4) * D1) / (525 * a2 * b2);
            matrixK[19][29] = -(144 * a2 * b2 * D3 + 72 * a2 * b2 * D2 + (20 * b4 + 288 * a4) * D1) / (1575 * a * b2);
            matrixK[19][30] = (2552 * a2 * b2 * D3 + 1276 * a2 * b2 * D2 + (-630 * b4 - 34320 * a4) * D1) / (121275 * a2 * b);
            matrixK[19][31] = -(1144 * a2 * b2 * D3 + 572 * a2 * b2 * D2 + (126 * b4 + 4752 * a4) * D1) / (72765 * a * b);

            matrixK[20][0] = (6144 * a2 * b2 * D3 + 3072 * a2 * b2 * D2 + (-6912 * b4 - 400 * a4) * D1) / (525 * a3 * b3);
            matrixK[20][1] = (576 * a2 * b2 * D3 + 288 * a2 * b2 * D2 + (-1728 * b4 - 40 * a4) * D1) / (525 * a2 * b3);
            matrixK[20][2] = (512 * a2 * b2 * D3 + 256 * a2 * b2 * D2 + (-1664 * b4 - 200 * a4) * D1) / (525 * a3 * b2);
            matrixK[20][3] = (80 * a2 * b2 * D3 + 40 * a2 * b2 * D2 + (-416 * b4 - 20 * a4) * D1) / (525 * a2 * b2);
            matrixK[20][4] = -(12288 * a2 * b2 * D3 + 6144 * a2 * b2 * D2 + (2560 * a4 - 13824 * b4) * D1) / (525 * a3 * b3);
            matrixK[20][5] = 0;
            matrixK[20][6] = -(1024 * a2 * b2 * D3 + 512 * a2 * b2 * D2 + (1280 * a4 - 3328 * b4) * D1) / (525 * a3 * b2);
            matrixK[20][7] = 0;
            matrixK[20][8] = (6144 * a2 * b2 * D3 + 3072 * a2 * b2 * D2 + (-6912 * b4 - 400 * a4) * D1) / (525 * a3 * b3);
            matrixK[20][9] = -(576 * a2 * b2 * D3 + 288 * a2 * b2 * D2 + (-1728 * b4 - 40 * a4) * D1) / (525 * a2 * b3);
            matrixK[20][10] = (512 * a2 * b2 * D3 + 256 * a2 * b2 * D2 + (-1664 * b4 - 200 * a4) * D1) / (525 * a3 * b2);
            matrixK[20][11] = -(80 * a2 * b2 * D3 + 40 * a2 * b2 * D2 + (-416 * b4 - 20 * a4) * D1) / (525 * a2 * b2);
            matrixK[20][12] = 0;
            matrixK[20][13] = 0;
            matrixK[20][14] = 0;
            matrixK[20][15] = -(256 * D3 + 128 * D2) / 525;
            matrixK[20][16] = -(6144 * a2 * b2 * D3 + 3072 * a2 * b2 * D2 + (19968 * b4 - 400 * a4) * D1) / (525 * a3 * b3);
            matrixK[20][17] = (576 * a2 * b2 * D3 + 288 * a2 * b2 * D2 + (4992 * b4 - 40 * a4) * D1) / (525 * a2 * b3);
            matrixK[20][18] = (512 * a2 * b2 * D3 + 1536 * a2 * b2 * D2 + (2816 * b4 - 200 * a4) * D1) / (525 * a3 * b2);
            matrixK[20][19] = -(80 * a2 * b2 * D3 + 80 * a2 * b2 * D2 + (704 * b4 - 20 * a4) * D1) / (525 * a2 * b2);
            matrixK[20][20] = (12288 * a2 * b2 * D3 + 6144 * a2 * b2 * D2 + (39936 * b4 + 2560 * a4) * D1) / (525 * a3 * b3);
            matrixK[20][21] = 0;
            matrixK[20][22] = -(1024 * a2 * b2 * D3 + 3072 * a2 * b2 * D2 + (5632 * b4 + 1280 * a4) * D1) / (525 * a3 * b2);
            matrixK[20][23] = 0;
            matrixK[20][24] = -(6144 * a2 * b2 * D3 + 3072 * a2 * b2 * D2 + (19968 * b4 - 400 * a4) * D1) / (525 * a3 * b3);
            matrixK[20][25] = -(576 * a2 * b2 * D3 + 288 * a2 * b2 * D2 + (4992 * b4 - 40 * a4) * D1) / (525 * a2 * b3);
            matrixK[20][26] = (512 * a2 * b2 * D3 + 1536 * a2 * b2 * D2 + (2816 * b4 - 200 * a4) * D1) / (525 * a3 * b2);
            matrixK[20][27] = (80 * a2 * b2 * D3 + 80 * a2 * b2 * D2 + (704 * b4 - 20 * a4) * D1) / (525 * a2 * b2);
            matrixK[20][28] = 0;
            matrixK[20][29] = 0;
            matrixK[20][30] = 0;
            matrixK[20][31] = (256 * D3 + 128 * D2) / 525;

            matrixK[21][0] = -(86592 * a2 * b2 * D3 + 43296 * a2 * b2 * D2 + (-285120 * b4 - 5600 * a4) * D1) / (40425 * a2 * b3);
            matrixK[21][1] = -(3872 * a2 * b2 * D3 + 1936 * a2 * b2 * D2 + (-47520 * b4 - 420 * a4) * D1) / (40425 * a * b3);
            matrixK[21][2] = -(8272 * a2 * b2 * D3 + 4136 * a2 * b2 * D2 + (-68640 * b4 - 2800 * a4) * D1) / (40425 * a2 * b2);
            matrixK[21][3] = -(2552 * a2 * b2 * D3 + 1276 * a2 * b2 * D2 + (-34320 * b4 - 630 * a4) * D1) / (121275 * a * b2);
            matrixK[21][4] = 0;
            matrixK[21][5] = -(78848 * a2 * b2 * D3 + 39424 * a2 * b2 * D2 + (4480 * a4 - 190080 * b4) * D1) / (40425 * a * b3);
            matrixK[21][6] = 0;
            matrixK[21][7] = -(19712 * a2 * b2 * D3 + 9856 * a2 * b2 * D2 + (6720 * a4 - 137280 * b4) * D1) / (121275 * a * b2);
            matrixK[21][8] = (86592 * a2 * b2 * D3 + 43296 * a2 * b2 * D2 + (-285120 * b4 - 5600 * a4) * D1) / (40425 * a2 * b3);
            matrixK[21][9] = -(3872 * a2 * b2 * D3 + 1936 * a2 * b2 * D2 + (-47520 * b4 - 420 * a4) * D1) / (40425 * a * b3);
            matrixK[21][10] = (8272 * a2 * b2 * D3 + 4136 * a2 * b2 * D2 + (-68640 * b4 - 2800 * a4) * D1) / (40425 * a2 * b2);
            matrixK[21][11] = -(2552 * a2 * b2 * D3 + 1276 * a2 * b2 * D2 + (-34320 * b4 - 630 * a4) * D1) / (121275 * a * b2);
            matrixK[21][12] = 0;
            matrixK[21][13] = 0;
            matrixK[21][14] = (256 * D3 + 128 * D2) / 1225;
            matrixK[21][15] = -(128 * a * D3 + 64 * a * D2) / 1225;
            matrixK[21][16] = -(86592 * a2 * b2 * D3 + 43296 * a2 * b2 * D2 + (823680 * b4 - 5600 * a4) * D1) / (40425 * a2 * b3);
            matrixK[21][17] = (3872 * a2 * b2 * D3 + 1936 * a2 * b2 * D2 + (137280 * b4 - 420 * a4) * D1) / (40425 * a * b3);
            matrixK[21][18] = (8272 * a2 * b2 * D3 + 19536 * a2 * b2 * D2 + (116160 * b4 - 2800 * a4) * D1) / (40425 * a2 * b2);
            matrixK[21][19] = -(2552 * a2 * b2 * D3 - 264 * a2 * b2 * D2 + (58080 * b4 - 630 * a4) * D1) / (121275 * a * b2);
            matrixK[21][20] = 0;
            matrixK[21][21] = (78848 * a2 * b2 * D3 + 39424 * a2 * b2 * D2 + (549120 * b4 + 4480 * a4) * D1) / (40425 * a * b3);
            matrixK[21][22] = 0;
            matrixK[21][23] = -(19712 * a2 * b2 * D3 + 59136 * a2 * b2 * D2 + (232320 * b4 + 6720 * a4) * D1) / (121275 * a * b2);
            matrixK[21][24] = (86592 * a2 * b2 * D3 + 43296 * a2 * b2 * D2 + (823680 * b4 - 5600 * a4) * D1) / (40425 * a2 * b3);
            matrixK[21][25] = (3872 * a2 * b2 * D3 + 1936 * a2 * b2 * D2 + (137280 * b4 - 420 * a4) * D1) / (40425 * a * b3);
            matrixK[21][26] = -(8272 * a2 * b2 * D3 + 19536 * a2 * b2 * D2 + (116160 * b4 - 2800 * a4) * D1) / (40425 * a2 * b2);
            matrixK[21][27] = -(2552 * a2 * b2 * D3 - 264 * a2 * b2 * D2 + (58080 * b4 - 630 * a4) * D1) / (121275 * a * b2);
            matrixK[21][28] = 0;
            matrixK[21][29] = 0;
            matrixK[21][30] = -(256 * D3 + 128 * D2) / 1225;
            matrixK[21][31] = -(128 * a * D3 + 64 * a * D2) / 1225;

            matrixK[22][0] = -(512 * a2 * b2 * D3 + 256 * a2 * b2 * D2 + (-1664 * b4 - 200 * a4) * D1) / (525 * a3 * b2);
            matrixK[22][1] = (272 * a2 * b2 * D3 + 136 * a2 * b2 * D2 + (1248 * b4 + 60 * a4) * D1) / (1575 * a2 * b2);
            matrixK[22][2] = (512 * a2 * b2 * D3 + 256 * a2 * b2 * D2 + (1152 * b4 + 200 * a4) * D1) / (1575 * a3 * b);
            matrixK[22][3] = (144 * a2 * b2 * D3 + 72 * a2 * b2 * D2 + (288 * b4 + 20 * a4) * D1) / (1575 * a2 * b);
            matrixK[22][4] = (1024 * a2 * b2 * D3 + 512 * a2 * b2 * D2 + (1280 * a4 - 3328 * b4) * D1) / (525 * a3 * b2);
            matrixK[22][5] = 0;
            matrixK[22][6] = -(1024 * a2 * b2 * D3 + 512 * a2 * b2 * D2 + (2304 * b4 - 1280 * a4) * D1) / (1575 * a3 * b);
            matrixK[22][7] = 0;
            matrixK[22][8] = -(512 * a2 * b2 * D3 + 256 * a2 * b2 * D2 + (-1664 * b4 - 200 * a4) * D1) / (525 * a3 * b2);
            matrixK[22][9] = -(272 * a2 * b2 * D3 + 136 * a2 * b2 * D2 + (1248 * b4 + 60 * a4) * D1) / (1575 * a2 * b2);
            matrixK[22][10] = (512 * a2 * b2 * D3 + 256 * a2 * b2 * D2 + (1152 * b4 + 200 * a4) * D1) / (1575 * a3 * b);
            matrixK[22][11] = -(144 * a2 * b2 * D3 + 72 * a2 * b2 * D2 + (288 * b4 + 20 * a4) * D1) / (1575 * a2 * b);
            matrixK[22][12] = 0;
            matrixK[22][13] = (256 * D3 + 128 * D2) / 225;
            matrixK[22][14] = 0;
            matrixK[22][15] = (128 * b * D3 + 64 * b * D2) / 525;
            matrixK[22][16] = (512 * a2 * b2 * D3 + 1536 * a2 * b2 * D2 + (2816 * b4 - 200 * a4) * D1) / (525 * a3 * b2);
            matrixK[22][17] = -(1520 * a2 * b2 * D3 + 880 * a2 * b2 * D2 + (2112 * b4 - 60 * a4) * D1) / (1575 * a2 * b2);
            matrixK[22][18] = -(2048 * a2 * b2 * D3 + 1024 * a2 * b2 * D2 + (1536 * b4 - 400 * a4) * D1) / (1575 * a3 * b);
            matrixK[22][19] = (384 * a2 * b2 * D3 + 192 * a2 * b2 * D2 + (384 * b4 - 40 * a4) * D1) / (1575 * a2 * b);
            matrixK[22][20] = -(1024 * a2 * b2 * D3 + 3072 * a2 * b2 * D2 + (5632 * b4 + 1280 * a4) * D1) / (525 * a3 * b2);
            matrixK[22][21] = 0;
            matrixK[22][22] = (4096 * a2 * b2 * D3 + 2048 * a2 * b2 * D2 + (3072 * b4 + 2560 * a4) * D1) / (1575 * a3 * b);
            matrixK[22][23] = 0;
            matrixK[22][24] = (512 * a2 * b2 * D3 + 1536 * a2 * b2 * D2 + (2816 * b4 - 200 * a4) * D1) / (525 * a3 * b2);
            matrixK[22][25] = (1520 * a2 * b2 * D3 + 880 * a2 * b2 * D2 + (2112 * b4 - 60 * a4) * D1) / (1575 * a2 * b2);
            matrixK[22][26] = -(2048 * a2 * b2 * D3 + 1024 * a2 * b2 * D2 + (1536 * b4 - 400 * a4) * D1) / (1575 * a3 * b);
            matrixK[22][27] = -(384 * a2 * b2 * D3 + 192 * a2 * b2 * D2 + (384 * b4 - 40 * a4) * D1) / (1575 * a2 * b);
            matrixK[22][28] = 0;
            matrixK[22][29] = -(256 * D3 + 128 * D2) / 225;
            matrixK[22][30] = 0;
            matrixK[22][31] = -(128 * b * D3 + 64 * b * D2) / 525;

            matrixK[23][0] = (528 * a2 * b2 * D3 + 264 * a2 * b2 * D2 + (-13728 * b4 - 560 * a4) * D1) / (8085 * a2 * b2);
            matrixK[23][1] = -(5896 * a2 * b2 * D3 + 2948 * a2 * b2 * D2 + (34320 * b4 + 630 * a4) * D1) / (121275 * a * b2);
            matrixK[23][2] = -(10384 * a2 * b2 * D3 + 5192 * a2 * b2 * D2 + (47520 * b4 + 2800 * a4) * D1) / (121275 * a2 * b);
            matrixK[23][3] = -(1144 * a2 * b2 * D3 + 572 * a2 * b2 * D2 + (4752 * b4 + 126 * a4) * D1) / (72765 * a * b);
            matrixK[23][4] = 0;
            matrixK[23][5] = (19712 * a2 * b2 * D3 + 9856 * a2 * b2 * D2 + (6720 * a4 - 137280 * b4) * D1) / (121275 * a * b2);
            matrixK[23][6] = 0;
            matrixK[23][7] = -(19712 * a2 * b2 * D3 + 9856 * a2 * b2 * D2 + (95040 * b4 - 6720 * a4) * D1) / (363825 * a * b);
            matrixK[23][8] = -(528 * a2 * b2 * D3 + 264 * a2 * b2 * D2 + (-13728 * b4 - 560 * a4) * D1) / (8085 * a2 * b2);
            matrixK[23][9] = -(5896 * a2 * b2 * D3 + 2948 * a2 * b2 * D2 + (34320 * b4 + 630 * a4) * D1) / (121275 * a * b2);
            matrixK[23][10] = (10384 * a2 * b2 * D3 + 5192 * a2 * b2 * D2 + (47520 * b4 + 2800 * a4) * D1) / (121275 * a2 * b);
            matrixK[23][11] = -(1144 * a2 * b2 * D3 + 572 * a2 * b2 * D2 + (4752 * b4 + 126 * a4) * D1) / (72765 * a * b);
            matrixK[23][12] = -(256 * D3 + 128 * D2) / 525;
            matrixK[23][13] = (128 * a * D3 + 64 * a * D2) / 525;
            matrixK[23][14] = -(128 * b * D3 + 64 * b * D2) / 1225;
            matrixK[23][15] = (64 * a * b * D3 + 32 * a * b * D2) / 1225;
            matrixK[23][16] = (22352 * a2 * b2 * D3 + 26576 * a2 * b2 * D2 + (116160 * b4 - 2800 * a4) * D1) / (40425 * a2 * b2);
            matrixK[23][17] = -(23672 * a2 * b2 * D3 + 10296 * a2 * b2 * D2 + (58080 * b4 - 630 * a4) * D1) / (121275 * a * b2);
            matrixK[23][18] = -(7040 * a2 * b2 * D3 + 3520 * a2 * b2 * D2 + (12672 * b4 - 1120 * a4) * D1) / (24255 * a2 * b);
            matrixK[23][19] = (13376 * a2 * b2 * D3 + 6688 * a2 * b2 * D2 + (31680 * b4 - 1260 * a4) * D1) / (363825 * a * b);
            matrixK[23][20] = 0;
            matrixK[23][21] = -(19712 * a2 * b2 * D3 + 59136 * a2 * b2 * D2 + (232320 * b4 + 6720 * a4) * D1) / (121275 * a * b2);
            matrixK[23][22] = 0;
            matrixK[23][23] = (78848 * a2 * b2 * D3 + 39424 * a2 * b2 * D2 + (126720 * b4 + 13440 * a4) * D1) / (363825 * a * b);
            matrixK[23][24] = -(22352 * a2 * b2 * D3 + 26576 * a2 * b2 * D2 + (116160 * b4 - 2800 * a4) * D1) / (40425 * a2 * b2);
            matrixK[23][25] = -(23672 * a2 * b2 * D3 + 10296 * a2 * b2 * D2 + (58080 * b4 - 630 * a4) * D1) / (121275 * a * b2);
            matrixK[23][26] = (7040 * a2 * b2 * D3 + 3520 * a2 * b2 * D2 + (12672 * b4 - 1120 * a4) * D1) / (24255 * a2 * b);
            matrixK[23][27] = (13376 * a2 * b2 * D3 + 6688 * a2 * b2 * D2 + (31680 * b4 - 1260 * a4) * D1) / (363825 * a * b);
            matrixK[23][28] = (256 * D3 + 128 * D2) / 525;
            matrixK[23][29] = (128 * a * D3 + 64 * a * D2) / 525;
            matrixK[23][30] = (128 * b * D3 + 64 * b * D2) / 1225;
            matrixK[23][31] = (64 * a * b * D3 + 32 * a * b * D2) / 1225;

            matrixK[24][0] = -(359568 * a2 * b2 * D3 + 179784 * a2 * b2 * D2 + (539972 * a4 - 702962 * b4) * D1) / (40425 * a3 * b3);
            matrixK[24][1] = -(23452 * a2 * b2 * D3 + 20196 * a2 * b2 * D2 + (69814 * a4 - 142393 * b4) * D1) / (40425 * a2 * b3);
            matrixK[24][2] = -(18524 * a2 * b2 * D3 + 9262 * a2 * b2 * D2 + (50338 * a4 - 168039 * b4) * D1) / (40425 * a3 * b2);
            matrixK[24][3] = -(4642 * a2 * b2 * D3 + 1166 * a2 * b2 * D2 + (7862 * a4 - 67367 * b4) * D1) / (80850 * a2 * b2);
            matrixK[24][4] = (6144 * a2 * b2 * D3 + 3072 * a2 * b2 * D2 + (-6912 * b4 - 400 * a4) * D1) / (525 * a3 * b3);
            matrixK[24][5] = -(86592 * a2 * b2 * D3 + 43296 * a2 * b2 * D2 + (-285120 * b4 - 5600 * a4) * D1) / (40425 * a2 * b3);
            matrixK[24][6] = (512 * a2 * b2 * D3 + 256 * a2 * b2 * D2 + (-1664 * b4 - 200 * a4) * D1) / (525 * a3 * b2);
            matrixK[24][7] = -(528 * a2 * b2 * D3 + 264 * a2 * b2 * D2 + (-13728 * b4 - 560 * a4) * D1) / (8085 * a2 * b2);
            matrixK[24][8] = -(113520 * a2 * b2 * D3 + 56760 * a2 * b2 * D2 + (170738 * b4 + 170738 * a4) * D1) / (40425 * a3 * b3);
            matrixK[24][9] = (20900 * a2 * b2 * D3 + 10450 * a2 * b2 * D2 + (9337 * b4 + 39911 * a4) * D1) / (40425 * a2 * b3);
            matrixK[24][10] = -(20900 * a2 * b2 * D3 + 10450 * a2 * b2 * D2 + (39911 * b4 + 9337 * a4) * D1) / (40425 * a3 * b2);
            matrixK[24][11] = (7678 * a2 * b2 * D3 + 3839 * a2 * b2 * D2 + (3303 * b4 + 3303 * a4) * D1) / (80850 * a2 * b2);
            matrixK[24][12] = (6144 * a2 * b2 * D3 + 3072 * a2 * b2 * D2 + (-400 * b4 - 6912 * a4) * D1) / (525 * a3 * b3);
            matrixK[24][13] = -(512 * a2 * b2 * D3 + 256 * a2 * b2 * D2 + (-200 * b4 - 1664 * a4) * D1) / (525 * a2 * b3);
            matrixK[24][14] = (86592 * a2 * b2 * D3 + 43296 * a2 * b2 * D2 + (-5600 * b4 - 285120 * a4) * D1) / (40425 * a3 * b2);
            matrixK[24][15] = -(528 * a2 * b2 * D3 + 264 * a2 * b2 * D2 + (-560 * b4 - 13728 * a4) * D1) / (8085 * a2 * b2);
            matrixK[24][16] = -(359568 * a2 * b2 * D3 + 179784 * a2 * b2 * D2 + (539972 * b4 - 702962 * a4) * D1) / (40425 * a3 * b3);
            matrixK[24][17] = (18524 * a2 * b2 * D3 + 9262 * a2 * b2 * D2 + (50338 * b4 - 168039 * a4) * D1) / (40425 * a2 * b3);
            matrixK[24][18] = (23452 * a2 * b2 * D3 + 20196 * a2 * b2 * D2 + (69814 * b4 - 142393 * a4) * D1) / (40425 * a3 * b2);
            matrixK[24][19] = -(4642 * a2 * b2 * D3 + 1166 * a2 * b2 * D2 + (7862 * b4 - 67367 * a4) * D1) / (80850 * a2 * b2);
            matrixK[24][20] = -(6144 * a2 * b2 * D3 + 3072 * a2 * b2 * D2 + (19968 * b4 - 400 * a4) * D1) / (525 * a3 * b3);
            matrixK[24][21] = (86592 * a2 * b2 * D3 + 43296 * a2 * b2 * D2 + (823680 * b4 - 5600 * a4) * D1) / (40425 * a2 * b3);
            matrixK[24][22] = (512 * a2 * b2 * D3 + 1536 * a2 * b2 * D2 + (2816 * b4 - 200 * a4) * D1) / (525 * a3 * b2);
            matrixK[24][23] = -(22352 * a2 * b2 * D3 + 26576 * a2 * b2 * D2 + (116160 * b4 - 2800 * a4) * D1) / (40425 * a2 * b2);
            matrixK[24][24] = (832656 * a2 * b2 * D3 + 416328 * a2 * b2 * D2 + (2077508 * b4 + 2077508 * a4) * D1) / (40425 * a3 * b3);
            matrixK[24][25] = (62876 * a2 * b2 * D3 + 138468 * a2 * b2 * D2 + (434722 * b4 + 286646 * a4) * D1) / (40425 * a2 * b3);
            matrixK[24][26] = -(62876 * a2 * b2 * D3 + 138468 * a2 * b2 * D2 + (286646 * b4 + 434722 * a4) * D1) / (40425 * a3 * b2);
            matrixK[24][27] = -(16962 * a2 * b2 * D3 + 18491 * a2 * b2 * D2 + (116278 * b4 + 116278 * a4) * D1) / (80850 * a2 * b2);
            matrixK[24][28] = -(6144 * a2 * b2 * D3 + 3072 * a2 * b2 * D2 + (19968 * a4 - 400 * b4) * D1) / (525 * a3 * b3);
            matrixK[24][29] = -(512 * a2 * b2 * D3 + 1536 * a2 * b2 * D2 + (2816 * a4 - 200 * b4) * D1) / (525 * a2 * b3);
            matrixK[24][30] = -(86592 * a2 * b2 * D3 + 43296 * a2 * b2 * D2 + (823680 * a4 - 5600 * b4) * D1) / (40425 * a3 * b2);
            matrixK[24][31] = -(22352 * a2 * b2 * D3 + 26576 * a2 * b2 * D2 + (116160 * a4 - 2800 * b4) * D1) / (40425 * a2 * b2);

            matrixK[25][0] = -(23452 * a2 * b2 * D3 + 20196 * a2 * b2 * D2 + (69814 * a4 - 142393 * b4) * D1) / (40425 * a2 * b3);
            matrixK[25][1] = (6512 * a2 * b2 * D3 + 3256 * a2 * b2 * D2 + (94706 * b4 - 36744 * a4) * D1) / (121275 * a * b3);
            matrixK[25][2] = (42394 * a2 * b2 * D3 + 24662 * a2 * b2 * D2 + (202101 * b4 - 23586 * a4) * D1) / (242550 * a2 * b2);
            matrixK[25][3] = (6996 * a2 * b2 * D3 + 3498 * a2 * b2 * D2 + (21607 * b4 - 1476 * a4) * D1) / (121275 * a * b2);
            matrixK[25][4] = (576 * a2 * b2 * D3 + 288 * a2 * b2 * D2 + (-1728 * b4 - 40 * a4) * D1) / (525 * a2 * b3);
            matrixK[25][5] = -(3872 * a2 * b2 * D3 + 1936 * a2 * b2 * D2 + (-47520 * b4 - 420 * a4) * D1) / (40425 * a * b3);
            matrixK[25][6] = -(272 * a2 * b2 * D3 + 136 * a2 * b2 * D2 + (1248 * b4 + 60 * a4) * D1) / (1575 * a2 * b2);
            matrixK[25][7] = (5896 * a2 * b2 * D3 + 2948 * a2 * b2 * D2 + (34320 * b4 + 630 * a4) * D1) / (121275 * a * b2);
            matrixK[25][8] = -(20900 * a2 * b2 * D3 + 10450 * a2 * b2 * D2 + (9337 * b4 + 39911 * a4) * D1) / (40425 * a2 * b3);
            matrixK[25][9] = (1276 * a2 * b2 * D3 + 638 * a2 * b2 * D2 + (27243 * a4 - 9671 * b4) * D1) / (121275 * a * b3);
            matrixK[25][10] = -(506 * a2 * b2 * D3 + 253 * a2 * b2 * D2 + (9909 * b4 + 9909 * a4) * D1) / (242550 * a2 * b2);
            matrixK[25][11] = -(4334 * a2 * b2 * D3 + 2167 * a2 * b2 * D2 + (5849 * b4 - 1899 * a4) * D1) / (242550 * a * b2);
            matrixK[25][12] = (512 * a2 * b2 * D3 + 256 * a2 * b2 * D2 + (-200 * b4 - 1664 * a4) * D1) / (525 * a2 * b3);
            matrixK[25][13] = (512 * a2 * b2 * D3 + 256 * a2 * b2 * D2 + (200 * b4 + 1152 * a4) * D1) / (1575 * a * b3);
            matrixK[25][14] = (8272 * a2 * b2 * D3 + 4136 * a2 * b2 * D2 + (-2800 * b4 - 68640 * a4) * D1) / (40425 * a2 * b2);
            matrixK[25][15] = (10384 * a2 * b2 * D3 + 5192 * a2 * b2 * D2 + (2800 * b4 + 47520 * a4) * D1) / (121275 * a * b2);
            matrixK[25][16] = -(18524 * a2 * b2 * D3 + 9262 * a2 * b2 * D2 + (50338 * b4 - 168039 * a4) * D1) / (40425 * a2 * b3);
            matrixK[25][17] = -(40700 * a2 * b2 * D3 + 20350 * a2 * b2 * D2 + (4574 * b4 + 115947 * a4) * D1) / (121275 * a * b3);
            matrixK[25][18] = -(42394 * a2 * b2 * D3 + 24662 * a2 * b2 * D2 + (202101 * a4 - 23586 * b4) * D1) / (242550 * a2 * b2);
            matrixK[25][19] = (17842 * a2 * b2 * D3 + 10846 * a2 * b2 * D2 + (7626 * b4 + 46251 * a4) * D1) / (242550 * a * b2);
            matrixK[25][20] = -(576 * a2 * b2 * D3 + 288 * a2 * b2 * D2 + (4992 * b4 - 40 * a4) * D1) / (525 * a2 * b3);
            matrixK[25][21] = (3872 * a2 * b2 * D3 + 1936 * a2 * b2 * D2 + (137280 * b4 - 420 * a4) * D1) / (40425 * a * b3);
            matrixK[25][22] = (1520 * a2 * b2 * D3 + 880 * a2 * b2 * D2 + (2112 * b4 - 60 * a4) * D1) / (1575 * a2 * b2);
            matrixK[25][23] = -(23672 * a2 * b2 * D3 + 10296 * a2 * b2 * D2 + (58080 * b4 - 630 * a4) * D1) / (121275 * a * b2);
            matrixK[25][24] = (62876 * a2 * b2 * D3 + 138468 * a2 * b2 * D2 + (434722 * b4 + 286646 * a4) * D1) / (40425 * a2 * b3);
            matrixK[25][25] = (151184 * a2 * b2 * D3 + 75592 * a2 * b2 * D2 + (320324 * b4 + 155016 * a4) * D1) / (121275 * a * b3);
            matrixK[25][26] = -(191686 * a2 * b2 * D3 + 368423 * a2 * b2 * D2 + (348834 * b4 + 348834 * a4) * D1) / (242550 * a2 * b2);
            matrixK[25][27] = -(22572 * a2 * b2 * D3 + 16676 * a2 * b2 * D2 + (38838 * b4 + 31044 * a4) * D1) / (121275 * a * b2);
            matrixK[25][28] = -(512 * a2 * b2 * D3 + 1536 * a2 * b2 * D2 + (2816 * a4 - 200 * b4) * D1) / (525 * a2 * b3);
            matrixK[25][29] = -(2048 * a2 * b2 * D3 + 1024 * a2 * b2 * D2 + (1536 * a4 - 400 * b4) * D1) / (1575 * a * b3);
            matrixK[25][30] = -(8272 * a2 * b2 * D3 + 19536 * a2 * b2 * D2 + (116160 * a4 - 2800 * b4) * D1) / (40425 * a2 * b2);
            matrixK[25][31] = -(7040 * a2 * b2 * D3 + 3520 * a2 * b2 * D2 + (12672 * a4 - 1120 * b4) * D1) / (24255 * a * b2);

            matrixK[26][0] = (18524 * a2 * b2 * D3 + 9262 * a2 * b2 * D2 + (50338 * a4 - 168039 * b4) * D1) / (40425 * a3 * b2);
            matrixK[26][1] = -(42394 * a2 * b2 * D3 + 24662 * a2 * b2 * D2 + (202101 * b4 - 23586 * a4) * D1) / (242550 * a2 * b2);
            matrixK[26][2] = -(40700 * a2 * b2 * D3 + 20350 * a2 * b2 * D2 + (115947 * b4 + 4574 * a4) * D1) / (121275 * a3 * b);
            matrixK[26][3] = -(17842 * a2 * b2 * D3 + 10846 * a2 * b2 * D2 + (46251 * b4 + 7626 * a4) * D1) / (242550 * a2 * b);
            matrixK[26][4] = -(512 * a2 * b2 * D3 + 256 * a2 * b2 * D2 + (-1664 * b4 - 200 * a4) * D1) / (525 * a3 * b2);
            matrixK[26][5] = (8272 * a2 * b2 * D3 + 4136 * a2 * b2 * D2 + (-68640 * b4 - 2800 * a4) * D1) / (40425 * a2 * b2);
            matrixK[26][6] = (512 * a2 * b2 * D3 + 256 * a2 * b2 * D2 + (1152 * b4 + 200 * a4) * D1) / (1575 * a3 * b);
            matrixK[26][7] = -(10384 * a2 * b2 * D3 + 5192 * a2 * b2 * D2 + (47520 * b4 + 2800 * a4) * D1) / (121275 * a2 * b);
            matrixK[26][8] = (20900 * a2 * b2 * D3 + 10450 * a2 * b2 * D2 + (39911 * b4 + 9337 * a4) * D1) / (40425 * a3 * b2);
            matrixK[26][9] = -(506 * a2 * b2 * D3 + 253 * a2 * b2 * D2 + (9909 * b4 + 9909 * a4) * D1) / (242550 * a2 * b2);
            matrixK[26][10] = (1276 * a2 * b2 * D3 + 638 * a2 * b2 * D2 + (27243 * b4 - 9671 * a4) * D1) / (121275 * a3 * b);
            matrixK[26][11] = (4334 * a2 * b2 * D3 + 2167 * a2 * b2 * D2 + (5849 * a4 - 1899 * b4) * D1) / (242550 * a2 * b);
            matrixK[26][12] = -(576 * a2 * b2 * D3 + 288 * a2 * b2 * D2 + (-40 * b4 - 1728 * a4) * D1) / (525 * a3 * b2);
            matrixK[26][13] = -(272 * a2 * b2 * D3 + 136 * a2 * b2 * D2 + (60 * b4 + 1248 * a4) * D1) / (1575 * a2 * b2);
            matrixK[26][14] = -(3872 * a2 * b2 * D3 + 1936 * a2 * b2 * D2 + (-420 * b4 - 47520 * a4) * D1) / (40425 * a3 * b);
            matrixK[26][15] = -(5896 * a2 * b2 * D3 + 2948 * a2 * b2 * D2 + (630 * b4 + 34320 * a4) * D1) / (121275 * a2 * b);
            matrixK[26][16] = (23452 * a2 * b2 * D3 + 20196 * a2 * b2 * D2 + (69814 * b4 - 142393 * a4) * D1) / (40425 * a3 * b2);
            matrixK[26][17] = (42394 * a2 * b2 * D3 + 24662 * a2 * b2 * D2 + (202101 * a4 - 23586 * b4) * D1) / (242550 * a2 * b2);
            matrixK[26][18] = (6512 * a2 * b2 * D3 + 3256 * a2 * b2 * D2 + (94706 * a4 - 36744 * b4) * D1) / (121275 * a3 * b);
            matrixK[26][19] = -(6996 * a2 * b2 * D3 + 3498 * a2 * b2 * D2 + (21607 * a4 - 1476 * b4) * D1) / (121275 * a2 * b);
            matrixK[26][20] = (512 * a2 * b2 * D3 + 1536 * a2 * b2 * D2 + (2816 * b4 - 200 * a4) * D1) / (525 * a3 * b2);
            matrixK[26][21] = -(8272 * a2 * b2 * D3 + 19536 * a2 * b2 * D2 + (116160 * b4 - 2800 * a4) * D1) / (40425 * a2 * b2);
            matrixK[26][22] = -(2048 * a2 * b2 * D3 + 1024 * a2 * b2 * D2 + (1536 * b4 - 400 * a4) * D1) / (1575 * a3 * b);
            matrixK[26][23] = (7040 * a2 * b2 * D3 + 3520 * a2 * b2 * D2 + (12672 * b4 - 1120 * a4) * D1) / (24255 * a2 * b);
            matrixK[26][24] = -(62876 * a2 * b2 * D3 + 138468 * a2 * b2 * D2 + (286646 * b4 + 434722 * a4) * D1) / (40425 * a3 * b2);
            matrixK[26][25] = -(191686 * a2 * b2 * D3 + 368423 * a2 * b2 * D2 + (348834 * b4 + 348834 * a4) * D1) / (242550 * a2 * b2);
            matrixK[26][26] = (151184 * a2 * b2 * D3 + 75592 * a2 * b2 * D2 + (155016 * b4 + 320324 * a4) * D1) / (121275 * a3 * b);
            matrixK[26][27] = (22572 * a2 * b2 * D3 + 16676 * a2 * b2 * D2 + (31044 * b4 + 38838 * a4) * D1) / (121275 * a2 * b);
            matrixK[26][28] = (576 * a2 * b2 * D3 + 288 * a2 * b2 * D2 + (4992 * a4 - 40 * b4) * D1) / (525 * a3 * b2);
            matrixK[26][29] = (1520 * a2 * b2 * D3 + 880 * a2 * b2 * D2 + (2112 * a4 - 60 * b4) * D1) / (1575 * a2 * b2);
            matrixK[26][30] = (3872 * a2 * b2 * D3 + 1936 * a2 * b2 * D2 + (137280 * a4 - 420 * b4) * D1) / (40425 * a3 * b);
            matrixK[26][31] = (23672 * a2 * b2 * D3 + 10296 * a2 * b2 * D2 + (58080 * a4 - 630 * b4) * D1) / (121275 * a2 * b);

            matrixK[27][0] = (4642 * a2 * b2 * D3 + 1166 * a2 * b2 * D2 + (7862 * a4 - 67367 * b4) * D1) / (80850 * a2 * b2);
            matrixK[27][1] = -(6996 * a2 * b2 * D3 + 3498 * a2 * b2 * D2 + (21607 * b4 - 1476 * a4) * D1) / (121275 * a * b2);
            matrixK[27][2] = -(17842 * a2 * b2 * D3 + 10846 * a2 * b2 * D2 + (46251 * b4 + 7626 * a4) * D1) / (242550 * a2 * b);
            matrixK[27][3] = -(2596 * a2 * b2 * D3 + 1298 * a2 * b2 * D2 + (4857 * b4 + 916 * a4) * D1) / (121275 * a * b);
            matrixK[27][4] = -(80 * a2 * b2 * D3 + 40 * a2 * b2 * D2 + (-416 * b4 - 20 * a4) * D1) / (525 * a2 * b2);
            matrixK[27][5] = (2552 * a2 * b2 * D3 + 1276 * a2 * b2 * D2 + (-34320 * b4 - 630 * a4) * D1) / (121275 * a * b2);
            matrixK[27][6] = (144 * a2 * b2 * D3 + 72 * a2 * b2 * D2 + (288 * b4 + 20 * a4) * D1) / (1575 * a2 * b);
            matrixK[27][7] = -(1144 * a2 * b2 * D3 + 572 * a2 * b2 * D2 + (4752 * b4 + 126 * a4) * D1) / (72765 * a * b);
            matrixK[27][8] = (7678 * a2 * b2 * D3 + 3839 * a2 * b2 * D2 + (3303 * b4 + 3303 * a4) * D1) / (80850 * a2 * b2);
            matrixK[27][9] = (4334 * a2 * b2 * D3 + 2167 * a2 * b2 * D2 + (5849 * b4 - 1899 * a4) * D1) / (242550 * a * b2);
            matrixK[27][10] = -(4334 * a2 * b2 * D3 + 2167 * a2 * b2 * D2 + (5849 * a4 - 1899 * b4) * D1) / (242550 * a2 * b);
            matrixK[27][11] = (6754 * a2 * b2 * D3 + 3377 * a2 * b2 * D2 + (4437 * b4 + 4437 * a4) * D1) / (727650 * a * b);
            matrixK[27][12] = -(80 * a2 * b2 * D3 + 40 * a2 * b2 * D2 + (-20 * b4 - 416 * a4) * D1) / (525 * a2 * b2);
            matrixK[27][13] = -(144 * a2 * b2 * D3 + 72 * a2 * b2 * D2 + (20 * b4 + 288 * a4) * D1) / (1575 * a * b2);
            matrixK[27][14] = -(2552 * a2 * b2 * D3 + 1276 * a2 * b2 * D2 + (-630 * b4 - 34320 * a4) * D1) / (121275 * a2 * b);
            matrixK[27][15] = -(1144 * a2 * b2 * D3 + 572 * a2 * b2 * D2 + (126 * b4 + 4752 * a4) * D1) / (72765 * a * b);
            matrixK[27][16] = (4642 * a2 * b2 * D3 + 1166 * a2 * b2 * D2 + (7862 * b4 - 67367 * a4) * D1) / (80850 * a2 * b2);
            matrixK[27][17] = (17842 * a2 * b2 * D3 + 10846 * a2 * b2 * D2 + (7626 * b4 + 46251 * a4) * D1) / (242550 * a * b2);
            matrixK[27][18] = (6996 * a2 * b2 * D3 + 3498 * a2 * b2 * D2 + (21607 * a4 - 1476 * b4) * D1) / (121275 * a2 * b);
            matrixK[27][19] = -(2596 * a2 * b2 * D3 + 1298 * a2 * b2 * D2 + (916 * b4 + 4857 * a4) * D1) / (121275 * a * b);
            matrixK[27][20] = (80 * a2 * b2 * D3 + 80 * a2 * b2 * D2 + (704 * b4 - 20 * a4) * D1) / (525 * a2 * b2);
            matrixK[27][21] = -(2552 * a2 * b2 * D3 - 264 * a2 * b2 * D2 + (58080 * b4 - 630 * a4) * D1) / (121275 * a * b2);
            matrixK[27][22] = -(384 * a2 * b2 * D3 + 192 * a2 * b2 * D2 + (384 * b4 - 40 * a4) * D1) / (1575 * a2 * b);
            matrixK[27][23] = (13376 * a2 * b2 * D3 + 6688 * a2 * b2 * D2 + (31680 * b4 - 1260 * a4) * D1) / (363825 * a * b);
            matrixK[27][24] = -(16962 * a2 * b2 * D3 + 18491 * a2 * b2 * D2 + (116278 * b4 + 116278 * a4) * D1) / (80850 * a2 * b2);
            matrixK[27][25] = -(22572 * a2 * b2 * D3 + 16676 * a2 * b2 * D2 + (38838 * b4 + 31044 * a4) * D1) / (121275 * a * b2);
            matrixK[27][26] = (22572 * a2 * b2 * D3 + 16676 * a2 * b2 * D2 + (31044 * b4 + 38838 * a4) * D1) / (121275 * a2 * b);
            matrixK[27][27] = (17776 * a2 * b2 * D3 + 8888 * a2 * b2 * D2 + (19848 * b4 + 19848 * a4) * D1) / (363825 * a * b);
            matrixK[27][28] = (80 * a2 * b2 * D3 + 80 * a2 * b2 * D2 + (704 * a4 - 20 * b4) * D1) / (525 * a2 * b2);
            matrixK[27][29] = (384 * a2 * b2 * D3 + 192 * a2 * b2 * D2 + (384 * a4 - 40 * b4) * D1) / (1575 * a * b2);
            matrixK[27][30] = (2552 * a2 * b2 * D3 - 264 * a2 * b2 * D2 + (58080 * a4 - 630 * b4) * D1) / (121275 * a2 * b);
            matrixK[27][31] = (13376 * a2 * b2 * D3 + 6688 * a2 * b2 * D2 + (31680 * a4 - 1260 * b4) * D1) / (363825 * a * b);

            matrixK[28][0] = -(6144 * a2 * b2 * D3 + 3072 * a2 * b2 * D2 + (19968 * a4 - 400 * b4) * D1) / (525 * a3 * b3);
            matrixK[28][1] = -(512 * a2 * b2 * D3 + 1536 * a2 * b2 * D2 + (2816 * a4 - 200 * b4) * D1) / (525 * a2 * b3);
            matrixK[28][2] = -(576 * a2 * b2 * D3 + 288 * a2 * b2 * D2 + (4992 * a4 - 40 * b4) * D1) / (525 * a3 * b2);
            matrixK[28][3] = -(80 * a2 * b2 * D3 + 80 * a2 * b2 * D2 + (704 * a4 - 20 * b4) * D1) / (525 * a2 * b2);
            matrixK[28][4] = 0;
            matrixK[28][5] = 0;
            matrixK[28][6] = 0;
            matrixK[28][7] = -(256 * D3 + 128 * D2) / 525;
            matrixK[28][8] = (6144 * a2 * b2 * D3 + 3072 * a2 * b2 * D2 + (-400 * b4 - 6912 * a4) * D1) / (525 * a3 * b3);
            matrixK[28][9] = -(512 * a2 * b2 * D3 + 256 * a2 * b2 * D2 + (-200 * b4 - 1664 * a4) * D1) / (525 * a2 * b3);
            matrixK[28][10] = (576 * a2 * b2 * D3 + 288 * a2 * b2 * D2 + (-40 * b4 - 1728 * a4) * D1) / (525 * a3 * b2);
            matrixK[28][11] = -(80 * a2 * b2 * D3 + 40 * a2 * b2 * D2 + (-20 * b4 - 416 * a4) * D1) / (525 * a2 * b2);
            matrixK[28][12] = -(12288 * a2 * b2 * D3 + 6144 * a2 * b2 * D2 + (2560 * b4 - 13824 * a4) * D1) / (525 * a3 * b3);
            matrixK[28][13] = (1024 * a2 * b2 * D3 + 512 * a2 * b2 * D2 + (1280 * b4 - 3328 * a4) * D1) / (525 * a2 * b3);
            matrixK[28][14] = 0;
            matrixK[28][15] = 0;
            matrixK[28][16] = (6144 * a2 * b2 * D3 + 3072 * a2 * b2 * D2 + (-400 * b4 - 6912 * a4) * D1) / (525 * a3 * b3);
            matrixK[28][17] = -(512 * a2 * b2 * D3 + 256 * a2 * b2 * D2 + (-200 * b4 - 1664 * a4) * D1) / (525 * a2 * b3);
            matrixK[28][18] = -(576 * a2 * b2 * D3 + 288 * a2 * b2 * D2 + (-40 * b4 - 1728 * a4) * D1) / (525 * a3 * b2);
            matrixK[28][19] = (80 * a2 * b2 * D3 + 40 * a2 * b2 * D2 + (-20 * b4 - 416 * a4) * D1) / (525 * a2 * b2);
            matrixK[28][20] = 0;
            matrixK[28][21] = 0;
            matrixK[28][22] = 0;
            matrixK[28][23] = (256 * D3 + 128 * D2) / 525;
            matrixK[28][24] = -(6144 * a2 * b2 * D3 + 3072 * a2 * b2 * D2 + (19968 * a4 - 400 * b4) * D1) / (525 * a3 * b3);
            matrixK[28][25] = -(512 * a2 * b2 * D3 + 1536 * a2 * b2 * D2 + (2816 * a4 - 200 * b4) * D1) / (525 * a2 * b3);
            matrixK[28][26] = (576 * a2 * b2 * D3 + 288 * a2 * b2 * D2 + (4992 * a4 - 40 * b4) * D1) / (525 * a3 * b2);
            matrixK[28][27] = (80 * a2 * b2 * D3 + 80 * a2 * b2 * D2 + (704 * a4 - 20 * b4) * D1) / (525 * a2 * b2);
            matrixK[28][28] = (12288 * a2 * b2 * D3 + 6144 * a2 * b2 * D2 + (2560 * b4 + 39936 * a4) * D1) / (525 * a3 * b3);
            matrixK[28][29] = (1024 * a2 * b2 * D3 + 3072 * a2 * b2 * D2 + (1280 * b4 + 5632 * a4) * D1) / (525 * a2 * b3);
            matrixK[28][30] = 0;
            matrixK[28][31] = 0;

            matrixK[29][0] = -(512 * a2 * b2 * D3 + 1536 * a2 * b2 * D2 + (2816 * a4 - 200 * b4) * D1) / (525 * a2 * b3);
            matrixK[29][1] = -(2048 * a2 * b2 * D3 + 1024 * a2 * b2 * D2 + (1536 * a4 - 400 * b4) * D1) / (1575 * a * b3);
            matrixK[29][2] = -(1520 * a2 * b2 * D3 + 880 * a2 * b2 * D2 + (2112 * a4 - 60 * b4) * D1) / (1575 * a2 * b2);
            matrixK[29][3] = -(384 * a2 * b2 * D3 + 192 * a2 * b2 * D2 + (384 * a4 - 40 * b4) * D1) / (1575 * a * b2);
            matrixK[29][4] = 0;
            matrixK[29][5] = 0;
            matrixK[29][6] = (256 * D3 + 128 * D2) / 225;
            matrixK[29][7] = -(128 * a * D3 + 64 * a * D2) / 525;
            matrixK[29][8] = (512 * a2 * b2 * D3 + 256 * a2 * b2 * D2 + (-200 * b4 - 1664 * a4) * D1) / (525 * a2 * b3);
            matrixK[29][9] = (512 * a2 * b2 * D3 + 256 * a2 * b2 * D2 + (200 * b4 + 1152 * a4) * D1) / (1575 * a * b3);
            matrixK[29][10] = -(272 * a2 * b2 * D3 + 136 * a2 * b2 * D2 + (60 * b4 + 1248 * a4) * D1) / (1575 * a2 * b2);
            matrixK[29][11] = (144 * a2 * b2 * D3 + 72 * a2 * b2 * D2 + (20 * b4 + 288 * a4) * D1) / (1575 * a * b2);
            matrixK[29][12] = -(1024 * a2 * b2 * D3 + 512 * a2 * b2 * D2 + (1280 * b4 - 3328 * a4) * D1) / (525 * a2 * b3);
            matrixK[29][13] = -(1024 * a2 * b2 * D3 + 512 * a2 * b2 * D2 + (2304 * a4 - 1280 * b4) * D1) / (1575 * a * b3);
            matrixK[29][14] = 0;
            matrixK[29][15] = 0;
            matrixK[29][16] = (512 * a2 * b2 * D3 + 256 * a2 * b2 * D2 + (-200 * b4 - 1664 * a4) * D1) / (525 * a2 * b3);
            matrixK[29][17] = (512 * a2 * b2 * D3 + 256 * a2 * b2 * D2 + (200 * b4 + 1152 * a4) * D1) / (1575 * a * b3);
            matrixK[29][18] = (272 * a2 * b2 * D3 + 136 * a2 * b2 * D2 + (60 * b4 + 1248 * a4) * D1) / (1575 * a2 * b2);
            matrixK[29][19] = -(144 * a2 * b2 * D3 + 72 * a2 * b2 * D2 + (20 * b4 + 288 * a4) * D1) / (1575 * a * b2);
            matrixK[29][20] = 0;
            matrixK[29][21] = 0;
            matrixK[29][22] = -(256 * D3 + 128 * D2) / 225;
            matrixK[29][23] = (128 * a * D3 + 64 * a * D2) / 525;
            matrixK[29][24] = -(512 * a2 * b2 * D3 + 1536 * a2 * b2 * D2 + (2816 * a4 - 200 * b4) * D1) / (525 * a2 * b3);
            matrixK[29][25] = -(2048 * a2 * b2 * D3 + 1024 * a2 * b2 * D2 + (1536 * a4 - 400 * b4) * D1) / (1575 * a * b3);
            matrixK[29][26] = (1520 * a2 * b2 * D3 + 880 * a2 * b2 * D2 + (2112 * a4 - 60 * b4) * D1) / (1575 * a2 * b2);
            matrixK[29][27] = (384 * a2 * b2 * D3 + 192 * a2 * b2 * D2 + (384 * a4 - 40 * b4) * D1) / (1575 * a * b2);
            matrixK[29][28] = (1024 * a2 * b2 * D3 + 3072 * a2 * b2 * D2 + (1280 * b4 + 5632 * a4) * D1) / (525 * a2 * b3);
            matrixK[29][29] = (4096 * a2 * b2 * D3 + 2048 * a2 * b2 * D2 + (2560 * b4 + 3072 * a4) * D1) / (1575 * a * b3);
            matrixK[29][30] = 0;
            matrixK[29][31] = 0;

            matrixK[30][0] = (86592 * a2 * b2 * D3 + 43296 * a2 * b2 * D2 + (823680 * a4 - 5600 * b4) * D1) / (40425 * a3 * b2);
            matrixK[30][1] = (8272 * a2 * b2 * D3 + 19536 * a2 * b2 * D2 + (116160 * a4 - 2800 * b4) * D1) / (40425 * a2 * b2);
            matrixK[30][2] = (3872 * a2 * b2 * D3 + 1936 * a2 * b2 * D2 + (137280 * a4 - 420 * b4) * D1) / (40425 * a3 * b);
            matrixK[30][3] = (2552 * a2 * b2 * D3 - 264 * a2 * b2 * D2 + (58080 * a4 - 630 * b4) * D1) / (121275 * a2 * b);
            matrixK[30][4] = 0;
            matrixK[30][5] = (256 * D3 + 128 * D2) / 1225;
            matrixK[30][6] = 0;
            matrixK[30][7] = (128 * b * D3 + 64 * b * D2) / 1225;
            matrixK[30][8] = -(86592 * a2 * b2 * D3 + 43296 * a2 * b2 * D2 + (-5600 * b4 - 285120 * a4) * D1) / (40425 * a3 * b2);
            matrixK[30][9] = (8272 * a2 * b2 * D3 + 4136 * a2 * b2 * D2 + (-2800 * b4 - 68640 * a4) * D1) / (40425 * a2 * b2);
            matrixK[30][10] = -(3872 * a2 * b2 * D3 + 1936 * a2 * b2 * D2 + (-420 * b4 - 47520 * a4) * D1) / (40425 * a3 * b);
            matrixK[30][11] = (2552 * a2 * b2 * D3 + 1276 * a2 * b2 * D2 + (-630 * b4 - 34320 * a4) * D1) / (121275 * a2 * b);
            matrixK[30][12] = 0;
            matrixK[30][13] = 0;
            matrixK[30][14] = -(78848 * a2 * b2 * D3 + 39424 * a2 * b2 * D2 + (4480 * b4 - 190080 * a4) * D1) / (40425 * a3 * b);
            matrixK[30][15] = (19712 * a2 * b2 * D3 + 9856 * a2 * b2 * D2 + (6720 * b4 - 137280 * a4) * D1) / (121275 * a2 * b);
            matrixK[30][16] = (86592 * a2 * b2 * D3 + 43296 * a2 * b2 * D2 + (-5600 * b4 - 285120 * a4) * D1) / (40425 * a3 * b2);
            matrixK[30][17] = -(8272 * a2 * b2 * D3 + 4136 * a2 * b2 * D2 + (-2800 * b4 - 68640 * a4) * D1) / (40425 * a2 * b2);
            matrixK[30][18] = -(3872 * a2 * b2 * D3 + 1936 * a2 * b2 * D2 + (-420 * b4 - 47520 * a4) * D1) / (40425 * a3 * b);
            matrixK[30][19] = (2552 * a2 * b2 * D3 + 1276 * a2 * b2 * D2 + (-630 * b4 - 34320 * a4) * D1) / (121275 * a2 * b);
            matrixK[30][20] = 0;
            matrixK[30][21] = -(256 * D3 + 128 * D2) / 1225;
            matrixK[30][22] = 0;
            matrixK[30][23] = (128 * b * D3 + 64 * b * D2) / 1225;
            matrixK[30][24] = -(86592 * a2 * b2 * D3 + 43296 * a2 * b2 * D2 + (823680 * a4 - 5600 * b4) * D1) / (40425 * a3 * b2);
            matrixK[30][25] = -(8272 * a2 * b2 * D3 + 19536 * a2 * b2 * D2 + (116160 * a4 - 2800 * b4) * D1) / (40425 * a2 * b2);
            matrixK[30][26] = (3872 * a2 * b2 * D3 + 1936 * a2 * b2 * D2 + (137280 * a4 - 420 * b4) * D1) / (40425 * a3 * b);
            matrixK[30][27] = (2552 * a2 * b2 * D3 - 264 * a2 * b2 * D2 + (58080 * a4 - 630 * b4) * D1) / (121275 * a2 * b);
            matrixK[30][28] = 0;
            matrixK[30][29] = 0;
            matrixK[30][30] = (78848 * a2 * b2 * D3 + 39424 * a2 * b2 * D2 + (4480 * b4 + 549120 * a4) * D1) / (40425 * a3 * b);
            matrixK[30][31] = (19712 * a2 * b2 * D3 + 59136 * a2 * b2 * D2 + (6720 * b4 + 232320 * a4) * D1) / (121275 * a2 * b);

            matrixK[31][0] = (22352 * a2 * b2 * D3 + 26576 * a2 * b2 * D2 + (116160 * a4 - 2800 * b4) * D1) / (40425 * a2 * b2);
            matrixK[31][1] = (7040 * a2 * b2 * D3 + 3520 * a2 * b2 * D2 + (12672 * a4 - 1120 * b4) * D1) / (24255 * a * b2);
            matrixK[31][2] = (23672 * a2 * b2 * D3 + 10296 * a2 * b2 * D2 + (58080 * a4 - 630 * b4) * D1) / (121275 * a2 * b);
            matrixK[31][3] = (13376 * a2 * b2 * D3 + 6688 * a2 * b2 * D2 + (31680 * a4 - 1260 * b4) * D1) / (363825 * a * b);
            matrixK[31][4] = -(256 * D3 + 128 * D2) / 525;
            matrixK[31][5] = (128 * a * D3 + 64 * a * D2) / 1225;
            matrixK[31][6] = -(128 * b * D3 + 64 * b * D2) / 525;
            matrixK[31][7] = (64 * a * b * D3 + 32 * a * b * D2) / 1225;
            matrixK[31][8] = -(528 * a2 * b2 * D3 + 264 * a2 * b2 * D2 + (-560 * b4 - 13728 * a4) * D1) / (8085 * a2 * b2);
            matrixK[31][9] = -(10384 * a2 * b2 * D3 + 5192 * a2 * b2 * D2 + (2800 * b4 + 47520 * a4) * D1) / (121275 * a * b2);
            matrixK[31][10] = (5896 * a2 * b2 * D3 + 2948 * a2 * b2 * D2 + (630 * b4 + 34320 * a4) * D1) / (121275 * a2 * b);
            matrixK[31][11] = -(1144 * a2 * b2 * D3 + 572 * a2 * b2 * D2 + (126 * b4 + 4752 * a4) * D1) / (72765 * a * b);
            matrixK[31][12] = 0;
            matrixK[31][13] = 0;
            matrixK[31][14] = -(19712 * a2 * b2 * D3 + 9856 * a2 * b2 * D2 + (6720 * b4 - 137280 * a4) * D1) / (121275 * a2 * b);
            matrixK[31][15] = -(19712 * a2 * b2 * D3 + 9856 * a2 * b2 * D2 + (95040 * a4 - 6720 * b4) * D1) / (363825 * a * b);
            matrixK[31][16] = (528 * a2 * b2 * D3 + 264 * a2 * b2 * D2 + (-560 * b4 - 13728 * a4) * D1) / (8085 * a2 * b2);
            matrixK[31][17] = (10384 * a2 * b2 * D3 + 5192 * a2 * b2 * D2 + (2800 * b4 + 47520 * a4) * D1) / (121275 * a * b2);
            matrixK[31][18] = (5896 * a2 * b2 * D3 + 2948 * a2 * b2 * D2 + (630 * b4 + 34320 * a4) * D1) / (121275 * a2 * b);
            matrixK[31][19] = -(1144 * a2 * b2 * D3 + 572 * a2 * b2 * D2 + (126 * b4 + 4752 * a4) * D1) / (72765 * a * b);
            matrixK[31][20] = (256 * D3 + 128 * D2) / 525;
            matrixK[31][21] = -(128 * a * D3 + 64 * a * D2) / 1225;
            matrixK[31][22] = -(128 * b * D3 + 64 * b * D2) / 525;
            matrixK[31][23] = (64 * a * b * D3 + 32 * a * b * D2) / 1225;
            matrixK[31][24] = -(22352 * a2 * b2 * D3 + 26576 * a2 * b2 * D2 + (116160 * a4 - 2800 * b4) * D1) / (40425 * a2 * b2);
            matrixK[31][25] = -(7040 * a2 * b2 * D3 + 3520 * a2 * b2 * D2 + (12672 * a4 - 1120 * b4) * D1) / (24255 * a * b2);
            matrixK[31][26] = (23672 * a2 * b2 * D3 + 10296 * a2 * b2 * D2 + (58080 * a4 - 630 * b4) * D1) / (121275 * a2 * b);
            matrixK[31][27] = (13376 * a2 * b2 * D3 + 6688 * a2 * b2 * D2 + (31680 * a4 - 1260 * b4) * D1) / (363825 * a * b);
            matrixK[31][28] = 0;
            matrixK[31][29] = 0;
            matrixK[31][30] = (19712 * a2 * b2 * D3 + 59136 * a2 * b2 * D2 + (6720 * b4 + 232320 * a4) * D1) / (121275 * a2 * b);
            matrixK[31][31] = (78848 * a2 * b2 * D3 + 39424 * a2 * b2 * D2 + (13440 * b4 + 126720 * a4) * D1) / (363825 * a * b);
        } else {
            matrixK = null;
        }

        return matrixK;
    }

    /**
     * Este método fornece a matriz de rigidez de uma laje com 9 nós
     *
     * @param a é o comprimento do elemento finito retangular
     * @param b é a largura do elemento finito retangular
     * @param matrixD é a matriz de elasticidade do elemento finito
     * @return
     */
    private static double[][] matrixK_Kirchhoff9Nodes(double a, double b, double[][] matrixD) {
        double[][] matrixK;

        if (a != 0 && b != 0) {
            double a2, a3, a4, b2, b3, b4;
            double D1, D2, D3;

            D1 = matrixD[0][0];
            D2 = matrixD[1][0];
            D3 = matrixD[2][2];

            a2 = a * a;
            a3 = a * a * a;
            a4 = a * a * a * a;
            b2 = b * b;
            b3 = b * b * b;
            b4 = b * b * b * b;

            matrixK = new double[36][36];

            matrixK[0][0] = (3400496 * a2 * b2 * D3 + 1700248 * a2 * b2 * D2 + (2663116 * b4 + 2663116 * a4) * D1) / (121275 * a3 * b3);
            matrixK[0][1] = (79508 * a2 * b2 * D3 + 360844 * a2 * b2 * D2 + (595174 * b4 + 145122 * a4) * D1) / (121275 * a2 * b3);
            matrixK[0][2] = (79508 * a2 * b2 * D3 + 360844 * a2 * b2 * D2 + (145122 * b4 + 595174 * a4) * D1) / (121275 * a3 * b2);
            matrixK[0][3] = (3718 * a2 * b2 * D3 + 31889 * a2 * b2 * D2 + (64866 * b4 + 64866 * a4) * D1) / (242550 * a2 * b2);
            matrixK[0][4] = -(3131392 * a2 * b2 * D3 + 1565696 * a2 * b2 * D2 + (1874432 * b4 - 1120240 * a4) * D1) / (121275 * a3 * b3);
            matrixK[0][5] = (97856 * a2 * b2 * D3 + 48928 * a2 * b2 * D2 + (200832 * b4 - 40736 * a4) * D1) / (24255 * a2 * b3);
            matrixK[0][6] = -(73216 * a2 * b2 * D3 + 332288 * a2 * b2 * D2 + (102144 * b4 - 250360 * a4) * D1) / (121275 * a3 * b2);
            matrixK[0][7] = (2288 * a2 * b2 * D3 + 10384 * a2 * b2 * D2 + (10944 * b4 - 9104 * a4) * D1) / (24255 * a2 * b2);
            matrixK[0][8] = -(269104 * a2 * b2 * D3 + 134552 * a2 * b2 * D2 + (788684 * b4 - 333526 * a4) * D1) / (121275 * a3 * b3);
            matrixK[0][9] = -(18348 * a2 * b2 * D3 + 9174 * a2 * b2 * D2 + (36917 * a4 - 126566 * b4) * D1) / (121275 * a2 * b3);
            matrixK[0][10] = -(6292 * a2 * b2 * D3 + 28556 * a2 * b2 * D2 + (42978 * b4 - 74539 * a4) * D1) / (121275 * a3 * b2);
            matrixK[0][11] = -(858 * a2 * b2 * D3 + 3894 * a2 * b2 * D2 + (16501 * a4 - 13794 * b4) * D1) / (242550 * a2 * b2);
            matrixK[0][12] = (247808 * a2 * b2 * D3 + 123904 * a2 * b2 * D2 + (-331760 * b4 - 234752 * a4) * D1) / (121275 * a3 * b3);
            matrixK[0][13] = (16896 * a2 * b2 * D3 + 8448 * a2 * b2 * D2 + (53240 * b4 + 25984 * a4) * D1) / (121275 * a2 * b3);
            matrixK[0][14] = -(7744 * a2 * b2 * D3 + 3872 * a2 * b2 * D2 + (-12064 * b4 - 25152 * a4) * D1) / (24255 * a3 * b2);
            matrixK[0][15] = -(528 * a2 * b2 * D3 + 264 * a2 * b2 * D2 + (1936 * b4 + 2784 * a4) * D1) / (24255 * a2 * b2);
            matrixK[0][16] = (21296 * a2 * b2 * D3 + 10648 * a2 * b2 * D2 + (-98774 * b4 - 98774 * a4) * D1) / (121275 * a3 * b3);
            matrixK[0][17] = (1452 * a2 * b2 * D3 + 726 * a2 * b2 * D2 + (15851 * b4 + 10933 * a4) * D1) / (121275 * a2 * b3);
            matrixK[0][18] = (1452 * a2 * b2 * D3 + 726 * a2 * b2 * D2 + (10933 * b4 + 15851 * a4) * D1) / (121275 * a3 * b2);
            matrixK[0][19] = (18 * a2 * b2 * D3 + 9 * a2 * b2 * D2 + (-319 * b4 - 319 * a4) * D1) / (22050 * a2 * b2);
            matrixK[0][20] = (247808 * a2 * b2 * D3 + 123904 * a2 * b2 * D2 + (-234752 * b4 - 331760 * a4) * D1) / (121275 * a3 * b3);
            matrixK[0][21] = -(7744 * a2 * b2 * D3 + 3872 * a2 * b2 * D2 + (-25152 * b4 - 12064 * a4) * D1) / (24255 * a2 * b3);
            matrixK[0][22] = (16896 * a2 * b2 * D3 + 8448 * a2 * b2 * D2 + (25984 * b4 + 53240 * a4) * D1) / (121275 * a3 * b2);
            matrixK[0][23] = -(528 * a2 * b2 * D3 + 264 * a2 * b2 * D2 + (2784 * b4 + 1936 * a4) * D1) / (24255 * a2 * b2);
            matrixK[0][24] = -(269104 * a2 * b2 * D3 + 134552 * a2 * b2 * D2 + (788684 * a4 - 333526 * b4) * D1) / (121275 * a3 * b3);
            matrixK[0][25] = -(6292 * a2 * b2 * D3 + 28556 * a2 * b2 * D2 + (42978 * a4 - 74539 * b4) * D1) / (121275 * a2 * b3);
            matrixK[0][26] = -(18348 * a2 * b2 * D3 + 9174 * a2 * b2 * D2 + (36917 * b4 - 126566 * a4) * D1) / (121275 * a3 * b2);
            matrixK[0][27] = -(858 * a2 * b2 * D3 + 3894 * a2 * b2 * D2 + (16501 * b4 - 13794 * a4) * D1) / (242550 * a2 * b2);
            matrixK[0][28] = -(3131392 * a2 * b2 * D3 + 1565696 * a2 * b2 * D2 + (1874432 * a4 - 1120240 * b4) * D1) / (121275 * a3 * b3);
            matrixK[0][29] = -(73216 * a2 * b2 * D3 + 332288 * a2 * b2 * D2 + (102144 * a4 - 250360 * b4) * D1) / (121275 * a2 * b3);
            matrixK[0][30] = (97856 * a2 * b2 * D3 + 48928 * a2 * b2 * D2 + (200832 * a4 - 40736 * b4) * D1) / (24255 * a3 * b2);
            matrixK[0][31] = (2288 * a2 * b2 * D3 + 10384 * a2 * b2 * D2 + (10944 * a4 - 9104 * b4) * D1) / (24255 * a2 * b2);
            matrixK[0][32] = (262144 * a2 * b2 * D3 + 131072 * a2 * b2 * D2 + (-71680 * b4 - 71680 * a4) * D1) / (11025 * a3 * b3);
            matrixK[0][33] = -(90112 * a2 * b2 * D3 + 45056 * a2 * b2 * D2 + (-84480 * b4 - 28672 * a4) * D1) / (24255 * a2 * b3);
            matrixK[0][34] = -(90112 * a2 * b2 * D3 + 45056 * a2 * b2 * D2 + (-28672 * b4 - 84480 * a4) * D1) / (24255 * a3 * b2);
            matrixK[0][35] = (2816 * a2 * b2 * D3 + 1408 * a2 * b2 * D2 + (-3072 * b4 - 3072 * a4) * D1) / (4851 * a2 * b2);

            matrixK[1][1] = (171248 * a2 * b2 * D3 + 85624 * a2 * b2 * D2 + (520908 * b4 + 30552 * a4) * D1) / (363825 * a * b3);
            matrixK[1][2] = (3718 * a2 * b2 * D3 + 274439 * a2 * b2 * D2 + (64866 * b4 + 64866 * a4) * D1) / (242550 * a2 * b2);
            matrixK[1][3] = (4004 * a2 * b2 * D3 + 18172 * a2 * b2 * D2 + (28386 * b4 + 6828 * a4) * D1) / (363825 * a * b2);
            matrixK[1][4] = -(97856 * a2 * b2 * D3 + 48928 * a2 * b2 * D2 + (468608 * b4 - 112024 * a4) * D1) / (121275 * a2 * b3);
            matrixK[1][5] = -(48928 * a2 * b2 * D3 + 24464 * a2 * b2 * D2 + (45828 * a4 - 502080 * b4) * D1) / (363825 * a * b3);
            matrixK[1][6] = -(2288 * a2 * b2 * D3 + 10384 * a2 * b2 * D2 + (25536 * b4 - 25036 * a4) * D1) / (121275 * a2 * b2);
            matrixK[1][7] = -(1144 * a2 * b2 * D3 + 5192 * a2 * b2 * D2 + (10242 * a4 - 27360 * b4) * D1) / (363825 * a * b2);
            matrixK[1][8] = (18348 * a2 * b2 * D3 + 9174 * a2 * b2 * D2 + (36917 * a4 - 126566 * b4) * D1) / (121275 * a2 * b3);
            matrixK[1][9] = -(30580 * a2 * b2 * D3 + 15290 * a2 * b2 * D2 + (11457 * a4 - 59622 * b4) * D1) / (363825 * a * b3);
            matrixK[1][10] = (858 * a2 * b2 * D3 + 3894 * a2 * b2 * D2 + (16501 * a4 - 13794 * b4) * D1) / (242550 * a2 * b2);
            matrixK[1][11] = -(1430 * a2 * b2 * D3 + 6490 * a2 * b2 * D2 + (5121 * a4 - 6498 * b4) * D1) / (727650 * a * b2);
            matrixK[1][12] = -(16896 * a2 * b2 * D3 + 8448 * a2 * b2 * D2 + (53240 * b4 + 25984 * a4) * D1) / (121275 * a2 * b3);
            matrixK[1][13] = (28160 * a2 * b2 * D3 + 14080 * a2 * b2 * D2 + (25080 * b4 + 8064 * a4) * D1) / (363825 * a * b3);
            matrixK[1][14] = (528 * a2 * b2 * D3 + 264 * a2 * b2 * D2 + (1936 * b4 + 2784 * a4) * D1) / (24255 * a2 * b2);
            matrixK[1][15] = -(880 * a2 * b2 * D3 + 440 * a2 * b2 * D2 + (912 * b4 + 864 * a4) * D1) / (72765 * a * b2);
            matrixK[1][16] = -(1452 * a2 * b2 * D3 + 726 * a2 * b2 * D2 + (15851 * b4 + 10933 * a4) * D1) / (121275 * a2 * b3);
            matrixK[1][17] = (2420 * a2 * b2 * D3 + 1210 * a2 * b2 * D2 + (7467 * b4 + 3393 * a4) * D1) / (363825 * a * b3);
            matrixK[1][18] = -(18 * a2 * b2 * D3 + 9 * a2 * b2 * D2 + (-319 * b4 - 319 * a4) * D1) / (22050 * a2 * b2);
            matrixK[1][19] = (110 * a2 * b2 * D3 + 55 * a2 * b2 * D2 + (-551 * b4 - 363 * a4) * D1) / (242550 * a * b2);
            matrixK[1][20] = (7744 * a2 * b2 * D3 + 3872 * a2 * b2 * D2 + (-58688 * b4 - 33176 * a4) * D1) / (121275 * a2 * b3);
            matrixK[1][21] = (3872 * a2 * b2 * D3 + 1936 * a2 * b2 * D2 + (62880 * b4 + 13572 * a4) * D1) / (363825 * a * b3);
            matrixK[1][22] = (528 * a2 * b2 * D3 + 264 * a2 * b2 * D2 + (6496 * b4 + 5324 * a4) * D1) / (121275 * a2 * b2);
            matrixK[1][23] = (88 * a2 * b2 * D3 + 44 * a2 * b2 * D2 + (-2320 * b4 - 726 * a4) * D1) / (121275 * a * b2);
            matrixK[1][24] = -(6292 * a2 * b2 * D3 + 28556 * a2 * b2 * D2 + (42978 * a4 - 74539 * b4) * D1) / (121275 * a2 * b3);
            matrixK[1][25] = -(13552 * a2 * b2 * D3 + 6776 * a2 * b2 * D2 + (9048 * a4 - 65238 * b4) * D1) / (363825 * a * b3);
            matrixK[1][26] = -(858 * a2 * b2 * D3 + 3894 * a2 * b2 * D2 + (16501 * b4 - 13794 * a4) * D1) / (242550 * a2 * b2);
            matrixK[1][27] = -(308 * a2 * b2 * D3 + 154 * a2 * b2 * D2 + (2407 * b4 - 484 * a4) * D1) / (121275 * a * b2);
            matrixK[1][28] = -(73216 * a2 * b2 * D3 + 332288 * a2 * b2 * D2 + (102144 * a4 - 250360 * b4) * D1) / (121275 * a2 * b3);
            matrixK[1][29] = -(157696 * a2 * b2 * D3 + 78848 * a2 * b2 * D2 + (21504 * a4 - 219120 * b4) * D1) / (363825 * a * b3);
            matrixK[1][30] = (2288 * a2 * b2 * D3 + 10384 * a2 * b2 * D2 + (10944 * a4 - 9104 * b4) * D1) / (24255 * a2 * b2);
            matrixK[1][31] = (4928 * a2 * b2 * D3 + 2464 * a2 * b2 * D2 + (2304 * a4 - 7968 * b4) * D1) / (72765 * a * b2);
            matrixK[1][32] = (8192 * a2 * b2 * D3 + 4096 * a2 * b2 * D2 + (-17920 * b4 - 7168 * a4) * D1) / (11025 * a2 * b3);
            matrixK[1][33] = (45056 * a2 * b2 * D3 + 22528 * a2 * b2 * D2 + (211200 * b4 + 32256 * a4) * D1) / (363825 * a * b3);
            matrixK[1][34] = -(2816 * a2 * b2 * D3 + 1408 * a2 * b2 * D2 + (-7168 * b4 - 8448 * a4) * D1) / (24255 * a2 * b2);
            matrixK[1][35] = -(1408 * a2 * b2 * D3 + 704 * a2 * b2 * D2 + (7680 * b4 + 3456 * a4) * D1) / (72765 * a * b2);

            matrixK[2][2] = (171248 * a2 * b2 * D3 + 85624 * a2 * b2 * D2 + (30552 * b4 + 520908 * a4) * D1) / (363825 * a3 * b);
            matrixK[2][3] = (4004 * a2 * b2 * D3 + 18172 * a2 * b2 * D2 + (6828 * b4 + 28386 * a4) * D1) / (363825 * a2 * b);
            matrixK[2][4] = -(73216 * a2 * b2 * D3 + 332288 * a2 * b2 * D2 + (102144 * b4 - 250360 * a4) * D1) / (121275 * a3 * b2);
            matrixK[2][5] = (2288 * a2 * b2 * D3 + 10384 * a2 * b2 * D2 + (10944 * b4 - 9104 * a4) * D1) / (24255 * a2 * b2);
            matrixK[2][6] = -(157696 * a2 * b2 * D3 + 78848 * a2 * b2 * D2 + (21504 * b4 - 219120 * a4) * D1) / (363825 * a3 * b);
            matrixK[2][7] = (4928 * a2 * b2 * D3 + 2464 * a2 * b2 * D2 + (2304 * b4 - 7968 * a4) * D1) / (72765 * a2 * b);
            matrixK[2][8] = -(6292 * a2 * b2 * D3 + 28556 * a2 * b2 * D2 + (42978 * b4 - 74539 * a4) * D1) / (121275 * a3 * b2);
            matrixK[2][9] = -(858 * a2 * b2 * D3 + 3894 * a2 * b2 * D2 + (16501 * a4 - 13794 * b4) * D1) / (242550 * a2 * b2);
            matrixK[2][10] = -(13552 * a2 * b2 * D3 + 6776 * a2 * b2 * D2 + (9048 * b4 - 65238 * a4) * D1) / (363825 * a3 * b);
            matrixK[2][11] = -(308 * a2 * b2 * D3 + 154 * a2 * b2 * D2 + (2407 * a4 - 484 * b4) * D1) / (121275 * a2 * b);
            matrixK[2][12] = (7744 * a2 * b2 * D3 + 3872 * a2 * b2 * D2 + (-33176 * b4 - 58688 * a4) * D1) / (121275 * a3 * b2);
            matrixK[2][13] = (528 * a2 * b2 * D3 + 264 * a2 * b2 * D2 + (5324 * b4 + 6496 * a4) * D1) / (121275 * a2 * b2);
            matrixK[2][14] = (3872 * a2 * b2 * D3 + 1936 * a2 * b2 * D2 + (13572 * b4 + 62880 * a4) * D1) / (363825 * a3 * b);
            matrixK[2][15] = (88 * a2 * b2 * D3 + 44 * a2 * b2 * D2 + (-726 * b4 - 2320 * a4) * D1) / (121275 * a2 * b);
            matrixK[2][16] = -(1452 * a2 * b2 * D3 + 726 * a2 * b2 * D2 + (10933 * b4 + 15851 * a4) * D1) / (121275 * a3 * b2);
            matrixK[2][17] = -(18 * a2 * b2 * D3 + 9 * a2 * b2 * D2 + (-319 * b4 - 319 * a4) * D1) / (22050 * a2 * b2);
            matrixK[2][18] = (2420 * a2 * b2 * D3 + 1210 * a2 * b2 * D2 + (3393 * b4 + 7467 * a4) * D1) / (363825 * a3 * b);
            matrixK[2][19] = (110 * a2 * b2 * D3 + 55 * a2 * b2 * D2 + (-363 * b4 - 551 * a4) * D1) / (242550 * a2 * b);
            matrixK[2][20] = -(16896 * a2 * b2 * D3 + 8448 * a2 * b2 * D2 + (25984 * b4 + 53240 * a4) * D1) / (121275 * a3 * b2);
            matrixK[2][21] = (528 * a2 * b2 * D3 + 264 * a2 * b2 * D2 + (2784 * b4 + 1936 * a4) * D1) / (24255 * a2 * b2);
            matrixK[2][22] = (28160 * a2 * b2 * D3 + 14080 * a2 * b2 * D2 + (8064 * b4 + 25080 * a4) * D1) / (363825 * a3 * b);
            matrixK[2][23] = -(880 * a2 * b2 * D3 + 440 * a2 * b2 * D2 + (864 * b4 + 912 * a4) * D1) / (72765 * a2 * b);
            matrixK[2][24] = (18348 * a2 * b2 * D3 + 9174 * a2 * b2 * D2 + (36917 * b4 - 126566 * a4) * D1) / (121275 * a3 * b2);
            matrixK[2][25] = (858 * a2 * b2 * D3 + 3894 * a2 * b2 * D2 + (16501 * b4 - 13794 * a4) * D1) / (242550 * a2 * b2);
            matrixK[2][26] = -(30580 * a2 * b2 * D3 + 15290 * a2 * b2 * D2 + (11457 * b4 - 59622 * a4) * D1) / (363825 * a3 * b);
            matrixK[2][27] = -(1430 * a2 * b2 * D3 + 6490 * a2 * b2 * D2 + (5121 * b4 - 6498 * a4) * D1) / (727650 * a2 * b);
            matrixK[2][28] = -(97856 * a2 * b2 * D3 + 48928 * a2 * b2 * D2 + (468608 * a4 - 112024 * b4) * D1) / (121275 * a3 * b2);
            matrixK[2][29] = -(2288 * a2 * b2 * D3 + 10384 * a2 * b2 * D2 + (25536 * a4 - 25036 * b4) * D1) / (121275 * a2 * b2);
            matrixK[2][30] = -(48928 * a2 * b2 * D3 + 24464 * a2 * b2 * D2 + (45828 * b4 - 502080 * a4) * D1) / (363825 * a3 * b);
            matrixK[2][31] = -(1144 * a2 * b2 * D3 + 5192 * a2 * b2 * D2 + (10242 * b4 - 27360 * a4) * D1) / (363825 * a2 * b);
            matrixK[2][32] = (8192 * a2 * b2 * D3 + 4096 * a2 * b2 * D2 + (-7168 * b4 - 17920 * a4) * D1) / (11025 * a3 * b2);
            matrixK[2][33] = -(2816 * a2 * b2 * D3 + 1408 * a2 * b2 * D2 + (-8448 * b4 - 7168 * a4) * D1) / (24255 * a2 * b2);
            matrixK[2][34] = (45056 * a2 * b2 * D3 + 22528 * a2 * b2 * D2 + (32256 * b4 + 211200 * a4) * D1) / (363825 * a3 * b);
            matrixK[2][35] = -(1408 * a2 * b2 * D3 + 704 * a2 * b2 * D2 + (3456 * b4 + 7680 * a4) * D1) / (72765 * a2 * b);

            matrixK[3][3] = (8624 * a2 * b2 * D3 + 4312 * a2 * b2 * D2 + (5976 * b4 + 5976 * a4) * D1) / (1091475 * a * b);
            matrixK[3][4] = -(2288 * a2 * b2 * D3 + 10384 * a2 * b2 * D2 + (25536 * b4 - 25036 * a4) * D1) / (121275 * a2 * b2);
            matrixK[3][5] = -(1144 * a2 * b2 * D3 + 5192 * a2 * b2 * D2 + (10242 * a4 - 27360 * b4) * D1) / (363825 * a * b2);
            matrixK[3][6] = -(4928 * a2 * b2 * D3 + 2464 * a2 * b2 * D2 + (5376 * b4 - 21912 * a4) * D1) / (363825 * a2 * b);
            matrixK[3][7] = -(2464 * a2 * b2 * D3 + 1232 * a2 * b2 * D2 + (8964 * a4 - 5760 * b4) * D1) / (1091475 * a * b);
            matrixK[3][8] = (858 * a2 * b2 * D3 + 3894 * a2 * b2 * D2 + (16501 * a4 - 13794 * b4) * D1) / (242550 * a2 * b2);
            matrixK[3][9] = -(1430 * a2 * b2 * D3 + 6490 * a2 * b2 * D2 + (5121 * a4 - 6498 * b4) * D1) / (727650 * a * b2);
            matrixK[3][10] = (308 * a2 * b2 * D3 + 154 * a2 * b2 * D2 + (2407 * a4 - 484 * b4) * D1) / (121275 * a2 * b);
            matrixK[3][11] = -(1540 * a2 * b2 * D3 + 770 * a2 * b2 * D2 + (2241 * a4 - 684 * b4) * D1) / (1091475 * a * b);
            matrixK[3][12] = -(528 * a2 * b2 * D3 + 264 * a2 * b2 * D2 + (5324 * b4 + 6496 * a4) * D1) / (121275 * a2 * b2);
            matrixK[3][13] = (880 * a2 * b2 * D3 + 440 * a2 * b2 * D2 + (2508 * b4 + 2016 * a4) * D1) / (363825 * a * b2);
            matrixK[3][14] = -(88 * a2 * b2 * D3 + 44 * a2 * b2 * D2 + (-726 * b4 - 2320 * a4) * D1) / (121275 * a2 * b);
            matrixK[3][15] = (440 * a2 * b2 * D3 + 220 * a2 * b2 * D2 + (-1026 * b4 - 2160 * a4) * D1) / (1091475 * a * b);
            matrixK[3][16] = (18 * a2 * b2 * D3 + 9 * a2 * b2 * D2 + (-319 * b4 - 319 * a4) * D1) / (22050 * a2 * b2);
            matrixK[3][17] = -(110 * a2 * b2 * D3 + 55 * a2 * b2 * D2 + (-551 * b4 - 363 * a4) * D1) / (242550 * a * b2);
            matrixK[3][18] = -(110 * a2 * b2 * D3 + 55 * a2 * b2 * D2 + (-363 * b4 - 551 * a4) * D1) / (242550 * a2 * b);
            matrixK[3][19] = (550 * a2 * b2 * D3 + 275 * a2 * b2 * D2 + (-513 * b4 - 513 * a4) * D1) / (2182950 * a * b);
            matrixK[3][20] = -(528 * a2 * b2 * D3 + 264 * a2 * b2 * D2 + (6496 * b4 + 5324 * a4) * D1) / (121275 * a2 * b2);
            matrixK[3][21] = -(88 * a2 * b2 * D3 + 44 * a2 * b2 * D2 + (-2320 * b4 - 726 * a4) * D1) / (121275 * a * b2);
            matrixK[3][22] = (880 * a2 * b2 * D3 + 440 * a2 * b2 * D2 + (2016 * b4 + 2508 * a4) * D1) / (363825 * a2 * b);
            matrixK[3][23] = (440 * a2 * b2 * D3 + 220 * a2 * b2 * D2 + (-2160 * b4 - 1026 * a4) * D1) / (1091475 * a * b);
            matrixK[3][24] = (858 * a2 * b2 * D3 + 3894 * a2 * b2 * D2 + (16501 * b4 - 13794 * a4) * D1) / (242550 * a2 * b2);
            matrixK[3][25] = (308 * a2 * b2 * D3 + 154 * a2 * b2 * D2 + (2407 * b4 - 484 * a4) * D1) / (121275 * a * b2);
            matrixK[3][26] = -(1430 * a2 * b2 * D3 + 6490 * a2 * b2 * D2 + (5121 * b4 - 6498 * a4) * D1) / (727650 * a2 * b);
            matrixK[3][27] = -(1540 * a2 * b2 * D3 + 770 * a2 * b2 * D2 + (2241 * b4 - 684 * a4) * D1) / (1091475 * a * b);
            matrixK[3][28] = -(2288 * a2 * b2 * D3 + 10384 * a2 * b2 * D2 + (25536 * a4 - 25036 * b4) * D1) / (121275 * a2 * b2);
            matrixK[3][29] = -(4928 * a2 * b2 * D3 + 2464 * a2 * b2 * D2 + (5376 * a4 - 21912 * b4) * D1) / (363825 * a * b2);
            matrixK[3][30] = -(1144 * a2 * b2 * D3 + 5192 * a2 * b2 * D2 + (10242 * b4 - 27360 * a4) * D1) / (363825 * a2 * b);
            matrixK[3][31] = -(2464 * a2 * b2 * D3 + 1232 * a2 * b2 * D2 + (8964 * b4 - 5760 * a4) * D1) / (1091475 * a * b);
            matrixK[3][32] = (256 * a2 * b2 * D3 + 128 * a2 * b2 * D2 + (-1792 * b4 - 1792 * a4) * D1) / (11025 * a2 * b2);
            matrixK[3][33] = (1408 * a2 * b2 * D3 + 704 * a2 * b2 * D2 + (21120 * b4 + 8064 * a4) * D1) / (363825 * a * b2);
            matrixK[3][34] = (1408 * a2 * b2 * D3 + 704 * a2 * b2 * D2 + (8064 * b4 + 21120 * a4) * D1) / (363825 * a2 * b);
            matrixK[3][35] = (704 * a2 * b2 * D3 + 352 * a2 * b2 * D2 + (-8640 * b4 - 8640 * a4) * D1) / (1091475 * a * b);

            matrixK[4][4] = (6262784 * a2 * b2 * D3 + 3131392 * a2 * b2 * D2 + (3748864 * b4 + 7169536 * a4) * D1) / (121275 * a3 * b3);
            matrixK[4][5] = 0;
            matrixK[4][6] = (146432 * a2 * b2 * D3 + 664576 * a2 * b2 * D2 + (204288 * b4 + 1602304 * a4) * D1) / (121275 * a3 * b2);
            matrixK[4][7] = 0;
            matrixK[4][8] = -(3131392 * a2 * b2 * D3 + 1565696 * a2 * b2 * D2 + (1874432 * b4 - 1120240 * a4) * D1) / (121275 * a3 * b3);
            matrixK[4][9] = (97856 * a2 * b2 * D3 + 48928 * a2 * b2 * D2 + (468608 * b4 - 112024 * a4) * D1) / (121275 * a2 * b3);
            matrixK[4][10] = -(73216 * a2 * b2 * D3 + 332288 * a2 * b2 * D2 + (102144 * b4 - 250360 * a4) * D1) / (121275 * a3 * b2);
            matrixK[4][11] = (2288 * a2 * b2 * D3 + 10384 * a2 * b2 * D2 + (25536 * b4 - 25036 * a4) * D1) / (121275 * a2 * b2);
            matrixK[4][12] = (262144 * a2 * b2 * D3 + 131072 * a2 * b2 * D2 + (-71680 * b4 - 71680 * a4) * D1) / (11025 * a3 * b3);
            matrixK[4][13] = -(8192 * a2 * b2 * D3 + 4096 * a2 * b2 * D2 + (-17920 * b4 - 7168 * a4) * D1) / (11025 * a2 * b3);
            matrixK[4][14] = -(90112 * a2 * b2 * D3 + 45056 * a2 * b2 * D2 + (-28672 * b4 - 84480 * a4) * D1) / (24255 * a3 * b2);
            matrixK[4][15] = (2816 * a2 * b2 * D3 + 1408 * a2 * b2 * D2 + (-7168 * b4 - 8448 * a4) * D1) / (24255 * a2 * b2);
            matrixK[4][16] = (247808 * a2 * b2 * D3 + 123904 * a2 * b2 * D2 + (-234752 * b4 - 331760 * a4) * D1) / (121275 * a3 * b3);
            matrixK[4][17] = -(7744 * a2 * b2 * D3 + 3872 * a2 * b2 * D2 + (-58688 * b4 - 33176 * a4) * D1) / (121275 * a2 * b3);
            matrixK[4][18] = (16896 * a2 * b2 * D3 + 8448 * a2 * b2 * D2 + (25984 * b4 + 53240 * a4) * D1) / (121275 * a3 * b2);
            matrixK[4][19] = -(528 * a2 * b2 * D3 + 264 * a2 * b2 * D2 + (6496 * b4 + 5324 * a4) * D1) / (121275 * a2 * b2);
            matrixK[4][20] = -(495616 * a2 * b2 * D3 + 247808 * a2 * b2 * D2 + (2123264 * a4 - 469504 * b4) * D1) / (121275 * a3 * b3);
            matrixK[4][21] = 0;
            matrixK[4][22] = -(33792 * a2 * b2 * D3 + 16896 * a2 * b2 * D2 + (51968 * b4 - 340736 * a4) * D1) / (121275 * a3 * b2);
            matrixK[4][23] = 0;
            matrixK[4][24] = (247808 * a2 * b2 * D3 + 123904 * a2 * b2 * D2 + (-234752 * b4 - 331760 * a4) * D1) / (121275 * a3 * b3);
            matrixK[4][25] = (7744 * a2 * b2 * D3 + 3872 * a2 * b2 * D2 + (-58688 * b4 - 33176 * a4) * D1) / (121275 * a2 * b3);
            matrixK[4][26] = (16896 * a2 * b2 * D3 + 8448 * a2 * b2 * D2 + (25984 * b4 + 53240 * a4) * D1) / (121275 * a3 * b2);
            matrixK[4][27] = (528 * a2 * b2 * D3 + 264 * a2 * b2 * D2 + (6496 * b4 + 5324 * a4) * D1) / (121275 * a2 * b2);
            matrixK[4][28] = (262144 * a2 * b2 * D3 + 131072 * a2 * b2 * D2 + (-71680 * b4 - 71680 * a4) * D1) / (11025 * a3 * b3);
            matrixK[4][29] = (8192 * a2 * b2 * D3 + 4096 * a2 * b2 * D2 + (-17920 * b4 - 7168 * a4) * D1) / (11025 * a2 * b3);
            matrixK[4][30] = -(90112 * a2 * b2 * D3 + 45056 * a2 * b2 * D2 + (-28672 * b4 - 84480 * a4) * D1) / (24255 * a3 * b2);
            matrixK[4][31] = -(2816 * a2 * b2 * D3 + 1408 * a2 * b2 * D2 + (-7168 * b4 - 8448 * a4) * D1) / (24255 * a2 * b2);
            matrixK[4][32] = -(524288 * a2 * b2 * D3 + 262144 * a2 * b2 * D2 + (458752 * a4 - 143360 * b4) * D1) / (11025 * a3 * b3);
            matrixK[4][33] = 0;
            matrixK[4][34] = (180224 * a2 * b2 * D3 + 90112 * a2 * b2 * D2 + (540672 * a4 - 57344 * b4) * D1) / (24255 * a3 * b2);
            matrixK[4][35] = 0;

            matrixK[5][5] = (1565696 * a2 * b2 * D3 + 782848 * a2 * b2 * D2 + (2008320 * b4 + 488832 * a4) * D1) / (363825 * a * b3);
            matrixK[5][6] = 0;
            matrixK[5][7] = (36608 * a2 * b2 * D3 + 166144 * a2 * b2 * D2 + (109440 * b4 + 109248 * a4) * D1) / (363825 * a * b2);
            matrixK[5][8] = -(97856 * a2 * b2 * D3 + 48928 * a2 * b2 * D2 + (200832 * b4 - 40736 * a4) * D1) / (24255 * a2 * b3);
            matrixK[5][9] = -(48928 * a2 * b2 * D3 + 24464 * a2 * b2 * D2 + (45828 * a4 - 502080 * b4) * D1) / (363825 * a * b3);
            matrixK[5][10] = -(2288 * a2 * b2 * D3 + 10384 * a2 * b2 * D2 + (10944 * b4 - 9104 * a4) * D1) / (24255 * a2 * b2);
            matrixK[5][11] = -(1144 * a2 * b2 * D3 + 5192 * a2 * b2 * D2 + (10242 * a4 - 27360 * b4) * D1) / (363825 * a * b2);
            matrixK[5][12] = (90112 * a2 * b2 * D3 + 45056 * a2 * b2 * D2 + (-84480 * b4 - 28672 * a4) * D1) / (24255 * a2 * b3);
            matrixK[5][13] = (45056 * a2 * b2 * D3 + 22528 * a2 * b2 * D2 + (211200 * b4 + 32256 * a4) * D1) / (363825 * a * b3);
            matrixK[5][14] = -(2816 * a2 * b2 * D3 + 1408 * a2 * b2 * D2 + (-3072 * b4 - 3072 * a4) * D1) / (4851 * a2 * b2);
            matrixK[5][15] = -(1408 * a2 * b2 * D3 + 704 * a2 * b2 * D2 + (7680 * b4 + 3456 * a4) * D1) / (72765 * a * b2);
            matrixK[5][16] = (7744 * a2 * b2 * D3 + 3872 * a2 * b2 * D2 + (-25152 * b4 - 12064 * a4) * D1) / (24255 * a2 * b3);
            matrixK[5][17] = (3872 * a2 * b2 * D3 + 1936 * a2 * b2 * D2 + (62880 * b4 + 13572 * a4) * D1) / (363825 * a * b3);
            matrixK[5][18] = (528 * a2 * b2 * D3 + 264 * a2 * b2 * D2 + (2784 * b4 + 1936 * a4) * D1) / (24255 * a2 * b2);
            matrixK[5][19] = (88 * a2 * b2 * D3 + 44 * a2 * b2 * D2 + (-2320 * b4 - 726 * a4) * D1) / (121275 * a * b2);
            matrixK[5][20] = 0;
            matrixK[5][21] = -(123904 * a2 * b2 * D3 + 61952 * a2 * b2 * D2 + (144768 * a4 - 251520 * b4) * D1) / (363825 * a * b3);
            matrixK[5][22] = 0;
            matrixK[5][23] = -(2816 * a2 * b2 * D3 + 1408 * a2 * b2 * D2 + (9280 * b4 - 7744 * a4) * D1) / (121275 * a * b2);
            matrixK[5][24] = -(7744 * a2 * b2 * D3 + 3872 * a2 * b2 * D2 + (-25152 * b4 - 12064 * a4) * D1) / (24255 * a2 * b3);
            matrixK[5][25] = (3872 * a2 * b2 * D3 + 1936 * a2 * b2 * D2 + (62880 * b4 + 13572 * a4) * D1) / (363825 * a * b3);
            matrixK[5][26] = -(528 * a2 * b2 * D3 + 264 * a2 * b2 * D2 + (2784 * b4 + 1936 * a4) * D1) / (24255 * a2 * b2);
            matrixK[5][27] = (88 * a2 * b2 * D3 + 44 * a2 * b2 * D2 + (-2320 * b4 - 726 * a4) * D1) / (121275 * a * b2);
            matrixK[5][28] = -(90112 * a2 * b2 * D3 + 45056 * a2 * b2 * D2 + (-84480 * b4 - 28672 * a4) * D1) / (24255 * a2 * b3);
            matrixK[5][29] = (45056 * a2 * b2 * D3 + 22528 * a2 * b2 * D2 + (211200 * b4 + 32256 * a4) * D1) / (363825 * a * b3);
            matrixK[5][30] = (2816 * a2 * b2 * D3 + 1408 * a2 * b2 * D2 + (-3072 * b4 - 3072 * a4) * D1) / (4851 * a2 * b2);
            matrixK[5][31] = -(1408 * a2 * b2 * D3 + 704 * a2 * b2 * D2 + (7680 * b4 + 3456 * a4) * D1) / (72765 * a * b2);
            matrixK[5][32] = 0;
            matrixK[5][33] = -(1441792 * a2 * b2 * D3 + 720896 * a2 * b2 * D2 + (344064 * a4 - 844800 * b4) * D1) / (363825 * a * b3);
            matrixK[5][34] = 0;
            matrixK[5][35] = (45056 * a2 * b2 * D3 + 22528 * a2 * b2 * D2 + (36864 * a4 - 30720 * b4) * D1) / (72765 * a * b2);

            matrixK[6][6] = (315392 * a2 * b2 * D3 + 157696 * a2 * b2 * D2 + (43008 * b4 + 1402368 * a4) * D1) / (363825 * a3 * b);
            matrixK[6][7] = 0;
            matrixK[6][8] = -(73216 * a2 * b2 * D3 + 332288 * a2 * b2 * D2 + (102144 * b4 - 250360 * a4) * D1) / (121275 * a3 * b2);
            matrixK[6][9] = (2288 * a2 * b2 * D3 + 10384 * a2 * b2 * D2 + (25536 * b4 - 25036 * a4) * D1) / (121275 * a2 * b2);
            matrixK[6][10] = -(157696 * a2 * b2 * D3 + 78848 * a2 * b2 * D2 + (21504 * b4 - 219120 * a4) * D1) / (363825 * a3 * b);
            matrixK[6][11] = (4928 * a2 * b2 * D3 + 2464 * a2 * b2 * D2 + (5376 * b4 - 21912 * a4) * D1) / (363825 * a2 * b);
            matrixK[6][12] = (8192 * a2 * b2 * D3 + 4096 * a2 * b2 * D2 + (-7168 * b4 - 17920 * a4) * D1) / (11025 * a3 * b2);
            matrixK[6][13] = -(256 * a2 * b2 * D3 + 128 * a2 * b2 * D2 + (-1792 * b4 - 1792 * a4) * D1) / (11025 * a2 * b2);
            matrixK[6][14] = (45056 * a2 * b2 * D3 + 22528 * a2 * b2 * D2 + (32256 * b4 + 211200 * a4) * D1) / (363825 * a3 * b);
            matrixK[6][15] = -(1408 * a2 * b2 * D3 + 704 * a2 * b2 * D2 + (8064 * b4 + 21120 * a4) * D1) / (363825 * a2 * b);
            matrixK[6][16] = -(16896 * a2 * b2 * D3 + 8448 * a2 * b2 * D2 + (25984 * b4 + 53240 * a4) * D1) / (121275 * a3 * b2);
            matrixK[6][17] = (528 * a2 * b2 * D3 + 264 * a2 * b2 * D2 + (6496 * b4 + 5324 * a4) * D1) / (121275 * a2 * b2);
            matrixK[6][18] = (28160 * a2 * b2 * D3 + 14080 * a2 * b2 * D2 + (8064 * b4 + 25080 * a4) * D1) / (363825 * a3 * b);
            matrixK[6][19] = -(880 * a2 * b2 * D3 + 440 * a2 * b2 * D2 + (2016 * b4 + 2508 * a4) * D1) / (363825 * a2 * b);
            matrixK[6][20] = (33792 * a2 * b2 * D3 + 16896 * a2 * b2 * D2 + (51968 * b4 - 340736 * a4) * D1) / (121275 * a3 * b2);
            matrixK[6][21] = 0;
            matrixK[6][22] = -(56320 * a2 * b2 * D3 + 28160 * a2 * b2 * D2 + (16128 * b4 - 160512 * a4) * D1) / (363825 * a3 * b);
            matrixK[6][23] = 0;
            matrixK[6][24] = -(16896 * a2 * b2 * D3 + 8448 * a2 * b2 * D2 + (25984 * b4 + 53240 * a4) * D1) / (121275 * a3 * b2);
            matrixK[6][25] = -(528 * a2 * b2 * D3 + 264 * a2 * b2 * D2 + (6496 * b4 + 5324 * a4) * D1) / (121275 * a2 * b2);
            matrixK[6][26] = (28160 * a2 * b2 * D3 + 14080 * a2 * b2 * D2 + (8064 * b4 + 25080 * a4) * D1) / (363825 * a3 * b);
            matrixK[6][27] = (880 * a2 * b2 * D3 + 440 * a2 * b2 * D2 + (2016 * b4 + 2508 * a4) * D1) / (363825 * a2 * b);
            matrixK[6][28] = (8192 * a2 * b2 * D3 + 4096 * a2 * b2 * D2 + (-7168 * b4 - 17920 * a4) * D1) / (11025 * a3 * b2);
            matrixK[6][29] = (256 * a2 * b2 * D3 + 128 * a2 * b2 * D2 + (-1792 * b4 - 1792 * a4) * D1) / (11025 * a2 * b2);
            matrixK[6][30] = (45056 * a2 * b2 * D3 + 22528 * a2 * b2 * D2 + (32256 * b4 + 211200 * a4) * D1) / (363825 * a3 * b);
            matrixK[6][31] = (1408 * a2 * b2 * D3 + 704 * a2 * b2 * D2 + (8064 * b4 + 21120 * a4) * D1) / (363825 * a2 * b);
            matrixK[6][32] = -(16384 * a2 * b2 * D3 + 8192 * a2 * b2 * D2 + (114688 * a4 - 14336 * b4) * D1) / (11025 * a3 * b2);
            matrixK[6][33] = 0;
            matrixK[6][34] = -(90112 * a2 * b2 * D3 + 45056 * a2 * b2 * D2 + (64512 * b4 - 1351680 * a4) * D1) / (363825 * a3 * b);
            matrixK[6][35] = 0;

            matrixK[7][7] = (78848 * a2 * b2 * D3 + 39424 * a2 * b2 * D2 + (23040 * b4 + 95616 * a4) * D1) / (1091475 * a * b);
            matrixK[7][8] = -(2288 * a2 * b2 * D3 + 10384 * a2 * b2 * D2 + (10944 * b4 - 9104 * a4) * D1) / (24255 * a2 * b2);
            matrixK[7][9] = -(1144 * a2 * b2 * D3 + 5192 * a2 * b2 * D2 + (10242 * a4 - 27360 * b4) * D1) / (363825 * a * b2);
            matrixK[7][10] = -(4928 * a2 * b2 * D3 + 2464 * a2 * b2 * D2 + (2304 * b4 - 7968 * a4) * D1) / (72765 * a2 * b);
            matrixK[7][11] = -(2464 * a2 * b2 * D3 + 1232 * a2 * b2 * D2 + (8964 * a4 - 5760 * b4) * D1) / (1091475 * a * b);
            matrixK[7][12] = (2816 * a2 * b2 * D3 + 1408 * a2 * b2 * D2 + (-8448 * b4 - 7168 * a4) * D1) / (24255 * a2 * b2);
            matrixK[7][13] = (1408 * a2 * b2 * D3 + 704 * a2 * b2 * D2 + (21120 * b4 + 8064 * a4) * D1) / (363825 * a * b2);
            matrixK[7][14] = (1408 * a2 * b2 * D3 + 704 * a2 * b2 * D2 + (3456 * b4 + 7680 * a4) * D1) / (72765 * a2 * b);
            matrixK[7][15] = (704 * a2 * b2 * D3 + 352 * a2 * b2 * D2 + (-8640 * b4 - 8640 * a4) * D1) / (1091475 * a * b);
            matrixK[7][16] = -(528 * a2 * b2 * D3 + 264 * a2 * b2 * D2 + (2784 * b4 + 1936 * a4) * D1) / (24255 * a2 * b2);
            matrixK[7][17] = -(88 * a2 * b2 * D3 + 44 * a2 * b2 * D2 + (-2320 * b4 - 726 * a4) * D1) / (121275 * a * b2);
            matrixK[7][18] = (880 * a2 * b2 * D3 + 440 * a2 * b2 * D2 + (864 * b4 + 912 * a4) * D1) / (72765 * a2 * b);
            matrixK[7][19] = (440 * a2 * b2 * D3 + 220 * a2 * b2 * D2 + (-2160 * b4 - 1026 * a4) * D1) / (1091475 * a * b);
            matrixK[7][20] = 0;
            matrixK[7][21] = (2816 * a2 * b2 * D3 + 1408 * a2 * b2 * D2 + (9280 * b4 - 7744 * a4) * D1) / (121275 * a * b2);
            matrixK[7][22] = 0;
            matrixK[7][23] = -(14080 * a2 * b2 * D3 + 7040 * a2 * b2 * D2 + (8640 * b4 - 10944 * a4) * D1) / (1091475 * a * b);
            matrixK[7][24] = (528 * a2 * b2 * D3 + 264 * a2 * b2 * D2 + (2784 * b4 + 1936 * a4) * D1) / (24255 * a2 * b2);
            matrixK[7][25] = -(88 * a2 * b2 * D3 + 44 * a2 * b2 * D2 + (-2320 * b4 - 726 * a4) * D1) / (121275 * a * b2);
            matrixK[7][26] = -(880 * a2 * b2 * D3 + 440 * a2 * b2 * D2 + (864 * b4 + 912 * a4) * D1) / (72765 * a2 * b);
            matrixK[7][27] = (440 * a2 * b2 * D3 + 220 * a2 * b2 * D2 + (-2160 * b4 - 1026 * a4) * D1) / (1091475 * a * b);
            matrixK[7][28] = -(2816 * a2 * b2 * D3 + 1408 * a2 * b2 * D2 + (-8448 * b4 - 7168 * a4) * D1) / (24255 * a2 * b2);
            matrixK[7][29] = (1408 * a2 * b2 * D3 + 704 * a2 * b2 * D2 + (21120 * b4 + 8064 * a4) * D1) / (363825 * a * b2);
            matrixK[7][30] = -(1408 * a2 * b2 * D3 + 704 * a2 * b2 * D2 + (3456 * b4 + 7680 * a4) * D1) / (72765 * a2 * b);
            matrixK[7][31] = (704 * a2 * b2 * D3 + 352 * a2 * b2 * D2 + (-8640 * b4 - 8640 * a4) * D1) / (1091475 * a * b);
            matrixK[7][32] = 0;
            matrixK[7][33] = -(45056 * a2 * b2 * D3 + 22528 * a2 * b2 * D2 + (86016 * a4 - 84480 * b4) * D1) / (363825 * a * b2);
            matrixK[7][34] = 0;
            matrixK[7][35] = -(22528 * a2 * b2 * D3 + 11264 * a2 * b2 * D2 + (34560 * b4 - 92160 * a4) * D1) / (1091475 * a * b);

            matrixK[8][8] = (3400496 * a2 * b2 * D3 + 1700248 * a2 * b2 * D2 + (2663116 * b4 + 2663116 * a4) * D1) / (121275 * a3 * b3);
            matrixK[8][9] = -(79508 * a2 * b2 * D3 + 360844 * a2 * b2 * D2 + (595174 * b4 + 145122 * a4) * D1) / (121275 * a2 * b3);
            matrixK[8][10] = (79508 * a2 * b2 * D3 + 360844 * a2 * b2 * D2 + (145122 * b4 + 595174 * a4) * D1) / (121275 * a3 * b2);
            matrixK[8][11] = -(3718 * a2 * b2 * D3 + 31889 * a2 * b2 * D2 + (64866 * b4 + 64866 * a4) * D1) / (242550 * a2 * b2);
            matrixK[8][12] = -(3131392 * a2 * b2 * D3 + 1565696 * a2 * b2 * D2 + (1874432 * a4 - 1120240 * b4) * D1) / (121275 * a3 * b3);
            matrixK[8][13] = (73216 * a2 * b2 * D3 + 332288 * a2 * b2 * D2 + (102144 * a4 - 250360 * b4) * D1) / (121275 * a2 * b3);
            matrixK[8][14] = (97856 * a2 * b2 * D3 + 48928 * a2 * b2 * D2 + (200832 * a4 - 40736 * b4) * D1) / (24255 * a3 * b2);
            matrixK[8][15] = -(2288 * a2 * b2 * D3 + 10384 * a2 * b2 * D2 + (10944 * a4 - 9104 * b4) * D1) / (24255 * a2 * b2);
            matrixK[8][16] = -(269104 * a2 * b2 * D3 + 134552 * a2 * b2 * D2 + (788684 * a4 - 333526 * b4) * D1) / (121275 * a3 * b3);
            matrixK[8][17] = (6292 * a2 * b2 * D3 + 28556 * a2 * b2 * D2 + (42978 * a4 - 74539 * b4) * D1) / (121275 * a2 * b3);
            matrixK[8][18] = -(18348 * a2 * b2 * D3 + 9174 * a2 * b2 * D2 + (36917 * b4 - 126566 * a4) * D1) / (121275 * a3 * b2);
            matrixK[8][19] = (858 * a2 * b2 * D3 + 3894 * a2 * b2 * D2 + (16501 * b4 - 13794 * a4) * D1) / (242550 * a2 * b2);
            matrixK[8][20] = (247808 * a2 * b2 * D3 + 123904 * a2 * b2 * D2 + (-234752 * b4 - 331760 * a4) * D1) / (121275 * a3 * b3);
            matrixK[8][21] = (7744 * a2 * b2 * D3 + 3872 * a2 * b2 * D2 + (-25152 * b4 - 12064 * a4) * D1) / (24255 * a2 * b3);
            matrixK[8][22] = (16896 * a2 * b2 * D3 + 8448 * a2 * b2 * D2 + (25984 * b4 + 53240 * a4) * D1) / (121275 * a3 * b2);
            matrixK[8][23] = (528 * a2 * b2 * D3 + 264 * a2 * b2 * D2 + (2784 * b4 + 1936 * a4) * D1) / (24255 * a2 * b2);
            matrixK[8][24] = (21296 * a2 * b2 * D3 + 10648 * a2 * b2 * D2 + (-98774 * b4 - 98774 * a4) * D1) / (121275 * a3 * b3);
            matrixK[8][25] = -(1452 * a2 * b2 * D3 + 726 * a2 * b2 * D2 + (15851 * b4 + 10933 * a4) * D1) / (121275 * a2 * b3);
            matrixK[8][26] = (1452 * a2 * b2 * D3 + 726 * a2 * b2 * D2 + (10933 * b4 + 15851 * a4) * D1) / (121275 * a3 * b2);
            matrixK[8][27] = -(18 * a2 * b2 * D3 + 9 * a2 * b2 * D2 + (-319 * b4 - 319 * a4) * D1) / (22050 * a2 * b2);
            matrixK[8][28] = (247808 * a2 * b2 * D3 + 123904 * a2 * b2 * D2 + (-331760 * b4 - 234752 * a4) * D1) / (121275 * a3 * b3);
            matrixK[8][29] = -(16896 * a2 * b2 * D3 + 8448 * a2 * b2 * D2 + (53240 * b4 + 25984 * a4) * D1) / (121275 * a2 * b3);
            matrixK[8][30] = -(7744 * a2 * b2 * D3 + 3872 * a2 * b2 * D2 + (-12064 * b4 - 25152 * a4) * D1) / (24255 * a3 * b2);
            matrixK[8][31] = (528 * a2 * b2 * D3 + 264 * a2 * b2 * D2 + (1936 * b4 + 2784 * a4) * D1) / (24255 * a2 * b2);
            matrixK[8][32] = (262144 * a2 * b2 * D3 + 131072 * a2 * b2 * D2 + (-71680 * b4 - 71680 * a4) * D1) / (11025 * a3 * b3);
            matrixK[8][33] = (90112 * a2 * b2 * D3 + 45056 * a2 * b2 * D2 + (-84480 * b4 - 28672 * a4) * D1) / (24255 * a2 * b3);
            matrixK[8][34] = -(90112 * a2 * b2 * D3 + 45056 * a2 * b2 * D2 + (-28672 * b4 - 84480 * a4) * D1) / (24255 * a3 * b2);
            matrixK[8][35] = -(2816 * a2 * b2 * D3 + 1408 * a2 * b2 * D2 + (-3072 * b4 - 3072 * a4) * D1) / (4851 * a2 * b2);

            matrixK[9][9] = (171248 * a2 * b2 * D3 + 85624 * a2 * b2 * D2 + (520908 * b4 + 30552 * a4) * D1) / (363825 * a * b3);
            matrixK[9][10] = -(3718 * a2 * b2 * D3 + 274439 * a2 * b2 * D2 + (64866 * b4 + 64866 * a4) * D1) / (242550 * a2 * b2);
            matrixK[9][11] = (4004 * a2 * b2 * D3 + 18172 * a2 * b2 * D2 + (28386 * b4 + 6828 * a4) * D1) / (363825 * a * b2);
            matrixK[9][12] = (73216 * a2 * b2 * D3 + 332288 * a2 * b2 * D2 + (102144 * a4 - 250360 * b4) * D1) / (121275 * a2 * b3);
            matrixK[9][13] = -(157696 * a2 * b2 * D3 + 78848 * a2 * b2 * D2 + (21504 * a4 - 219120 * b4) * D1) / (363825 * a * b3);
            matrixK[9][14] = -(2288 * a2 * b2 * D3 + 10384 * a2 * b2 * D2 + (10944 * a4 - 9104 * b4) * D1) / (24255 * a2 * b2);
            matrixK[9][15] = (4928 * a2 * b2 * D3 + 2464 * a2 * b2 * D2 + (2304 * a4 - 7968 * b4) * D1) / (72765 * a * b2);
            matrixK[9][16] = (6292 * a2 * b2 * D3 + 28556 * a2 * b2 * D2 + (42978 * a4 - 74539 * b4) * D1) / (121275 * a2 * b3);
            matrixK[9][17] = -(13552 * a2 * b2 * D3 + 6776 * a2 * b2 * D2 + (9048 * a4 - 65238 * b4) * D1) / (363825 * a * b3);
            matrixK[9][18] = (858 * a2 * b2 * D3 + 3894 * a2 * b2 * D2 + (16501 * b4 - 13794 * a4) * D1) / (242550 * a2 * b2);
            matrixK[9][19] = -(308 * a2 * b2 * D3 + 154 * a2 * b2 * D2 + (2407 * b4 - 484 * a4) * D1) / (121275 * a * b2);
            matrixK[9][20] = -(7744 * a2 * b2 * D3 + 3872 * a2 * b2 * D2 + (-58688 * b4 - 33176 * a4) * D1) / (121275 * a2 * b3);
            matrixK[9][21] = (3872 * a2 * b2 * D3 + 1936 * a2 * b2 * D2 + (62880 * b4 + 13572 * a4) * D1) / (363825 * a * b3);
            matrixK[9][22] = -(528 * a2 * b2 * D3 + 264 * a2 * b2 * D2 + (6496 * b4 + 5324 * a4) * D1) / (121275 * a2 * b2);
            matrixK[9][23] = (88 * a2 * b2 * D3 + 44 * a2 * b2 * D2 + (-2320 * b4 - 726 * a4) * D1) / (121275 * a * b2);
            matrixK[9][24] = (1452 * a2 * b2 * D3 + 726 * a2 * b2 * D2 + (15851 * b4 + 10933 * a4) * D1) / (121275 * a2 * b3);
            matrixK[9][25] = (2420 * a2 * b2 * D3 + 1210 * a2 * b2 * D2 + (7467 * b4 + 3393 * a4) * D1) / (363825 * a * b3);
            matrixK[9][26] = (18 * a2 * b2 * D3 + 9 * a2 * b2 * D2 + (-319 * b4 - 319 * a4) * D1) / (22050 * a2 * b2);
            matrixK[9][27] = (110 * a2 * b2 * D3 + 55 * a2 * b2 * D2 + (-551 * b4 - 363 * a4) * D1) / (242550 * a * b2);
            matrixK[9][28] = (16896 * a2 * b2 * D3 + 8448 * a2 * b2 * D2 + (53240 * b4 + 25984 * a4) * D1) / (121275 * a2 * b3);
            matrixK[9][29] = (28160 * a2 * b2 * D3 + 14080 * a2 * b2 * D2 + (25080 * b4 + 8064 * a4) * D1) / (363825 * a * b3);
            matrixK[9][30] = -(528 * a2 * b2 * D3 + 264 * a2 * b2 * D2 + (1936 * b4 + 2784 * a4) * D1) / (24255 * a2 * b2);
            matrixK[9][31] = -(880 * a2 * b2 * D3 + 440 * a2 * b2 * D2 + (912 * b4 + 864 * a4) * D1) / (72765 * a * b2);
            matrixK[9][32] = -(8192 * a2 * b2 * D3 + 4096 * a2 * b2 * D2 + (-17920 * b4 - 7168 * a4) * D1) / (11025 * a2 * b3);
            matrixK[9][33] = (45056 * a2 * b2 * D3 + 22528 * a2 * b2 * D2 + (211200 * b4 + 32256 * a4) * D1) / (363825 * a * b3);
            matrixK[9][34] = (2816 * a2 * b2 * D3 + 1408 * a2 * b2 * D2 + (-7168 * b4 - 8448 * a4) * D1) / (24255 * a2 * b2);
            matrixK[9][35] = -(1408 * a2 * b2 * D3 + 704 * a2 * b2 * D2 + (7680 * b4 + 3456 * a4) * D1) / (72765 * a * b2);

            matrixK[10][10] = (171248 * a2 * b2 * D3 + 85624 * a2 * b2 * D2 + (30552 * b4 + 520908 * a4) * D1) / (363825 * a3 * b);
            matrixK[10][11] = -(4004 * a2 * b2 * D3 + 18172 * a2 * b2 * D2 + (6828 * b4 + 28386 * a4) * D1) / (363825 * a2 * b);
            matrixK[10][12] = -(97856 * a2 * b2 * D3 + 48928 * a2 * b2 * D2 + (468608 * a4 - 112024 * b4) * D1) / (121275 * a3 * b2);
            matrixK[10][13] = (2288 * a2 * b2 * D3 + 10384 * a2 * b2 * D2 + (25536 * a4 - 25036 * b4) * D1) / (121275 * a2 * b2);
            matrixK[10][14] = -(48928 * a2 * b2 * D3 + 24464 * a2 * b2 * D2 + (45828 * b4 - 502080 * a4) * D1) / (363825 * a3 * b);
            matrixK[10][15] = (1144 * a2 * b2 * D3 + 5192 * a2 * b2 * D2 + (10242 * b4 - 27360 * a4) * D1) / (363825 * a2 * b);
            matrixK[10][16] = (18348 * a2 * b2 * D3 + 9174 * a2 * b2 * D2 + (36917 * b4 - 126566 * a4) * D1) / (121275 * a3 * b2);
            matrixK[10][17] = -(858 * a2 * b2 * D3 + 3894 * a2 * b2 * D2 + (16501 * b4 - 13794 * a4) * D1) / (242550 * a2 * b2);
            matrixK[10][18] = -(30580 * a2 * b2 * D3 + 15290 * a2 * b2 * D2 + (11457 * b4 - 59622 * a4) * D1) / (363825 * a3 * b);
            matrixK[10][19] = (1430 * a2 * b2 * D3 + 6490 * a2 * b2 * D2 + (5121 * b4 - 6498 * a4) * D1) / (727650 * a2 * b);
            matrixK[10][20] = -(16896 * a2 * b2 * D3 + 8448 * a2 * b2 * D2 + (25984 * b4 + 53240 * a4) * D1) / (121275 * a3 * b2);
            matrixK[10][21] = -(528 * a2 * b2 * D3 + 264 * a2 * b2 * D2 + (2784 * b4 + 1936 * a4) * D1) / (24255 * a2 * b2);
            matrixK[10][22] = (28160 * a2 * b2 * D3 + 14080 * a2 * b2 * D2 + (8064 * b4 + 25080 * a4) * D1) / (363825 * a3 * b);
            matrixK[10][23] = (880 * a2 * b2 * D3 + 440 * a2 * b2 * D2 + (864 * b4 + 912 * a4) * D1) / (72765 * a2 * b);
            matrixK[10][24] = -(1452 * a2 * b2 * D3 + 726 * a2 * b2 * D2 + (10933 * b4 + 15851 * a4) * D1) / (121275 * a3 * b2);
            matrixK[10][25] = (18 * a2 * b2 * D3 + 9 * a2 * b2 * D2 + (-319 * b4 - 319 * a4) * D1) / (22050 * a2 * b2);
            matrixK[10][26] = (2420 * a2 * b2 * D3 + 1210 * a2 * b2 * D2 + (3393 * b4 + 7467 * a4) * D1) / (363825 * a3 * b);
            matrixK[10][27] = -(110 * a2 * b2 * D3 + 55 * a2 * b2 * D2 + (-363 * b4 - 551 * a4) * D1) / (242550 * a2 * b);
            matrixK[10][28] = (7744 * a2 * b2 * D3 + 3872 * a2 * b2 * D2 + (-33176 * b4 - 58688 * a4) * D1) / (121275 * a3 * b2);
            matrixK[10][29] = -(528 * a2 * b2 * D3 + 264 * a2 * b2 * D2 + (5324 * b4 + 6496 * a4) * D1) / (121275 * a2 * b2);
            matrixK[10][30] = (3872 * a2 * b2 * D3 + 1936 * a2 * b2 * D2 + (13572 * b4 + 62880 * a4) * D1) / (363825 * a3 * b);
            matrixK[10][31] = -(88 * a2 * b2 * D3 + 44 * a2 * b2 * D2 + (-726 * b4 - 2320 * a4) * D1) / (121275 * a2 * b);
            matrixK[10][32] = (8192 * a2 * b2 * D3 + 4096 * a2 * b2 * D2 + (-7168 * b4 - 17920 * a4) * D1) / (11025 * a3 * b2);
            matrixK[10][33] = (2816 * a2 * b2 * D3 + 1408 * a2 * b2 * D2 + (-8448 * b4 - 7168 * a4) * D1) / (24255 * a2 * b2);
            matrixK[10][34] = (45056 * a2 * b2 * D3 + 22528 * a2 * b2 * D2 + (32256 * b4 + 211200 * a4) * D1) / (363825 * a3 * b);
            matrixK[10][35] = (1408 * a2 * b2 * D3 + 704 * a2 * b2 * D2 + (3456 * b4 + 7680 * a4) * D1) / (72765 * a2 * b);

            matrixK[11][11] = (8624 * a2 * b2 * D3 + 4312 * a2 * b2 * D2 + (5976 * b4 + 5976 * a4) * D1) / (1091475 * a * b);
            matrixK[11][12] = (2288 * a2 * b2 * D3 + 10384 * a2 * b2 * D2 + (25536 * a4 - 25036 * b4) * D1) / (121275 * a2 * b2);
            matrixK[11][13] = -(4928 * a2 * b2 * D3 + 2464 * a2 * b2 * D2 + (5376 * a4 - 21912 * b4) * D1) / (363825 * a * b2);
            matrixK[11][14] = (1144 * a2 * b2 * D3 + 5192 * a2 * b2 * D2 + (10242 * b4 - 27360 * a4) * D1) / (363825 * a2 * b);
            matrixK[11][15] = -(2464 * a2 * b2 * D3 + 1232 * a2 * b2 * D2 + (8964 * b4 - 5760 * a4) * D1) / (1091475 * a * b);
            matrixK[11][16] = -(858 * a2 * b2 * D3 + 3894 * a2 * b2 * D2 + (16501 * b4 - 13794 * a4) * D1) / (242550 * a2 * b2);
            matrixK[11][17] = (308 * a2 * b2 * D3 + 154 * a2 * b2 * D2 + (2407 * b4 - 484 * a4) * D1) / (121275 * a * b2);
            matrixK[11][18] = (1430 * a2 * b2 * D3 + 6490 * a2 * b2 * D2 + (5121 * b4 - 6498 * a4) * D1) / (727650 * a2 * b);
            matrixK[11][19] = -(1540 * a2 * b2 * D3 + 770 * a2 * b2 * D2 + (2241 * b4 - 684 * a4) * D1) / (1091475 * a * b);
            matrixK[11][20] = (528 * a2 * b2 * D3 + 264 * a2 * b2 * D2 + (6496 * b4 + 5324 * a4) * D1) / (121275 * a2 * b2);
            matrixK[11][21] = -(88 * a2 * b2 * D3 + 44 * a2 * b2 * D2 + (-2320 * b4 - 726 * a4) * D1) / (121275 * a * b2);
            matrixK[11][22] = -(880 * a2 * b2 * D3 + 440 * a2 * b2 * D2 + (2016 * b4 + 2508 * a4) * D1) / (363825 * a2 * b);
            matrixK[11][23] = (440 * a2 * b2 * D3 + 220 * a2 * b2 * D2 + (-2160 * b4 - 1026 * a4) * D1) / (1091475 * a * b);
            matrixK[11][24] = -(18 * a2 * b2 * D3 + 9 * a2 * b2 * D2 + (-319 * b4 - 319 * a4) * D1) / (22050 * a2 * b2);
            matrixK[11][25] = -(110 * a2 * b2 * D3 + 55 * a2 * b2 * D2 + (-551 * b4 - 363 * a4) * D1) / (242550 * a * b2);
            matrixK[11][26] = (110 * a2 * b2 * D3 + 55 * a2 * b2 * D2 + (-363 * b4 - 551 * a4) * D1) / (242550 * a2 * b);
            matrixK[11][27] = (550 * a2 * b2 * D3 + 275 * a2 * b2 * D2 + (-513 * b4 - 513 * a4) * D1) / (2182950 * a * b);
            matrixK[11][28] = (528 * a2 * b2 * D3 + 264 * a2 * b2 * D2 + (5324 * b4 + 6496 * a4) * D1) / (121275 * a2 * b2);
            matrixK[11][29] = (880 * a2 * b2 * D3 + 440 * a2 * b2 * D2 + (2508 * b4 + 2016 * a4) * D1) / (363825 * a * b2);
            matrixK[11][30] = (88 * a2 * b2 * D3 + 44 * a2 * b2 * D2 + (-726 * b4 - 2320 * a4) * D1) / (121275 * a2 * b);
            matrixK[11][31] = (440 * a2 * b2 * D3 + 220 * a2 * b2 * D2 + (-1026 * b4 - 2160 * a4) * D1) / (1091475 * a * b);
            matrixK[11][32] = -(256 * a2 * b2 * D3 + 128 * a2 * b2 * D2 + (-1792 * b4 - 1792 * a4) * D1) / (11025 * a2 * b2);
            matrixK[11][33] = (1408 * a2 * b2 * D3 + 704 * a2 * b2 * D2 + (21120 * b4 + 8064 * a4) * D1) / (363825 * a * b2);
            matrixK[11][34] = -(1408 * a2 * b2 * D3 + 704 * a2 * b2 * D2 + (8064 * b4 + 21120 * a4) * D1) / (363825 * a2 * b);
            matrixK[11][35] = (704 * a2 * b2 * D3 + 352 * a2 * b2 * D2 + (-8640 * b4 - 8640 * a4) * D1) / (1091475 * a * b);

            matrixK[12][12] = (6262784 * a2 * b2 * D3 + 3131392 * a2 * b2 * D2 + (7169536 * b4 + 3748864 * a4) * D1) / (121275 * a3 * b3);
            matrixK[12][13] = -(146432 * a2 * b2 * D3 + 664576 * a2 * b2 * D2 + (1602304 * b4 + 204288 * a4) * D1) / (121275 * a2 * b3);
            matrixK[12][14] = 0;
            matrixK[12][15] = 0;
            matrixK[12][16] = -(3131392 * a2 * b2 * D3 + 1565696 * a2 * b2 * D2 + (1874432 * a4 - 1120240 * b4) * D1) / (121275 * a3 * b3);
            matrixK[12][17] = (73216 * a2 * b2 * D3 + 332288 * a2 * b2 * D2 + (102144 * a4 - 250360 * b4) * D1) / (121275 * a2 * b3);
            matrixK[12][18] = (97856 * a2 * b2 * D3 + 48928 * a2 * b2 * D2 + (468608 * a4 - 112024 * b4) * D1) / (121275 * a3 * b2);
            matrixK[12][19] = -(2288 * a2 * b2 * D3 + 10384 * a2 * b2 * D2 + (25536 * a4 - 25036 * b4) * D1) / (121275 * a2 * b2);
            matrixK[12][20] = (262144 * a2 * b2 * D3 + 131072 * a2 * b2 * D2 + (-71680 * b4 - 71680 * a4) * D1) / (11025 * a3 * b3);
            matrixK[12][21] = (90112 * a2 * b2 * D3 + 45056 * a2 * b2 * D2 + (-84480 * b4 - 28672 * a4) * D1) / (24255 * a2 * b3);
            matrixK[12][22] = -(8192 * a2 * b2 * D3 + 4096 * a2 * b2 * D2 + (-7168 * b4 - 17920 * a4) * D1) / (11025 * a3 * b2);
            matrixK[12][23] = -(2816 * a2 * b2 * D3 + 1408 * a2 * b2 * D2 + (-8448 * b4 - 7168 * a4) * D1) / (24255 * a2 * b2);
            matrixK[12][24] = (247808 * a2 * b2 * D3 + 123904 * a2 * b2 * D2 + (-331760 * b4 - 234752 * a4) * D1) / (121275 * a3 * b3);
            matrixK[12][25] = -(16896 * a2 * b2 * D3 + 8448 * a2 * b2 * D2 + (53240 * b4 + 25984 * a4) * D1) / (121275 * a2 * b3);
            matrixK[12][26] = -(7744 * a2 * b2 * D3 + 3872 * a2 * b2 * D2 + (-33176 * b4 - 58688 * a4) * D1) / (121275 * a3 * b2);
            matrixK[12][27] = (528 * a2 * b2 * D3 + 264 * a2 * b2 * D2 + (5324 * b4 + 6496 * a4) * D1) / (121275 * a2 * b2);
            matrixK[12][28] = -(495616 * a2 * b2 * D3 + 247808 * a2 * b2 * D2 + (2123264 * b4 - 469504 * a4) * D1) / (121275 * a3 * b3);
            matrixK[12][29] = (33792 * a2 * b2 * D3 + 16896 * a2 * b2 * D2 + (51968 * a4 - 340736 * b4) * D1) / (121275 * a2 * b3);
            matrixK[12][30] = 0;
            matrixK[12][31] = 0;
            matrixK[12][32] = -(524288 * a2 * b2 * D3 + 262144 * a2 * b2 * D2 + (458752 * b4 - 143360 * a4) * D1) / (11025 * a3 * b3);
            matrixK[12][33] = -(180224 * a2 * b2 * D3 + 90112 * a2 * b2 * D2 + (540672 * b4 - 57344 * a4) * D1) / (24255 * a2 * b3);
            matrixK[12][34] = 0;
            matrixK[12][35] = 0;

            matrixK[13][13] = (315392 * a2 * b2 * D3 + 157696 * a2 * b2 * D2 + (1402368 * b4 + 43008 * a4) * D1) / (363825 * a * b3);
            matrixK[13][14] = 0;
            matrixK[13][15] = 0;
            matrixK[13][16] = (73216 * a2 * b2 * D3 + 332288 * a2 * b2 * D2 + (102144 * a4 - 250360 * b4) * D1) / (121275 * a2 * b3);
            matrixK[13][17] = -(157696 * a2 * b2 * D3 + 78848 * a2 * b2 * D2 + (21504 * a4 - 219120 * b4) * D1) / (363825 * a * b3);
            matrixK[13][18] = -(2288 * a2 * b2 * D3 + 10384 * a2 * b2 * D2 + (25536 * a4 - 25036 * b4) * D1) / (121275 * a2 * b2);
            matrixK[13][19] = (4928 * a2 * b2 * D3 + 2464 * a2 * b2 * D2 + (5376 * a4 - 21912 * b4) * D1) / (363825 * a * b2);
            matrixK[13][20] = -(8192 * a2 * b2 * D3 + 4096 * a2 * b2 * D2 + (-17920 * b4 - 7168 * a4) * D1) / (11025 * a2 * b3);
            matrixK[13][21] = (45056 * a2 * b2 * D3 + 22528 * a2 * b2 * D2 + (211200 * b4 + 32256 * a4) * D1) / (363825 * a * b3);
            matrixK[13][22] = (256 * a2 * b2 * D3 + 128 * a2 * b2 * D2 + (-1792 * b4 - 1792 * a4) * D1) / (11025 * a2 * b2);
            matrixK[13][23] = -(1408 * a2 * b2 * D3 + 704 * a2 * b2 * D2 + (21120 * b4 + 8064 * a4) * D1) / (363825 * a * b2);
            matrixK[13][24] = (16896 * a2 * b2 * D3 + 8448 * a2 * b2 * D2 + (53240 * b4 + 25984 * a4) * D1) / (121275 * a2 * b3);
            matrixK[13][25] = (28160 * a2 * b2 * D3 + 14080 * a2 * b2 * D2 + (25080 * b4 + 8064 * a4) * D1) / (363825 * a * b3);
            matrixK[13][26] = -(528 * a2 * b2 * D3 + 264 * a2 * b2 * D2 + (5324 * b4 + 6496 * a4) * D1) / (121275 * a2 * b2);
            matrixK[13][27] = -(880 * a2 * b2 * D3 + 440 * a2 * b2 * D2 + (2508 * b4 + 2016 * a4) * D1) / (363825 * a * b2);
            matrixK[13][28] = -(33792 * a2 * b2 * D3 + 16896 * a2 * b2 * D2 + (51968 * a4 - 340736 * b4) * D1) / (121275 * a2 * b3);
            matrixK[13][29] = -(56320 * a2 * b2 * D3 + 28160 * a2 * b2 * D2 + (16128 * a4 - 160512 * b4) * D1) / (363825 * a * b3);
            matrixK[13][30] = 0;
            matrixK[13][31] = 0;
            matrixK[13][32] = (16384 * a2 * b2 * D3 + 8192 * a2 * b2 * D2 + (114688 * b4 - 14336 * a4) * D1) / (11025 * a2 * b3);
            matrixK[13][33] = -(90112 * a2 * b2 * D3 + 45056 * a2 * b2 * D2 + (64512 * a4 - 1351680 * b4) * D1) / (363825 * a * b3);
            matrixK[13][34] = 0;
            matrixK[13][35] = 0;

            matrixK[14][14] = (1565696 * a2 * b2 * D3 + 782848 * a2 * b2 * D2 + (488832 * b4 + 2008320 * a4) * D1) / (363825 * a3 * b);
            matrixK[14][15] = -(36608 * a2 * b2 * D3 + 166144 * a2 * b2 * D2 + (109248 * b4 + 109440 * a4) * D1) / (363825 * a2 * b);
            matrixK[14][16] = -(97856 * a2 * b2 * D3 + 48928 * a2 * b2 * D2 + (200832 * a4 - 40736 * b4) * D1) / (24255 * a3 * b2);
            matrixK[14][17] = (2288 * a2 * b2 * D3 + 10384 * a2 * b2 * D2 + (10944 * a4 - 9104 * b4) * D1) / (24255 * a2 * b2);
            matrixK[14][18] = -(48928 * a2 * b2 * D3 + 24464 * a2 * b2 * D2 + (45828 * b4 - 502080 * a4) * D1) / (363825 * a3 * b);
            matrixK[14][19] = (1144 * a2 * b2 * D3 + 5192 * a2 * b2 * D2 + (10242 * b4 - 27360 * a4) * D1) / (363825 * a2 * b);
            matrixK[14][20] = (90112 * a2 * b2 * D3 + 45056 * a2 * b2 * D2 + (-28672 * b4 - 84480 * a4) * D1) / (24255 * a3 * b2);
            matrixK[14][21] = (2816 * a2 * b2 * D3 + 1408 * a2 * b2 * D2 + (-3072 * b4 - 3072 * a4) * D1) / (4851 * a2 * b2);
            matrixK[14][22] = (45056 * a2 * b2 * D3 + 22528 * a2 * b2 * D2 + (32256 * b4 + 211200 * a4) * D1) / (363825 * a3 * b);
            matrixK[14][23] = (1408 * a2 * b2 * D3 + 704 * a2 * b2 * D2 + (3456 * b4 + 7680 * a4) * D1) / (72765 * a2 * b);
            matrixK[14][24] = (7744 * a2 * b2 * D3 + 3872 * a2 * b2 * D2 + (-12064 * b4 - 25152 * a4) * D1) / (24255 * a3 * b2);
            matrixK[14][25] = -(528 * a2 * b2 * D3 + 264 * a2 * b2 * D2 + (1936 * b4 + 2784 * a4) * D1) / (24255 * a2 * b2);
            matrixK[14][26] = (3872 * a2 * b2 * D3 + 1936 * a2 * b2 * D2 + (13572 * b4 + 62880 * a4) * D1) / (363825 * a3 * b);
            matrixK[14][27] = -(88 * a2 * b2 * D3 + 44 * a2 * b2 * D2 + (-726 * b4 - 2320 * a4) * D1) / (121275 * a2 * b);
            matrixK[14][28] = 0;
            matrixK[14][29] = 0;
            matrixK[14][30] = -(123904 * a2 * b2 * D3 + 61952 * a2 * b2 * D2 + (144768 * b4 - 251520 * a4) * D1) / (363825 * a3 * b);
            matrixK[14][31] = (2816 * a2 * b2 * D3 + 1408 * a2 * b2 * D2 + (9280 * a4 - 7744 * b4) * D1) / (121275 * a2 * b);
            matrixK[14][32] = 0;
            matrixK[14][33] = 0;
            matrixK[14][34] = -(1441792 * a2 * b2 * D3 + 720896 * a2 * b2 * D2 + (344064 * b4 - 844800 * a4) * D1) / (363825 * a3 * b);
            matrixK[14][35] = -(45056 * a2 * b2 * D3 + 22528 * a2 * b2 * D2 + (36864 * b4 - 30720 * a4) * D1) / (72765 * a2 * b);

            matrixK[15][15] = (78848 * a2 * b2 * D3 + 39424 * a2 * b2 * D2 + (95616 * b4 + 23040 * a4) * D1) / (1091475 * a * b);
            matrixK[15][16] = (2288 * a2 * b2 * D3 + 10384 * a2 * b2 * D2 + (10944 * a4 - 9104 * b4) * D1) / (24255 * a2 * b2);
            matrixK[15][17] = -(4928 * a2 * b2 * D3 + 2464 * a2 * b2 * D2 + (2304 * a4 - 7968 * b4) * D1) / (72765 * a * b2);
            matrixK[15][18] = (1144 * a2 * b2 * D3 + 5192 * a2 * b2 * D2 + (10242 * b4 - 27360 * a4) * D1) / (363825 * a2 * b);
            matrixK[15][19] = -(2464 * a2 * b2 * D3 + 1232 * a2 * b2 * D2 + (8964 * b4 - 5760 * a4) * D1) / (1091475 * a * b);
            matrixK[15][20] = -(2816 * a2 * b2 * D3 + 1408 * a2 * b2 * D2 + (-7168 * b4 - 8448 * a4) * D1) / (24255 * a2 * b2);
            matrixK[15][21] = (1408 * a2 * b2 * D3 + 704 * a2 * b2 * D2 + (7680 * b4 + 3456 * a4) * D1) / (72765 * a * b2);
            matrixK[15][22] = -(1408 * a2 * b2 * D3 + 704 * a2 * b2 * D2 + (8064 * b4 + 21120 * a4) * D1) / (363825 * a2 * b);
            matrixK[15][23] = (704 * a2 * b2 * D3 + 352 * a2 * b2 * D2 + (-8640 * b4 - 8640 * a4) * D1) / (1091475 * a * b);
            matrixK[15][24] = (528 * a2 * b2 * D3 + 264 * a2 * b2 * D2 + (1936 * b4 + 2784 * a4) * D1) / (24255 * a2 * b2);
            matrixK[15][25] = (880 * a2 * b2 * D3 + 440 * a2 * b2 * D2 + (912 * b4 + 864 * a4) * D1) / (72765 * a * b2);
            matrixK[15][26] = (88 * a2 * b2 * D3 + 44 * a2 * b2 * D2 + (-726 * b4 - 2320 * a4) * D1) / (121275 * a2 * b);
            matrixK[15][27] = (440 * a2 * b2 * D3 + 220 * a2 * b2 * D2 + (-1026 * b4 - 2160 * a4) * D1) / (1091475 * a * b);
            matrixK[15][28] = 0;
            matrixK[15][29] = 0;
            matrixK[15][30] = -(2816 * a2 * b2 * D3 + 1408 * a2 * b2 * D2 + (9280 * a4 - 7744 * b4) * D1) / (121275 * a2 * b);
            matrixK[15][31] = -(14080 * a2 * b2 * D3 + 7040 * a2 * b2 * D2 + (8640 * a4 - 10944 * b4) * D1) / (1091475 * a * b);
            matrixK[15][32] = 0;
            matrixK[15][33] = 0;
            matrixK[15][34] = (45056 * a2 * b2 * D3 + 22528 * a2 * b2 * D2 + (86016 * b4 - 84480 * a4) * D1) / (363825 * a2 * b);
            matrixK[15][35] = -(22528 * a2 * b2 * D3 + 11264 * a2 * b2 * D2 + (34560 * a4 - 92160 * b4) * D1) / (1091475 * a * b);

            matrixK[16][16] = (3400496 * a2 * b2 * D3 + 1700248 * a2 * b2 * D2 + (2663116 * b4 + 2663116 * a4) * D1) / (121275 * a3 * b3);
            matrixK[16][17] = -(79508 * a2 * b2 * D3 + 360844 * a2 * b2 * D2 + (595174 * b4 + 145122 * a4) * D1) / (121275 * a2 * b3);
            matrixK[16][18] = -(79508 * a2 * b2 * D3 + 360844 * a2 * b2 * D2 + (145122 * b4 + 595174 * a4) * D1) / (121275 * a3 * b2);
            matrixK[16][19] = (3718 * a2 * b2 * D3 + 31889 * a2 * b2 * D2 + (64866 * b4 + 64866 * a4) * D1) / (242550 * a2 * b2);
            matrixK[16][20] = -(3131392 * a2 * b2 * D3 + 1565696 * a2 * b2 * D2 + (1874432 * b4 - 1120240 * a4) * D1) / (121275 * a3 * b3);
            matrixK[16][21] = -(97856 * a2 * b2 * D3 + 48928 * a2 * b2 * D2 + (200832 * b4 - 40736 * a4) * D1) / (24255 * a2 * b3);
            matrixK[16][22] = (73216 * a2 * b2 * D3 + 332288 * a2 * b2 * D2 + (102144 * b4 - 250360 * a4) * D1) / (121275 * a3 * b2);
            matrixK[16][23] = (2288 * a2 * b2 * D3 + 10384 * a2 * b2 * D2 + (10944 * b4 - 9104 * a4) * D1) / (24255 * a2 * b2);
            matrixK[16][24] = -(269104 * a2 * b2 * D3 + 134552 * a2 * b2 * D2 + (788684 * b4 - 333526 * a4) * D1) / (121275 * a3 * b3);
            matrixK[16][25] = (18348 * a2 * b2 * D3 + 9174 * a2 * b2 * D2 + (36917 * a4 - 126566 * b4) * D1) / (121275 * a2 * b3);
            matrixK[16][26] = (6292 * a2 * b2 * D3 + 28556 * a2 * b2 * D2 + (42978 * b4 - 74539 * a4) * D1) / (121275 * a3 * b2);
            matrixK[16][27] = -(858 * a2 * b2 * D3 + 3894 * a2 * b2 * D2 + (16501 * a4 - 13794 * b4) * D1) / (242550 * a2 * b2);
            matrixK[16][28] = (247808 * a2 * b2 * D3 + 123904 * a2 * b2 * D2 + (-331760 * b4 - 234752 * a4) * D1) / (121275 * a3 * b3);
            matrixK[16][29] = -(16896 * a2 * b2 * D3 + 8448 * a2 * b2 * D2 + (53240 * b4 + 25984 * a4) * D1) / (121275 * a2 * b3);
            matrixK[16][30] = (7744 * a2 * b2 * D3 + 3872 * a2 * b2 * D2 + (-12064 * b4 - 25152 * a4) * D1) / (24255 * a3 * b2);
            matrixK[16][31] = -(528 * a2 * b2 * D3 + 264 * a2 * b2 * D2 + (1936 * b4 + 2784 * a4) * D1) / (24255 * a2 * b2);
            matrixK[16][32] = (262144 * a2 * b2 * D3 + 131072 * a2 * b2 * D2 + (-71680 * b4 - 71680 * a4) * D1) / (11025 * a3 * b3);
            matrixK[16][33] = (90112 * a2 * b2 * D3 + 45056 * a2 * b2 * D2 + (-84480 * b4 - 28672 * a4) * D1) / (24255 * a2 * b3);
            matrixK[16][34] = (90112 * a2 * b2 * D3 + 45056 * a2 * b2 * D2 + (-28672 * b4 - 84480 * a4) * D1) / (24255 * a3 * b2);
            matrixK[16][35] = (2816 * a2 * b2 * D3 + 1408 * a2 * b2 * D2 + (-3072 * b4 - 3072 * a4) * D1) / (4851 * a2 * b2);

            matrixK[17][17] = (171248 * a2 * b2 * D3 + 85624 * a2 * b2 * D2 + (520908 * b4 + 30552 * a4) * D1) / (363825 * a * b3);
            matrixK[17][18] = (3718 * a2 * b2 * D3 + 274439 * a2 * b2 * D2 + (64866 * b4 + 64866 * a4) * D1) / (242550 * a2 * b2);
            matrixK[17][19] = -(4004 * a2 * b2 * D3 + 18172 * a2 * b2 * D2 + (28386 * b4 + 6828 * a4) * D1) / (363825 * a * b2);
            matrixK[17][20] = (97856 * a2 * b2 * D3 + 48928 * a2 * b2 * D2 + (468608 * b4 - 112024 * a4) * D1) / (121275 * a2 * b3);
            matrixK[17][21] = -(48928 * a2 * b2 * D3 + 24464 * a2 * b2 * D2 + (45828 * a4 - 502080 * b4) * D1) / (363825 * a * b3);
            matrixK[17][22] = -(2288 * a2 * b2 * D3 + 10384 * a2 * b2 * D2 + (25536 * b4 - 25036 * a4) * D1) / (121275 * a2 * b2);
            matrixK[17][23] = (1144 * a2 * b2 * D3 + 5192 * a2 * b2 * D2 + (10242 * a4 - 27360 * b4) * D1) / (363825 * a * b2);
            matrixK[17][24] = -(18348 * a2 * b2 * D3 + 9174 * a2 * b2 * D2 + (36917 * a4 - 126566 * b4) * D1) / (121275 * a2 * b3);
            matrixK[17][25] = -(30580 * a2 * b2 * D3 + 15290 * a2 * b2 * D2 + (11457 * a4 - 59622 * b4) * D1) / (363825 * a * b3);
            matrixK[17][26] = (858 * a2 * b2 * D3 + 3894 * a2 * b2 * D2 + (16501 * a4 - 13794 * b4) * D1) / (242550 * a2 * b2);
            matrixK[17][27] = (1430 * a2 * b2 * D3 + 6490 * a2 * b2 * D2 + (5121 * a4 - 6498 * b4) * D1) / (727650 * a * b2);
            matrixK[17][28] = (16896 * a2 * b2 * D3 + 8448 * a2 * b2 * D2 + (53240 * b4 + 25984 * a4) * D1) / (121275 * a2 * b3);
            matrixK[17][29] = (28160 * a2 * b2 * D3 + 14080 * a2 * b2 * D2 + (25080 * b4 + 8064 * a4) * D1) / (363825 * a * b3);
            matrixK[17][30] = (528 * a2 * b2 * D3 + 264 * a2 * b2 * D2 + (1936 * b4 + 2784 * a4) * D1) / (24255 * a2 * b2);
            matrixK[17][31] = (880 * a2 * b2 * D3 + 440 * a2 * b2 * D2 + (912 * b4 + 864 * a4) * D1) / (72765 * a * b2);
            matrixK[17][32] = -(8192 * a2 * b2 * D3 + 4096 * a2 * b2 * D2 + (-17920 * b4 - 7168 * a4) * D1) / (11025 * a2 * b3);
            matrixK[17][33] = (45056 * a2 * b2 * D3 + 22528 * a2 * b2 * D2 + (211200 * b4 + 32256 * a4) * D1) / (363825 * a * b3);
            matrixK[17][34] = -(2816 * a2 * b2 * D3 + 1408 * a2 * b2 * D2 + (-7168 * b4 - 8448 * a4) * D1) / (24255 * a2 * b2);
            matrixK[17][35] = (1408 * a2 * b2 * D3 + 704 * a2 * b2 * D2 + (7680 * b4 + 3456 * a4) * D1) / (72765 * a * b2);

            matrixK[18][18] = (171248 * a2 * b2 * D3 + 85624 * a2 * b2 * D2 + (30552 * b4 + 520908 * a4) * D1) / (363825 * a3 * b);
            matrixK[18][19] = -(4004 * a2 * b2 * D3 + 18172 * a2 * b2 * D2 + (6828 * b4 + 28386 * a4) * D1) / (363825 * a2 * b);
            matrixK[18][20] = (73216 * a2 * b2 * D3 + 332288 * a2 * b2 * D2 + (102144 * b4 - 250360 * a4) * D1) / (121275 * a3 * b2);
            matrixK[18][21] = (2288 * a2 * b2 * D3 + 10384 * a2 * b2 * D2 + (10944 * b4 - 9104 * a4) * D1) / (24255 * a2 * b2);
            matrixK[18][22] = -(157696 * a2 * b2 * D3 + 78848 * a2 * b2 * D2 + (21504 * b4 - 219120 * a4) * D1) / (363825 * a3 * b);
            matrixK[18][23] = -(4928 * a2 * b2 * D3 + 2464 * a2 * b2 * D2 + (2304 * b4 - 7968 * a4) * D1) / (72765 * a2 * b);
            matrixK[18][24] = (6292 * a2 * b2 * D3 + 28556 * a2 * b2 * D2 + (42978 * b4 - 74539 * a4) * D1) / (121275 * a3 * b2);
            matrixK[18][25] = -(858 * a2 * b2 * D3 + 3894 * a2 * b2 * D2 + (16501 * a4 - 13794 * b4) * D1) / (242550 * a2 * b2);
            matrixK[18][26] = -(13552 * a2 * b2 * D3 + 6776 * a2 * b2 * D2 + (9048 * b4 - 65238 * a4) * D1) / (363825 * a3 * b);
            matrixK[18][27] = (308 * a2 * b2 * D3 + 154 * a2 * b2 * D2 + (2407 * a4 - 484 * b4) * D1) / (121275 * a2 * b);
            matrixK[18][28] = -(7744 * a2 * b2 * D3 + 3872 * a2 * b2 * D2 + (-33176 * b4 - 58688 * a4) * D1) / (121275 * a3 * b2);
            matrixK[18][29] = (528 * a2 * b2 * D3 + 264 * a2 * b2 * D2 + (5324 * b4 + 6496 * a4) * D1) / (121275 * a2 * b2);
            matrixK[18][30] = (3872 * a2 * b2 * D3 + 1936 * a2 * b2 * D2 + (13572 * b4 + 62880 * a4) * D1) / (363825 * a3 * b);
            matrixK[18][31] = -(88 * a2 * b2 * D3 + 44 * a2 * b2 * D2 + (-726 * b4 - 2320 * a4) * D1) / (121275 * a2 * b);
            matrixK[18][32] = -(8192 * a2 * b2 * D3 + 4096 * a2 * b2 * D2 + (-7168 * b4 - 17920 * a4) * D1) / (11025 * a3 * b2);
            matrixK[18][33] = -(2816 * a2 * b2 * D3 + 1408 * a2 * b2 * D2 + (-8448 * b4 - 7168 * a4) * D1) / (24255 * a2 * b2);
            matrixK[18][34] = (45056 * a2 * b2 * D3 + 22528 * a2 * b2 * D2 + (32256 * b4 + 211200 * a4) * D1) / (363825 * a3 * b);
            matrixK[18][35] = (1408 * a2 * b2 * D3 + 704 * a2 * b2 * D2 + (3456 * b4 + 7680 * a4) * D1) / (72765 * a2 * b);

            matrixK[19][19] = (8624 * a2 * b2 * D3 + 4312 * a2 * b2 * D2 + (5976 * b4 + 5976 * a4) * D1) / (1091475 * a * b);
            matrixK[19][20] = -(2288 * a2 * b2 * D3 + 10384 * a2 * b2 * D2 + (25536 * b4 - 25036 * a4) * D1) / (121275 * a2 * b2);
            matrixK[19][21] = (1144 * a2 * b2 * D3 + 5192 * a2 * b2 * D2 + (10242 * a4 - 27360 * b4) * D1) / (363825 * a * b2);
            matrixK[19][22] = (4928 * a2 * b2 * D3 + 2464 * a2 * b2 * D2 + (5376 * b4 - 21912 * a4) * D1) / (363825 * a2 * b);
            matrixK[19][23] = -(2464 * a2 * b2 * D3 + 1232 * a2 * b2 * D2 + (8964 * a4 - 5760 * b4) * D1) / (1091475 * a * b);
            matrixK[19][24] = (858 * a2 * b2 * D3 + 3894 * a2 * b2 * D2 + (16501 * a4 - 13794 * b4) * D1) / (242550 * a2 * b2);
            matrixK[19][25] = (1430 * a2 * b2 * D3 + 6490 * a2 * b2 * D2 + (5121 * a4 - 6498 * b4) * D1) / (727650 * a * b2);
            matrixK[19][26] = -(308 * a2 * b2 * D3 + 154 * a2 * b2 * D2 + (2407 * a4 - 484 * b4) * D1) / (121275 * a2 * b);
            matrixK[19][27] = -(1540 * a2 * b2 * D3 + 770 * a2 * b2 * D2 + (2241 * a4 - 684 * b4) * D1) / (1091475 * a * b);
            matrixK[19][28] = -(528 * a2 * b2 * D3 + 264 * a2 * b2 * D2 + (5324 * b4 + 6496 * a4) * D1) / (121275 * a2 * b2);
            matrixK[19][29] = -(880 * a2 * b2 * D3 + 440 * a2 * b2 * D2 + (2508 * b4 + 2016 * a4) * D1) / (363825 * a * b2);
            matrixK[19][30] = (88 * a2 * b2 * D3 + 44 * a2 * b2 * D2 + (-726 * b4 - 2320 * a4) * D1) / (121275 * a2 * b);
            matrixK[19][31] = (440 * a2 * b2 * D3 + 220 * a2 * b2 * D2 + (-1026 * b4 - 2160 * a4) * D1) / (1091475 * a * b);
            matrixK[19][32] = (256 * a2 * b2 * D3 + 128 * a2 * b2 * D2 + (-1792 * b4 - 1792 * a4) * D1) / (11025 * a2 * b2);
            matrixK[19][33] = -(1408 * a2 * b2 * D3 + 704 * a2 * b2 * D2 + (21120 * b4 + 8064 * a4) * D1) / (363825 * a * b2);
            matrixK[19][34] = -(1408 * a2 * b2 * D3 + 704 * a2 * b2 * D2 + (8064 * b4 + 21120 * a4) * D1) / (363825 * a2 * b);
            matrixK[19][35] = (704 * a2 * b2 * D3 + 352 * a2 * b2 * D2 + (-8640 * b4 - 8640 * a4) * D1) / (1091475 * a * b);

            matrixK[20][20] = (6262784 * a2 * b2 * D3 + 3131392 * a2 * b2 * D2 + (3748864 * b4 + 7169536 * a4) * D1) / (121275 * a3 * b3);
            matrixK[20][21] = 0;
            matrixK[20][22] = -(146432 * a2 * b2 * D3 + 664576 * a2 * b2 * D2 + (204288 * b4 + 1602304 * a4) * D1) / (121275 * a3 * b2);
            matrixK[20][23] = 0;
            matrixK[20][24] = -(3131392 * a2 * b2 * D3 + 1565696 * a2 * b2 * D2 + (1874432 * b4 - 1120240 * a4) * D1) / (121275 * a3 * b3);
            matrixK[20][25] = -(97856 * a2 * b2 * D3 + 48928 * a2 * b2 * D2 + (468608 * b4 - 112024 * a4) * D1) / (121275 * a2 * b3);
            matrixK[20][26] = (73216 * a2 * b2 * D3 + 332288 * a2 * b2 * D2 + (102144 * b4 - 250360 * a4) * D1) / (121275 * a3 * b2);
            matrixK[20][27] = (2288 * a2 * b2 * D3 + 10384 * a2 * b2 * D2 + (25536 * b4 - 25036 * a4) * D1) / (121275 * a2 * b2);
            matrixK[20][28] = (262144 * a2 * b2 * D3 + 131072 * a2 * b2 * D2 + (-71680 * b4 - 71680 * a4) * D1) / (11025 * a3 * b3);
            matrixK[20][29] = (8192 * a2 * b2 * D3 + 4096 * a2 * b2 * D2 + (-17920 * b4 - 7168 * a4) * D1) / (11025 * a2 * b3);
            matrixK[20][30] = (90112 * a2 * b2 * D3 + 45056 * a2 * b2 * D2 + (-28672 * b4 - 84480 * a4) * D1) / (24255 * a3 * b2);
            matrixK[20][31] = (2816 * a2 * b2 * D3 + 1408 * a2 * b2 * D2 + (-7168 * b4 - 8448 * a4) * D1) / (24255 * a2 * b2);
            matrixK[20][32] = -(524288 * a2 * b2 * D3 + 262144 * a2 * b2 * D2 + (458752 * a4 - 143360 * b4) * D1) / (11025 * a3 * b3);
            matrixK[20][33] = 0;
            matrixK[20][34] = -(180224 * a2 * b2 * D3 + 90112 * a2 * b2 * D2 + (540672 * a4 - 57344 * b4) * D1) / (24255 * a3 * b2);
            matrixK[20][35] = 0;

            matrixK[21][21] = (1565696 * a2 * b2 * D3 + 782848 * a2 * b2 * D2 + (2008320 * b4 + 488832 * a4) * D1) / (363825 * a * b3);
            matrixK[21][22] = 0;
            matrixK[21][23] = -(36608 * a2 * b2 * D3 + 166144 * a2 * b2 * D2 + (109440 * b4 + 109248 * a4) * D1) / (363825 * a * b2);
            matrixK[21][24] = (97856 * a2 * b2 * D3 + 48928 * a2 * b2 * D2 + (200832 * b4 - 40736 * a4) * D1) / (24255 * a2 * b3);
            matrixK[21][25] = -(48928 * a2 * b2 * D3 + 24464 * a2 * b2 * D2 + (45828 * a4 - 502080 * b4) * D1) / (363825 * a * b3);
            matrixK[21][26] = -(2288 * a2 * b2 * D3 + 10384 * a2 * b2 * D2 + (10944 * b4 - 9104 * a4) * D1) / (24255 * a2 * b2);
            matrixK[21][27] = (1144 * a2 * b2 * D3 + 5192 * a2 * b2 * D2 + (10242 * a4 - 27360 * b4) * D1) / (363825 * a * b2);
            matrixK[21][28] = -(90112 * a2 * b2 * D3 + 45056 * a2 * b2 * D2 + (-84480 * b4 - 28672 * a4) * D1) / (24255 * a2 * b3);
            matrixK[21][29] = (45056 * a2 * b2 * D3 + 22528 * a2 * b2 * D2 + (211200 * b4 + 32256 * a4) * D1) / (363825 * a * b3);
            matrixK[21][30] = -(2816 * a2 * b2 * D3 + 1408 * a2 * b2 * D2 + (-3072 * b4 - 3072 * a4) * D1) / (4851 * a2 * b2);
            matrixK[21][31] = (1408 * a2 * b2 * D3 + 704 * a2 * b2 * D2 + (7680 * b4 + 3456 * a4) * D1) / (72765 * a * b2);
            matrixK[21][32] = 0;
            matrixK[21][33] = -(1441792 * a2 * b2 * D3 + 720896 * a2 * b2 * D2 + (344064 * a4 - 844800 * b4) * D1) / (363825 * a * b3);
            matrixK[21][34] = 0;
            matrixK[21][35] = -(45056 * a2 * b2 * D3 + 22528 * a2 * b2 * D2 + (36864 * a4 - 30720 * b4) * D1) / (72765 * a * b2);

            matrixK[22][22] = (315392 * a2 * b2 * D3 + 157696 * a2 * b2 * D2 + (43008 * b4 + 1402368 * a4) * D1) / (363825 * a3 * b);
            matrixK[22][23] = 0;
            matrixK[22][24] = (73216 * a2 * b2 * D3 + 332288 * a2 * b2 * D2 + (102144 * b4 - 250360 * a4) * D1) / (121275 * a3 * b2);
            matrixK[22][25] = (2288 * a2 * b2 * D3 + 10384 * a2 * b2 * D2 + (25536 * b4 - 25036 * a4) * D1) / (121275 * a2 * b2);
            matrixK[22][26] = -(157696 * a2 * b2 * D3 + 78848 * a2 * b2 * D2 + (21504 * b4 - 219120 * a4) * D1) / (363825 * a3 * b);
            matrixK[22][27] = -(4928 * a2 * b2 * D3 + 2464 * a2 * b2 * D2 + (5376 * b4 - 21912 * a4) * D1) / (363825 * a2 * b);
            matrixK[22][28] = -(8192 * a2 * b2 * D3 + 4096 * a2 * b2 * D2 + (-7168 * b4 - 17920 * a4) * D1) / (11025 * a3 * b2);
            matrixK[22][29] = -(256 * a2 * b2 * D3 + 128 * a2 * b2 * D2 + (-1792 * b4 - 1792 * a4) * D1) / (11025 * a2 * b2);
            matrixK[22][30] = (45056 * a2 * b2 * D3 + 22528 * a2 * b2 * D2 + (32256 * b4 + 211200 * a4) * D1) / (363825 * a3 * b);
            matrixK[22][31] = (1408 * a2 * b2 * D3 + 704 * a2 * b2 * D2 + (8064 * b4 + 21120 * a4) * D1) / (363825 * a2 * b);
            matrixK[22][32] = (16384 * a2 * b2 * D3 + 8192 * a2 * b2 * D2 + (114688 * a4 - 14336 * b4) * D1) / (11025 * a3 * b2);
            matrixK[22][33] = 0;
            matrixK[22][34] = -(90112 * a2 * b2 * D3 + 45056 * a2 * b2 * D2 + (64512 * b4 - 1351680 * a4) * D1) / (363825 * a3 * b);
            matrixK[22][35] = 0;

            matrixK[23][23] = (78848 * a2 * b2 * D3 + 39424 * a2 * b2 * D2 + (23040 * b4 + 95616 * a4) * D1) / (1091475 * a * b);
            matrixK[23][24] = -(2288 * a2 * b2 * D3 + 10384 * a2 * b2 * D2 + (10944 * b4 - 9104 * a4) * D1) / (24255 * a2 * b2);
            matrixK[23][25] = (1144 * a2 * b2 * D3 + 5192 * a2 * b2 * D2 + (10242 * a4 - 27360 * b4) * D1) / (363825 * a * b2);
            matrixK[23][26] = (4928 * a2 * b2 * D3 + 2464 * a2 * b2 * D2 + (2304 * b4 - 7968 * a4) * D1) / (72765 * a2 * b);
            matrixK[23][27] = -(2464 * a2 * b2 * D3 + 1232 * a2 * b2 * D2 + (8964 * a4 - 5760 * b4) * D1) / (1091475 * a * b);
            matrixK[23][28] = (2816 * a2 * b2 * D3 + 1408 * a2 * b2 * D2 + (-8448 * b4 - 7168 * a4) * D1) / (24255 * a2 * b2);
            matrixK[23][29] = -(1408 * a2 * b2 * D3 + 704 * a2 * b2 * D2 + (21120 * b4 + 8064 * a4) * D1) / (363825 * a * b2);
            matrixK[23][30] = -(1408 * a2 * b2 * D3 + 704 * a2 * b2 * D2 + (3456 * b4 + 7680 * a4) * D1) / (72765 * a2 * b);
            matrixK[23][31] = (704 * a2 * b2 * D3 + 352 * a2 * b2 * D2 + (-8640 * b4 - 8640 * a4) * D1) / (1091475 * a * b);
            matrixK[23][32] = 0;
            matrixK[23][33] = (45056 * a2 * b2 * D3 + 22528 * a2 * b2 * D2 + (86016 * a4 - 84480 * b4) * D1) / (363825 * a * b2);
            matrixK[23][34] = 0;
            matrixK[23][35] = -(22528 * a2 * b2 * D3 + 11264 * a2 * b2 * D2 + (34560 * b4 - 92160 * a4) * D1) / (1091475 * a * b);

            matrixK[24][24] = (3400496 * a2 * b2 * D3 + 1700248 * a2 * b2 * D2 + (2663116 * b4 + 2663116 * a4) * D1) / (121275 * a3 * b3);
            matrixK[24][25] = (79508 * a2 * b2 * D3 + 360844 * a2 * b2 * D2 + (595174 * b4 + 145122 * a4) * D1) / (121275 * a2 * b3);
            matrixK[24][26] = -(79508 * a2 * b2 * D3 + 360844 * a2 * b2 * D2 + (145122 * b4 + 595174 * a4) * D1) / (121275 * a3 * b2);
            matrixK[24][27] = -(3718 * a2 * b2 * D3 + 31889 * a2 * b2 * D2 + (64866 * b4 + 64866 * a4) * D1) / (242550 * a2 * b2);
            matrixK[24][28] = -(3131392 * a2 * b2 * D3 + 1565696 * a2 * b2 * D2 + (1874432 * a4 - 1120240 * b4) * D1) / (121275 * a3 * b3);
            matrixK[24][29] = -(73216 * a2 * b2 * D3 + 332288 * a2 * b2 * D2 + (102144 * a4 - 250360 * b4) * D1) / (121275 * a2 * b3);
            matrixK[24][30] = -(97856 * a2 * b2 * D3 + 48928 * a2 * b2 * D2 + (200832 * a4 - 40736 * b4) * D1) / (24255 * a3 * b2);
            matrixK[24][31] = -(2288 * a2 * b2 * D3 + 10384 * a2 * b2 * D2 + (10944 * a4 - 9104 * b4) * D1) / (24255 * a2 * b2);
            matrixK[24][32] = (262144 * a2 * b2 * D3 + 131072 * a2 * b2 * D2 + (-71680 * b4 - 71680 * a4) * D1) / (11025 * a3 * b3);
            matrixK[24][33] = -(90112 * a2 * b2 * D3 + 45056 * a2 * b2 * D2 + (-84480 * b4 - 28672 * a4) * D1) / (24255 * a2 * b3);
            matrixK[24][34] = (90112 * a2 * b2 * D3 + 45056 * a2 * b2 * D2 + (-28672 * b4 - 84480 * a4) * D1) / (24255 * a3 * b2);
            matrixK[24][35] = -(2816 * a2 * b2 * D3 + 1408 * a2 * b2 * D2 + (-3072 * b4 - 3072 * a4) * D1) / (4851 * a2 * b2);

            matrixK[25][25] = (171248 * a2 * b2 * D3 + 85624 * a2 * b2 * D2 + (520908 * b4 + 30552 * a4) * D1) / (363825 * a * b3);
            matrixK[25][26] = -(3718 * a2 * b2 * D3 + 274439 * a2 * b2 * D2 + (64866 * b4 + 64866 * a4) * D1) / (242550 * a2 * b2);
            matrixK[25][27] = -(4004 * a2 * b2 * D3 + 18172 * a2 * b2 * D2 + (28386 * b4 + 6828 * a4) * D1) / (363825 * a * b2);
            matrixK[25][28] = -(73216 * a2 * b2 * D3 + 332288 * a2 * b2 * D2 + (102144 * a4 - 250360 * b4) * D1) / (121275 * a2 * b3);
            matrixK[25][29] = -(157696 * a2 * b2 * D3 + 78848 * a2 * b2 * D2 + (21504 * a4 - 219120 * b4) * D1) / (363825 * a * b3);
            matrixK[25][30] = -(2288 * a2 * b2 * D3 + 10384 * a2 * b2 * D2 + (10944 * a4 - 9104 * b4) * D1) / (24255 * a2 * b2);
            matrixK[25][31] = -(4928 * a2 * b2 * D3 + 2464 * a2 * b2 * D2 + (2304 * a4 - 7968 * b4) * D1) / (72765 * a * b2);
            matrixK[25][32] = (8192 * a2 * b2 * D3 + 4096 * a2 * b2 * D2 + (-17920 * b4 - 7168 * a4) * D1) / (11025 * a2 * b3);
            matrixK[25][33] = (45056 * a2 * b2 * D3 + 22528 * a2 * b2 * D2 + (211200 * b4 + 32256 * a4) * D1) / (363825 * a * b3);
            matrixK[25][34] = (2816 * a2 * b2 * D3 + 1408 * a2 * b2 * D2 + (-7168 * b4 - 8448 * a4) * D1) / (24255 * a2 * b2);
            matrixK[25][35] = (1408 * a2 * b2 * D3 + 704 * a2 * b2 * D2 + (7680 * b4 + 3456 * a4) * D1) / (72765 * a * b2);

            matrixK[26][26] = (171248 * a2 * b2 * D3 + 85624 * a2 * b2 * D2 + (30552 * b4 + 520908 * a4) * D1) / (363825 * a3 * b);
            matrixK[26][27] = (4004 * a2 * b2 * D3 + 18172 * a2 * b2 * D2 + (6828 * b4 + 28386 * a4) * D1) / (363825 * a2 * b);
            matrixK[26][28] = (97856 * a2 * b2 * D3 + 48928 * a2 * b2 * D2 + (468608 * a4 - 112024 * b4) * D1) / (121275 * a3 * b2);
            matrixK[26][29] = (2288 * a2 * b2 * D3 + 10384 * a2 * b2 * D2 + (25536 * a4 - 25036 * b4) * D1) / (121275 * a2 * b2);
            matrixK[26][30] = -(48928 * a2 * b2 * D3 + 24464 * a2 * b2 * D2 + (45828 * b4 - 502080 * a4) * D1) / (363825 * a3 * b);
            matrixK[26][31] = -(1144 * a2 * b2 * D3 + 5192 * a2 * b2 * D2 + (10242 * b4 - 27360 * a4) * D1) / (363825 * a2 * b);
            matrixK[26][32] = -(8192 * a2 * b2 * D3 + 4096 * a2 * b2 * D2 + (-7168 * b4 - 17920 * a4) * D1) / (11025 * a3 * b2);
            matrixK[26][33] = (2816 * a2 * b2 * D3 + 1408 * a2 * b2 * D2 + (-8448 * b4 - 7168 * a4) * D1) / (24255 * a2 * b2);
            matrixK[26][34] = (45056 * a2 * b2 * D3 + 22528 * a2 * b2 * D2 + (32256 * b4 + 211200 * a4) * D1) / (363825 * a3 * b);
            matrixK[26][35] = -(1408 * a2 * b2 * D3 + 704 * a2 * b2 * D2 + (3456 * b4 + 7680 * a4) * D1) / (72765 * a2 * b);

            matrixK[27][27] = (8624 * a2 * b2 * D3 + 4312 * a2 * b2 * D2 + (5976 * b4 + 5976 * a4) * D1) / (1091475 * a * b);
            matrixK[27][28] = (2288 * a2 * b2 * D3 + 10384 * a2 * b2 * D2 + (25536 * a4 - 25036 * b4) * D1) / (121275 * a2 * b2);
            matrixK[27][29] = (4928 * a2 * b2 * D3 + 2464 * a2 * b2 * D2 + (5376 * a4 - 21912 * b4) * D1) / (363825 * a * b2);
            matrixK[27][30] = -(1144 * a2 * b2 * D3 + 5192 * a2 * b2 * D2 + (10242 * b4 - 27360 * a4) * D1) / (363825 * a2 * b);
            matrixK[27][31] = -(2464 * a2 * b2 * D3 + 1232 * a2 * b2 * D2 + (8964 * b4 - 5760 * a4) * D1) / (1091475 * a * b);
            matrixK[27][32] = -(256 * a2 * b2 * D3 + 128 * a2 * b2 * D2 + (-1792 * b4 - 1792 * a4) * D1) / (11025 * a2 * b2);
            matrixK[27][33] = -(1408 * a2 * b2 * D3 + 704 * a2 * b2 * D2 + (21120 * b4 + 8064 * a4) * D1) / (363825 * a * b2);
            matrixK[27][34] = (1408 * a2 * b2 * D3 + 704 * a2 * b2 * D2 + (8064 * b4 + 21120 * a4) * D1) / (363825 * a2 * b);
            matrixK[27][35] = (704 * a2 * b2 * D3 + 352 * a2 * b2 * D2 + (-8640 * b4 - 8640 * a4) * D1) / (1091475 * a * b);

            matrixK[28][28] = (6262784 * a2 * b2 * D3 + 3131392 * a2 * b2 * D2 + (7169536 * b4 + 3748864 * a4) * D1) / (121275 * a3 * b3);
            matrixK[28][29] = (146432 * a2 * b2 * D3 + 664576 * a2 * b2 * D2 + (1602304 * b4 + 204288 * a4) * D1) / (121275 * a2 * b3);
            matrixK[28][30] = 0;
            matrixK[28][31] = 0;
            matrixK[28][32] = -(524288 * a2 * b2 * D3 + 262144 * a2 * b2 * D2 + (458752 * b4 - 143360 * a4) * D1) / (11025 * a3 * b3);
            matrixK[28][33] = (180224 * a2 * b2 * D3 + 90112 * a2 * b2 * D2 + (540672 * b4 - 57344 * a4) * D1) / (24255 * a2 * b3);
            matrixK[28][34] = 0;
            matrixK[28][35] = 0;

            matrixK[29][29] = (315392 * a2 * b2 * D3 + 157696 * a2 * b2 * D2 + (1402368 * b4 + 43008 * a4) * D1) / (363825 * a * b3);
            matrixK[29][30] = 0;
            matrixK[29][31] = 0;
            matrixK[29][32] = -(16384 * a2 * b2 * D3 + 8192 * a2 * b2 * D2 + (114688 * b4 - 14336 * a4) * D1) / (11025 * a2 * b3);
            matrixK[29][33] = -(90112 * a2 * b2 * D3 + 45056 * a2 * b2 * D2 + (64512 * a4 - 1351680 * b4) * D1) / (363825 * a * b3);
            matrixK[29][34] = 0;
            matrixK[29][35] = 0;

            matrixK[30][30] = (1565696 * a2 * b2 * D3 + 782848 * a2 * b2 * D2 + (488832 * b4 + 2008320 * a4) * D1) / (363825 * a3 * b);
            matrixK[30][31] = (36608 * a2 * b2 * D3 + 166144 * a2 * b2 * D2 + (109248 * b4 + 109440 * a4) * D1) / (363825 * a2 * b);
            matrixK[30][32] = 0;
            matrixK[30][33] = 0;
            matrixK[30][34] = -(1441792 * a2 * b2 * D3 + 720896 * a2 * b2 * D2 + (344064 * b4 - 844800 * a4) * D1) / (363825 * a3 * b);
            matrixK[30][35] = (45056 * a2 * b2 * D3 + 22528 * a2 * b2 * D2 + (36864 * b4 - 30720 * a4) * D1) / (72765 * a2 * b);

            matrixK[31][31] = (78848 * a2 * b2 * D3 + 39424 * a2 * b2 * D2 + (95616 * b4 + 23040 * a4) * D1) / (1091475 * a * b);
            matrixK[31][32] = 0;
            matrixK[31][33] = 0;
            matrixK[31][34] = -(45056 * a2 * b2 * D3 + 22528 * a2 * b2 * D2 + (86016 * b4 - 84480 * a4) * D1) / (363825 * a2 * b);
            matrixK[31][35] = -(22528 * a2 * b2 * D3 + 11264 * a2 * b2 * D2 + (34560 * a4 - 92160 * b4) * D1) / (1091475 * a * b);

            matrixK[32][32] = (1048576 * a2 * b2 * D3 + 524288 * a2 * b2 * D2 + (917504 * b4 + 917504 * a4) * D1) / (11025 * a3 * b3);
            matrixK[32][33] = 0;
            matrixK[32][34] = 0;
            matrixK[32][35] = 0;

            matrixK[33][33] = (2883584 * a2 * b2 * D3 + 1441792 * a2 * b2 * D2 + (5406720 * b4 + 688128 * a4) * D1) / (363825 * a * b3);
            matrixK[33][34] = 0;
            matrixK[33][35] = 0;

            matrixK[34][34] = (2883584 * a2 * b2 * D3 + 1441792 * a2 * b2 * D2 + (688128 * b4 + 5406720 * a4) * D1) / (363825 * a3 * b);
            matrixK[34][35] = 0;

            matrixK[35][35] = (720896 * a2 * b2 * D3 + 360448 * a2 * b2 * D2 + (368640 * b4 + 368640 * a4) * D1) / (1091475 * a * b);

            //Preenchimento da matriz triangular inferior
            for (int i = 0; i < 36; i++) {
                for (int j = 0; j < i; j++) {
                    matrixK[i][j] = matrixK[j][i];
                }
            }
        } else {
            matrixK = null;
        }

        return matrixK;
    }
}
